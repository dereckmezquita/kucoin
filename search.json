[{"path":[]},{"path":"https://dereckmezquita.github.io/kucoin/TODO.html","id":"expand-data-requests","dir":"","previous_headings":"","what":"Expand data requests","title":"To do","text":"want also get data back order book: https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BTC-USDT information : https://docs.kucoin.com/#get-part-order-book-aggregated","code":"{\"code\":\"200000\",\"data\":{\"time\":1668830318710,\"sequence\":\"2829819736\",\"bids\":[[\"16630\",\"1.84235692\"],[\"16629.9\",\"0.81988937\"],[\"16629.8\",\"1.68781972\"],[\"16629.7\",\"0.37254729\"],[\"16629.6\",\"1.14461534\"],[\"16629.5\",\"0.00800145\"],[\"16629.4\",\"0.00283734\"],[\"16629.3\",\"0.00283734\"],[\"16629.2\",\"0.56890442\"],[\"16629.1\",\"0.00283734\"],[\"16629\",\"0.00283734\"],[\"16628.9\",\"0.00283734\"],[\"16628.8\",\"0.00283734\"],[\"16628.7\",\"0.00283734\"],[\"16628.6\",\"0.00283734\"],[\"16628.5\",\"0.00477242\"],[\"16628.4\",\"0.01095476\"],[\"16628.3\",\"0.00030384\"],[\"16627.7\",\"0.01762713\"],[\"16627.6\",\"0.5384706\"]],\"asks\":[[\"16630.1\",\"1.00440277\"],[\"16630.2\",\"0.56454026\"],[\"16630.3\",\"0.16283734\"],[\"16630.4\",\"0.00283734\"],[\"16630.5\",\"0.00283734\"],[\"16630.6\",\"0.12430513\"],[\"16630.7\",\"0.00318288\"],[\"16630.8\",\"0.00285825\"],[\"16630.9\",\"0.00283734\"],[\"16631\",\"0.72610054\"],[\"16631.1\",\"0.00283734\"],[\"16631.2\",\"0.59191166\"],[\"16631.3\",\"0.32773334\"],[\"16631.4\",\"0.02283734\"],[\"16631.8\",\"0.01475415\"],[\"16631.9\",\"0.90837827\"],[\"16632\",\"1.00779475\"],[\"16632.3\",\"0.0187\"],[\"16632.4\",\"0.11582103\"],[\"16632.5\",\"1.12561737\"]]}}"},{"path":"https://dereckmezquita.github.io/kucoin/TODO.html","id":"reasses-types-passed-to-api","dir":"","previous_headings":"","what":"Reasses types passed to api","title":"To do","text":"https://docs.kucoin.com/#request","code":"Types  Timestamps  Unless otherwise specified, all timestamps from API are returned in milliseconds(e.g. 1546658861000). Most modern languages and libraries will handle this without issues.  But please note that the timestamps between the matching engine and the order system are in nanoseconds.  Numbers  Decimal numbers are returned as strings in order to preserve the full precision across platforms. When making a request, it is recommended that you also convert your numbers to strings to avoid truncation and precision errors."},{"path":"https://dereckmezquita.github.io/kucoin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dereck Mezquita. Author, maintainer.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mezquita D (2024). kucoin: R API KuCoin Crytocurrency Exchange Market. R package version 0.1.0, https://github.com/dereckmezquita/kucoin.","code":"@Manual{,   title = {kucoin: R API to KuCoin Crytocurrency Exchange Market},   author = {Dereck Mezquita},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/dereckmezquita/kucoin}, }"},{"path":[]},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R API to KuCoin Crytocurrency Exchange Market","text":"can install development version kucoin using:","code":"# install.packages(\"remotes\") remotes::install_github(\"dereckmezquita/kucoin\")"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"R API to KuCoin Crytocurrency Exchange Market","text":"details tutorials see documentation TUTORIALS.","code":"# import library library(\"kucoin\")"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"api-authorisation","dir":"","previous_headings":"Getting Started","what":"API Authorisation","title":"R API to KuCoin Crytocurrency Exchange Market","text":"functions package require permissioned access need proper API key, secret, passphrase. don’t key, need information, visit Generating API Key. Current functions need API authorisation : kucoin::cancel_all_orders kucoin::cancel_order kucoin::get_orders_all kucoin::get_account_balances kucoin::get_deposit_address kucoin::get_orders_by_id kucoin::submit_limit_order kucoin::submit_market_order","code":""},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"setting-up-api-key","dir":"","previous_headings":"Getting Started > API Authorisation","what":"Setting-up API Key","title":"R API to KuCoin Crytocurrency Exchange Market","text":"Use .Renviron file set API key. .Renviron file, insert API key details follow: KC-API-ENDPOINT variable optional. used allow user access KuCoin’s sandbox API paper trading. set real API used default: https://openapi-sandbox.kucoin.com https://api.kucoin.com/","code":"# sandbox has been deprecated see kucoin documentation for more information KC-API-ENDPOINT = https://openapi-sandbox.kucoin.com  KC-API-KEY = XXXXXXXXXX KC-API-SECRET = XXXXXXXXXX KC-API-PASSPHRASE = XXXXXXXXXX"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"market-data","dir":"","previous_headings":"Getting Started","what":"Market Data","title":"R API to KuCoin Crytocurrency Exchange Market","text":"market data publicly accessible, accessed without API authorisation. getting historical data, can use kucoin::get_market_data(): kucoin::get_market_data() function also supports querying multiple symbols: can also get recent metadata symbols using kucoin::get_market_metadata():","code":"# get one pair of symbol prices prices <- kucoin::get_market_data(     symbols = \"KCS/USDT\",     from = \"2022-10-05 00:00:00\",     to = \"2022-11-06 00:00:00\",     frequency = \"1 hour\" )  prices #>        symbol            datetime   open   high    low  close   volume #>        <char>              <POSc>  <num>  <num>  <num>  <num>    <num> #>   1: KCS/USDT 2022-10-05 00:00:00  9.208  9.214  9.155  9.162 3753.287 #>   2: KCS/USDT 2022-10-05 01:00:00  9.162  9.174  9.156  9.164 1946.244 #>   3: KCS/USDT 2022-10-05 02:00:00  9.164  9.173  9.152  9.156 1885.309 #>  ---                                                                   #> 766: KCS/USDT 2022-11-05 21:00:00 10.221 10.221 10.190 10.200 1628.069 #> 767: KCS/USDT 2022-11-05 22:00:00 10.201 10.256 10.201 10.212 2743.678 #> 768: KCS/USDT 2022-11-05 23:00:00 10.212 10.231 10.173 10.221 7536.361 #> 1 variable(s) not shown: [turnover <num>] # get one pair of symbol prices prices <- kucoin::get_market_data(     symbols = c(\"KCS/USDT\", \"BTC/USDT\", \"KCS/BTC\"),     from = \"2022-10-05 00:00:00\",     to = \"2022-11-06 00:00:00\",     frequency = \"1 hour\" )  prices #>         symbol            datetime      open      high       low     close #>         <char>              <POSc>     <num>     <num>     <num>     <num> #>    1: KCS/USDT 2022-10-05 00:00:00 9.2080000 9.2140000 9.1550000 9.1620000 #>    2: KCS/USDT 2022-10-05 01:00:00 9.1620000 9.1740000 9.1560000 9.1640000 #>    3: KCS/USDT 2022-10-05 02:00:00 9.1640000 9.1730000 9.1520000 9.1560000 #>   ---                                                                      #> 2302:  KCS/BTC 2022-11-05 21:00:00 0.0004785 0.0004790 0.0004781 0.0004782 #> 2303:  KCS/BTC 2022-11-05 22:00:00 0.0004782 0.0004803 0.0004782 0.0004795 #> 2304:  KCS/BTC 2022-11-05 23:00:00 0.0004795 0.0004802 0.0004783 0.0004800 #> 2 variable(s) not shown: [volume <num>, turnover <num>] # get all symbols' most recent metadata metadata <- kucoin::get_market_metadata()  metadata #>           symbol       name base_currency quote_currency fee_currency market #>           <char>     <char>        <char>         <char>       <char> <char> #>    1:  1CAT/USDT  1CAT/USDT          1CAT           USDT         USDT   USDS #>    2: 1INCH/USDT 1INCH/USDT         1INCH           USDT         USDT   USDS #>    3:    AA/USDT    AA/USDT            AA           USDT         USDT   USDS #>   ---                                                                        #> 1263:   ZRO/USDT   ZRO/USDT           ZRO           USDT         USDT   USDS #> 1264:    ZRX/BTC    ZRX/BTC           ZRX            BTC          BTC   DeFi #> 1265:   ZRX/USDT   ZRX/USDT           ZRX           USDT         USDT   USDS #> 11 variable(s) not shown: [base_min_size <num>, quote_min_size <num>, base_max_size <num>, quote_max_size <num>, base_increment <num>, quote_increment <num>, price_increment <num>, price_limit_rate <num>, min_funds <num>, is_margin_enabled <lgcl>, ...]"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"get-user-information","dir":"","previous_headings":"Getting Started","what":"Get User Information","title":"R API to KuCoin Crytocurrency Exchange Market","text":"user information data private, needs API authorisation. get balance information can use kucoin::get_account_balances():","code":"# get user's balance details balances <- kucoin::get_account_balances()  balances"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"post-an-order","dir":"","previous_headings":"Getting Started","what":"Post an Order","title":"R API to KuCoin Crytocurrency Exchange Market","text":"order posting functions private, need API authorisation.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"market-order","dir":"","previous_headings":"Getting Started > Post an Order","what":"Market Order","title":"R API to KuCoin Crytocurrency Exchange Market","text":"example posting market order:","code":"# post a market order: buy 1 KCS order_id <- kucoin::submit_market_order(     symbol = \"KCS/BTC\",     side = \"buy\",     base_size = 1 )  order_id"},{"path":"https://dereckmezquita.github.io/kucoin/index.html","id":"limit-order","dir":"","previous_headings":"Getting Started > Post an Order","what":"Limit Order","title":"R API to KuCoin Crytocurrency Exchange Market","text":"example posting limit order:","code":"# post a limit order: buy 1 KCS order_id <- submit_limit_order(     symbol = \"KCS/BTC\",     side = \"buy\",     base_size = 1 )  order_id"},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel all order(s) for a symbol — cancel_all_orders","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"TODO: development.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"","code":"cancel_all_orders(symbols = NULL, tradeType = NULL, delay = 0, retries = 3)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"symbols character vector one symbols; format \"BTC/USDT\" (optional - default NULL). tradeType character vector one either \"TRADE\" \"MARGIN_ISOLATED_TRADE\" (optional - default NULL). delay numeric value delay data request milliseconds (optional - default 0). retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"Success returns character vector n order id(s) (designated KuCoin).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"endpoint requires Trade permission. API restricted account, request rate limit 3 times/3s.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"information see documentation: KuCoin - cancel--orders TODO: symbols provided cancel ","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_all_orders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel all order(s) for a symbol — cancel_all_orders","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  symbol <- \"ETH/USDT\"  # check balances balances <- kucoin::get_kucoin_balances(); balances  order_id <- kucoin::post_kucoin_limit_order(     symbol = symbol,     side = \"sell\",     base_size = 1,     price = 1000000 ); order_id  order_id2 <- kucoin::post_kucoin_limit_order(     symbol = symbol,     side = \"sell\",     base_size = 1,     price = 1000000 ); order_id  # see funds on hold balances2 <- kucoin::get_kucoin_balances(); balances2  # cancel all orders for symbol cancelled <- kucoin::cancel_all_orders(symbol); cancelled  # cancel all orders for all symbols and trade types cancelled <- kucoin::cancel_all_orders(); cancelled  # see funds released balances3 <- kucoin::get_kucoin_balances(); balances3  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel order(s) — cancel_order","title":"Cancel order(s) — cancel_order","text":"Cancel order(s)","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel order(s) — cancel_order","text":"","code":"cancel_order(orderIds = NULL, delay = 0, retries = 3)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel order(s) — cancel_order","text":"orderIds character vector one contains order id(s) designated KuCoin (required - default NULL). delay numeric value delay data request milliseconds (optional - default 0). retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel order(s) — cancel_order","text":"success returns character vector n order id(s); designated KuCoin.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cancel order(s) — cancel_order","text":"endpoint requires Trade permission. API restricted account, request rate limit 60 times/3s. interface cancellation requests. cancellation result needs obtained querying order status, can use get_orders_by_id(). recommended cancel order receiving Open message, otherwise order cancelled successfully.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Cancel order(s) — cancel_order","text":"information see documentation: KuCoin - cancel-order","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/cancel_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel order(s) — cancel_order","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  # set a limit order order_id1 <- kucoin::post_kucoin_limit_order(    symbol = \"ETH/USDT\",    side = \"sell\",    base_size = 1,    price = 100000 )  order_id2 <- kucoin::post_kucoin_limit_order(    symbol = \"ETH/USDT\",    side = \"sell\",    base_size = 1,    price = 100000 )  # get order details cancelled <- kucoin::cancel_order(c(order_id1, order_id2))  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_account_balances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get user's balance(s) list — get_account_balances","title":"Get user's balance(s) list — get_account_balances","text":"Get user's balance(s) list","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_account_balances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get user's balance(s) list — get_account_balances","text":"","code":"get_account_balances(currency = NULL, type = NULL)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_account_balances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get user's balance(s) list — get_account_balances","text":"currency character vector one currency symbol (optional). type character vector one indicating \"main\" \"trade\" account type (optional).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_account_balances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get user's balance(s) list — get_account_balances","text":"data.table containing balance details","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_account_balances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get user's balance(s) list — get_account_balances","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  # get user's balance details kucoin::get_account_balances()  # get user's balance details for BTC only kucoin::get_account_balances(currency = \"BTC\")  # get user's balance details for trade account only kucoin::get_account_balances(type = \"trade\")  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get currencies' details — get_currency_details","title":"Get currencies' details — get_currency_details","text":"Get currencies' details. includes chains available depositing; function useful generating deposit address use get_deposit_address().","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get currencies' details — get_currency_details","text":"","code":"get_currency_details(currencies = NULL)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get currencies' details — get_currency_details","text":"currencies character vector specify currencies get details (required - default NULL).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get currencies' details — get_currency_details","text":"data.table currency information","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get currencies' details — get_currency_details","text":"information see documentation: KuCoin - get-currency-detail Using v2 api.","code":""},{"path":[]},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_currency_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get currencies' details — get_currency_details","text":"","code":"# get a currencies' details kucoin::get_currency_details(c(\"BTC\", \"XMR\")) #>    currency   name full_name precision is_margin_enabled is_debit_enabled #>      <char> <char>    <char>     <int>            <lgcl>           <lgcl> #> 1:      BTC    BTC   Bitcoin         8              TRUE             TRUE #> 2:      BTC    BTC   Bitcoin         8              TRUE             TRUE #> 3:      BTC    BTC   Bitcoin         8              TRUE             TRUE #> 4:      BTC    BTC   Bitcoin         8              TRUE             TRUE #> 5:      XMR    XMR    Monero         8             FALSE             TRUE #>           chain_name  chain withdrawal_min_size deposit_min_size #>               <char> <char>              <char>           <char> #> 1:               BTC    btc              0.0012           0.0002 #> 2: Lightning Network  btcln             0.00001          0.00001 #> 3:               KCC    kcc              0.0008             <NA> #> 4:        BTC-Segwit bech32              0.0008           0.0002 #> 5:               XMR    xmr               0.007             <NA> #>    withdraw_fee_rate withdraw_max_fee withdrawal_min_fee is_withdraw_enabled #>               <char>           <lgcl>             <char>              <lgcl> #> 1:                 0               NA             0.0006                TRUE #> 2:                 0               NA           0.000015                TRUE #> 3:                 0               NA            0.00002                TRUE #> 4:                 0               NA             0.0005               FALSE #> 5:                 0               NA              0.005                TRUE #>    is_deposit_enabled confirms pre_confirms #>                <lgcl>    <int>        <int> #> 1:               TRUE        3            1 #> 2:               TRUE        1            1 #> 3:               TRUE       20           20 #> 4:               TRUE        2            2 #> 5:               TRUE       12           12 #>                              contract_address #>                                        <char> #> 1:                                            #> 2:                                            #> 3: 0xfa93c12cd345c658bc4644d1d4e1b9615952258c #> 4:                                            #> 5:"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a deposit address for a currency — get_deposit_address","title":"Get a deposit address for a currency — get_deposit_address","text":"Get deposit address currency. function useful generating deposit address currency. Note must provide chain (network) use deposit address. can obtained use get_currency_details().","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a deposit address for a currency — get_deposit_address","text":"","code":"get_deposit_address(currency = NULL, chain = NULL)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a deposit address for a currency — get_deposit_address","text":"currency character vector length 1 specify currencies get deposit addresses (required - default NULL) chain character vector length 1 specify chain (network) use deposit address (required - default NULL).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a deposit address for a currency — get_deposit_address","text":"data.table containing deposit address information","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a deposit address for a currency — get_deposit_address","text":"information see documentation: KucCoin - get-deposit-addresses-v2.","code":""},{"path":[]},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_deposit_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a deposit address for a currency — get_deposit_address","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  # check market metadata kucoin::get_currency_details(\"BTC\")  # get a deposit address for a currency deposit_address <- kucoin::get_deposit_address(\"BTC\", \"btc\")  # quick check deposit_address  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_kucoin_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current KuCoin API server time — get_kucoin_time","title":"Get current KuCoin API server time — get_kucoin_time","text":"Get current KuCoin API server time","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_kucoin_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current KuCoin API server time — get_kucoin_time","text":"","code":"get_kucoin_time(raw = FALSE)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_kucoin_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current KuCoin API server time — get_kucoin_time","text":"raw logical vector specify whether return raw results . default FALSE.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_kucoin_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current KuCoin API server time — get_kucoin_time","text":"datetime object","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_kucoin_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current KuCoin API server time — get_kucoin_time","text":"","code":"# import library library(\"kucoin\")  # get current server time get_kucoin_time() #> [1] \"2024-08-04 01:27:10 UTC\""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historical market data for symbols — get_market_data","title":"Get historical market data for symbols — get_market_data","text":"Get historical market data symbols","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historical market data for symbols — get_market_data","text":"","code":"get_market_data(   symbols = NULL,   from = NULL,   to = NULL,   frequency = NULL,   delay = 0,   retries = 3 )"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historical market data for symbols — get_market_data","text":"symbols character vector one pair symbol (required - default NULL). character valid date/datetime format, date/datetime object start datetime range (required - default NULL). character valid date/datetime format, date/datetime object end datetime range (required - default NULL). frequency character vector one specify frequency option, see details information (required - default NULL). delay numeric value delay data request milliseconds (optional - default 0). retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get historical market data for symbols — get_market_data","text":"data.table price data","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get historical market data for symbols — get_market_data","text":"several supported frequencies: \"1 minute\" \"3 minutes\" \"5 minutes\" \"15 minutes\" \"30 minutes\" \"1 hour\" \"2 hours\" \"4 hours\" \"6 hours\" \"8 hours\" \"12 hours\" \"1 day\" \"1 week\"","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Get historical market data for symbols — get_market_data","text":"information see documentation: KuCoin - get-klines","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historical market data for symbols — get_market_data","text":"","code":"# get one symbol kucoin::get_market_data(     symbols = \"BTC/USDT\",     from = \"2022-11-05 00:00:00\",     to = \"2022-11-06 00:00:00\",     frequency = \"1 hour\" ) #>       symbol            datetime    open    high     low   close    volume #>       <char>              <POSc>   <num>   <num>   <num>   <num>     <num> #>  1: BTC/USDT 2022-11-05 00:00:00 21144.0 21456.0 21077.7 21436.8 1286.8395 #>  2: BTC/USDT 2022-11-05 01:00:00 21436.6 21455.2 21315.1 21364.5  631.8531 #>  3: BTC/USDT 2022-11-05 02:00:00 21364.4 21413.1 21342.9 21384.3  435.5556 #>  4: BTC/USDT 2022-11-05 03:00:00 21384.4 21480.0 21373.7 21445.1  736.9410 #>  5: BTC/USDT 2022-11-05 04:00:00 21445.0 21467.0 21363.7 21365.1  392.5327 #>  6: BTC/USDT 2022-11-05 05:00:00 21365.6 21430.8 21365.0 21391.0  412.2512 #>  7: BTC/USDT 2022-11-05 06:00:00 21391.0 21445.3 21372.8 21402.4  320.0829 #>  8: BTC/USDT 2022-11-05 07:00:00 21401.6 21414.8 21381.0 21385.6  282.8574 #>  9: BTC/USDT 2022-11-05 08:00:00 21385.7 21389.6 21230.7 21291.7  803.1178 #> 10: BTC/USDT 2022-11-05 09:00:00 21290.6 21324.7 21235.4 21289.2  431.6739 #> 11: BTC/USDT 2022-11-05 10:00:00 21289.1 21321.7 21279.6 21318.1  303.0455 #> 12: BTC/USDT 2022-11-05 11:00:00 21318.7 21425.1 21311.5 21402.6  639.8064 #> 13: BTC/USDT 2022-11-05 12:00:00 21402.8 21419.6 21289.2 21310.3  513.6069 #> 14: BTC/USDT 2022-11-05 13:00:00 21310.3 21325.1 21245.0 21268.7  434.5345 #> 15: BTC/USDT 2022-11-05 14:00:00 21269.2 21332.7 21210.1 21282.7  596.1384 #> 16: BTC/USDT 2022-11-05 15:00:00 21281.3 21358.2 21268.0 21298.6  536.4977 #> 17: BTC/USDT 2022-11-05 16:00:00 21299.3 21345.2 21298.1 21324.5  377.3549 #> 18: BTC/USDT 2022-11-05 17:00:00 21324.0 21335.0 21267.4 21318.0  386.4274 #> 19: BTC/USDT 2022-11-05 18:00:00 21318.0 21348.0 21260.3 21291.9  491.5955 #> 20: BTC/USDT 2022-11-05 19:00:00 21292.0 21344.3 21284.1 21331.2  351.5463 #> 21: BTC/USDT 2022-11-05 20:00:00 21331.3 21380.4 21320.4 21350.7  297.1821 #> 22: BTC/USDT 2022-11-05 21:00:00 21350.6 21359.0 21322.2 21334.9  174.3055 #> 23: BTC/USDT 2022-11-05 22:00:00 21334.9 21346.2 21287.1 21296.9  270.1990 #> 24: BTC/USDT 2022-11-05 23:00:00 21296.9 21315.8 21234.8 21297.8  421.1061 #>       symbol            datetime    open    high     low   close    volume #>     turnover #>        <num> #>  1: 27384270 #>  2: 13496892 #>  3:  9307688 #>  4: 15785774 #>  5:  8410830 #>  6:  8822156 #>  7:  6851213 #>  8:  6052171 #>  9: 17112494 #> 10:  9187757 #> 11:  6455634 #> 12: 13683262 #> 13: 10960759 #> 14:  9249235 #> 15: 12679601 #> 16: 11433332 #> 17:  8045647 #> 18:  8234619 #> 19: 10471987 #> 20:  7493677 #> 21:  6342940 #> 22:  3719457 #> 23:  5759956 #> 24:  8959366 #>     turnover  # get multiple symbols kucoin::get_market_data(     symbols = c(\"BTC/USDT\", \"XMR/BTC\", \"KCS/USDT\"),     from = \"2022-11-05 00:00:00\",     to = \"2022-11-06 00:00:00\",     frequency = \"1 hour\" ) #>       symbol            datetime        open        high         low #>       <char>              <POSc>       <num>       <num>       <num> #>  1: BTC/USDT 2022-11-05 00:00:00 2.11440e+04 2.14560e+04 2.10777e+04 #>  2: BTC/USDT 2022-11-05 01:00:00 2.14366e+04 2.14552e+04 2.13151e+04 #>  3: BTC/USDT 2022-11-05 02:00:00 2.13644e+04 2.14131e+04 2.13429e+04 #>  4: BTC/USDT 2022-11-05 03:00:00 2.13844e+04 2.14800e+04 2.13737e+04 #>  5: BTC/USDT 2022-11-05 04:00:00 2.14450e+04 2.14670e+04 2.13637e+04 #>  6: BTC/USDT 2022-11-05 05:00:00 2.13656e+04 2.14308e+04 2.13650e+04 #>  7: BTC/USDT 2022-11-05 06:00:00 2.13910e+04 2.14453e+04 2.13728e+04 #>  8: BTC/USDT 2022-11-05 07:00:00 2.14016e+04 2.14148e+04 2.13810e+04 #>  9: BTC/USDT 2022-11-05 08:00:00 2.13857e+04 2.13896e+04 2.12307e+04 #> 10: BTC/USDT 2022-11-05 09:00:00 2.12906e+04 2.13247e+04 2.12354e+04 #> 11: BTC/USDT 2022-11-05 10:00:00 2.12891e+04 2.13217e+04 2.12796e+04 #> 12: BTC/USDT 2022-11-05 11:00:00 2.13187e+04 2.14251e+04 2.13115e+04 #> 13: BTC/USDT 2022-11-05 12:00:00 2.14028e+04 2.14196e+04 2.12892e+04 #> 14: BTC/USDT 2022-11-05 13:00:00 2.13103e+04 2.13251e+04 2.12450e+04 #> 15: BTC/USDT 2022-11-05 14:00:00 2.12692e+04 2.13327e+04 2.12101e+04 #> 16: BTC/USDT 2022-11-05 15:00:00 2.12813e+04 2.13582e+04 2.12680e+04 #> 17: BTC/USDT 2022-11-05 16:00:00 2.12993e+04 2.13452e+04 2.12981e+04 #> 18: BTC/USDT 2022-11-05 17:00:00 2.13240e+04 2.13350e+04 2.12674e+04 #> 19: BTC/USDT 2022-11-05 18:00:00 2.13180e+04 2.13480e+04 2.12603e+04 #> 20: BTC/USDT 2022-11-05 19:00:00 2.12920e+04 2.13443e+04 2.12841e+04 #> 21: BTC/USDT 2022-11-05 20:00:00 2.13313e+04 2.13804e+04 2.13204e+04 #> 22: BTC/USDT 2022-11-05 21:00:00 2.13506e+04 2.13590e+04 2.13222e+04 #> 23: BTC/USDT 2022-11-05 22:00:00 2.13349e+04 2.13462e+04 2.12871e+04 #> 24: BTC/USDT 2022-11-05 23:00:00 2.12969e+04 2.13158e+04 2.12348e+04 #> 25:  XMR/BTC 2022-11-05 00:00:00 7.50000e-03 7.52100e-03 7.43300e-03 #> 26:  XMR/BTC 2022-11-05 01:00:00 7.49000e-03 7.52200e-03 7.46000e-03 #> 27:  XMR/BTC 2022-11-05 02:00:00 7.48100e-03 7.51800e-03 7.43500e-03 #> 28:  XMR/BTC 2022-11-05 03:00:00 7.50700e-03 7.51400e-03 7.44800e-03 #> 29:  XMR/BTC 2022-11-05 04:00:00 7.46800e-03 7.50700e-03 7.46500e-03 #> 30:  XMR/BTC 2022-11-05 05:00:00 7.50400e-03 7.52700e-03 7.46700e-03 #> 31:  XMR/BTC 2022-11-05 06:00:00 7.52100e-03 7.57000e-03 7.52100e-03 #> 32:  XMR/BTC 2022-11-05 07:00:00 7.56400e-03 7.56400e-03 7.47700e-03 #> 33:  XMR/BTC 2022-11-05 08:00:00 7.52700e-03 7.53200e-03 7.49100e-03 #> 34:  XMR/BTC 2022-11-05 09:00:00 7.51700e-03 7.53400e-03 7.49600e-03 #> 35:  XMR/BTC 2022-11-05 10:00:00 7.51700e-03 7.52500e-03 7.50300e-03 #> 36:  XMR/BTC 2022-11-05 11:00:00 7.50800e-03 7.54000e-03 7.49800e-03 #> 37:  XMR/BTC 2022-11-05 12:00:00 7.50700e-03 7.52900e-03 7.48500e-03 #> 38:  XMR/BTC 2022-11-05 13:00:00 7.51000e-03 7.52200e-03 7.47500e-03 #> 39:  XMR/BTC 2022-11-05 14:00:00 7.49600e-03 7.49600e-03 7.42800e-03 #> 40:  XMR/BTC 2022-11-05 15:00:00 7.44000e-03 7.46500e-03 7.42300e-03 #> 41:  XMR/BTC 2022-11-05 16:00:00 7.45800e-03 7.48400e-03 7.44700e-03 #> 42:  XMR/BTC 2022-11-05 17:00:00 7.47300e-03 7.48400e-03 7.44500e-03 #> 43:  XMR/BTC 2022-11-05 18:00:00 7.44900e-03 7.45100e-03 7.42000e-03 #> 44:  XMR/BTC 2022-11-05 19:00:00 7.43000e-03 7.44400e-03 7.40800e-03 #> 45:  XMR/BTC 2022-11-05 20:00:00 7.42100e-03 7.44100e-03 7.40500e-03 #> 46:  XMR/BTC 2022-11-05 21:00:00 7.41800e-03 7.44400e-03 7.41100e-03 #> 47:  XMR/BTC 2022-11-05 22:00:00 7.41500e-03 7.42800e-03 7.40100e-03 #> 48:  XMR/BTC 2022-11-05 23:00:00 7.42300e-03 7.44800e-03 7.37100e-03 #> 49: KCS/USDT 2022-11-05 00:00:00 1.04130e+01 1.04850e+01 1.01020e+01 #> 50: KCS/USDT 2022-11-05 01:00:00 1.01540e+01 1.02370e+01 1.01450e+01 #> 51: KCS/USDT 2022-11-05 02:00:00 1.02370e+01 1.02510e+01 1.02240e+01 #> 52: KCS/USDT 2022-11-05 03:00:00 1.02490e+01 1.02670e+01 1.02010e+01 #> 53: KCS/USDT 2022-11-05 04:00:00 1.02140e+01 1.02370e+01 1.02060e+01 #> 54: KCS/USDT 2022-11-05 05:00:00 1.02120e+01 1.02730e+01 1.02110e+01 #> 55: KCS/USDT 2022-11-05 06:00:00 1.02660e+01 1.02860e+01 1.02590e+01 #> 56: KCS/USDT 2022-11-05 07:00:00 1.02850e+01 1.02870e+01 1.02650e+01 #> 57: KCS/USDT 2022-11-05 08:00:00 1.02840e+01 1.02840e+01 1.01830e+01 #> 58: KCS/USDT 2022-11-05 09:00:00 1.01980e+01 1.02220e+01 1.01710e+01 #> 59: KCS/USDT 2022-11-05 10:00:00 1.01950e+01 1.02340e+01 1.01900e+01 #> 60: KCS/USDT 2022-11-05 11:00:00 1.02240e+01 1.02620e+01 1.02230e+01 #> 61: KCS/USDT 2022-11-05 12:00:00 1.02560e+01 1.02600e+01 1.02090e+01 #> 62: KCS/USDT 2022-11-05 13:00:00 1.02310e+01 1.02380e+01 1.01850e+01 #> 63: KCS/USDT 2022-11-05 14:00:00 1.02210e+01 1.02430e+01 1.01740e+01 #> 64: KCS/USDT 2022-11-05 15:00:00 1.01830e+01 1.02330e+01 1.01820e+01 #> 65: KCS/USDT 2022-11-05 16:00:00 1.02180e+01 1.02570e+01 1.02180e+01 #> 66: KCS/USDT 2022-11-05 17:00:00 1.02570e+01 1.02570e+01 1.02100e+01 #> 67: KCS/USDT 2022-11-05 18:00:00 1.02180e+01 1.02500e+01 1.01830e+01 #> 68: KCS/USDT 2022-11-05 19:00:00 1.01960e+01 1.02090e+01 1.01900e+01 #> 69: KCS/USDT 2022-11-05 20:00:00 1.02060e+01 1.02270e+01 1.02050e+01 #> 70: KCS/USDT 2022-11-05 21:00:00 1.02210e+01 1.02210e+01 1.01900e+01 #> 71: KCS/USDT 2022-11-05 22:00:00 1.02010e+01 1.02560e+01 1.02010e+01 #> 72: KCS/USDT 2022-11-05 23:00:00 1.02120e+01 1.02310e+01 1.01730e+01 #>       symbol            datetime        open        high         low #>           close     volume     turnover #>           <num>      <num>        <num> #>  1: 2.14368e+04  1286.8395 2.738427e+07 #>  2: 2.13645e+04   631.8531 1.349689e+07 #>  3: 2.13843e+04   435.5556 9.307688e+06 #>  4: 2.14451e+04   736.9410 1.578577e+07 #>  5: 2.13651e+04   392.5327 8.410830e+06 #>  6: 2.13910e+04   412.2512 8.822156e+06 #>  7: 2.14024e+04   320.0829 6.851213e+06 #>  8: 2.13856e+04   282.8574 6.052171e+06 #>  9: 2.12917e+04   803.1178 1.711249e+07 #> 10: 2.12892e+04   431.6739 9.187757e+06 #> 11: 2.13181e+04   303.0455 6.455634e+06 #> 12: 2.14026e+04   639.8064 1.368326e+07 #> 13: 2.13103e+04   513.6069 1.096076e+07 #> 14: 2.12687e+04   434.5345 9.249235e+06 #> 15: 2.12827e+04   596.1384 1.267960e+07 #> 16: 2.12986e+04   536.4977 1.143333e+07 #> 17: 2.13245e+04   377.3549 8.045647e+06 #> 18: 2.13180e+04   386.4274 8.234619e+06 #> 19: 2.12919e+04   491.5955 1.047199e+07 #> 20: 2.13312e+04   351.5463 7.493677e+06 #> 21: 2.13507e+04   297.1821 6.342940e+06 #> 22: 2.13349e+04   174.3055 3.719457e+06 #> 23: 2.12969e+04   270.1990 5.759956e+06 #> 24: 2.12978e+04   421.1061 8.959366e+06 #> 25: 7.49300e-03   505.0832 3.779785e+00 #> 26: 7.48500e-03   193.2858 1.448284e+00 #> 27: 7.50000e-03   386.1058 2.889902e+00 #> 28: 7.46200e-03    76.6583 5.724171e-01 #> 29: 7.50300e-03    84.8136 6.355597e-01 #> 30: 7.52500e-03    39.8836 2.990697e-01 #> 31: 7.55000e-03   158.8947 1.200302e+00 #> 32: 7.52800e-03   268.1510 2.015025e+00 #> 33: 7.51700e-03    96.3912 7.248386e-01 #> 34: 7.51800e-03   243.6971 1.832038e+00 #> 35: 7.51300e-03    55.2685 4.152951e-01 #> 36: 7.50800e-03   160.3695 1.206822e+00 #> 37: 7.50900e-03   235.4337 1.768536e+00 #> 38: 7.49500e-03   129.5930 9.723318e-01 #> 39: 7.42800e-03   243.0590 1.813562e+00 #> 40: 7.45800e-03   645.9796 4.813401e+00 #> 41: 7.47500e-03   489.3374 3.652363e+00 #> 42: 7.45000e-03   759.8507 5.666950e+00 #> 43: 7.43400e-03   426.0155 3.167505e+00 #> 44: 7.42100e-03   481.2465 3.570506e+00 #> 45: 7.41900e-03   356.0630 2.639918e+00 #> 46: 7.41500e-03    92.4389 6.862592e-01 #> 47: 7.42000e-03   117.7360 8.725282e-01 #> 48: 7.39200e-03   546.8093 4.044374e+00 #> 49: 1.01540e+01 72511.8996 7.446657e+05 #> 50: 1.02360e+01 13658.4223 1.392494e+05 #> 51: 1.02490e+01  7411.1736 7.586906e+04 #> 52: 1.02130e+01  5186.1985 5.308258e+04 #> 53: 1.02110e+01  1789.5124 1.829325e+04 #> 54: 1.02650e+01  2094.1163 2.147240e+04 #> 55: 1.02850e+01  2140.9302 2.199944e+04 #> 56: 1.02840e+01  2233.3440 2.295634e+04 #> 57: 1.01980e+01  5959.9024 6.087437e+04 #> 58: 1.01940e+01  3294.9482 3.358959e+04 #> 59: 1.02240e+01  2445.1422 2.498673e+04 #> 60: 1.02560e+01  3943.3385 4.038433e+04 #> 61: 1.02320e+01  2515.1654 2.572816e+04 #> 62: 1.02210e+01  4800.5446 4.904731e+04 #> 63: 1.01830e+01  3570.0170 3.639994e+04 #> 64: 1.02190e+01  6617.3513 6.752109e+04 #> 65: 1.02570e+01  3510.4407 3.594175e+04 #> 66: 1.02170e+01  3009.9724 3.077825e+04 #> 67: 1.01950e+01  5227.9688 5.337147e+04 #> 68: 1.02080e+01  1866.1018 1.903293e+04 #> 69: 1.02210e+01  2503.4842 2.558072e+04 #> 70: 1.02000e+01  1628.0691 1.661188e+04 #> 71: 1.02120e+01  2743.6777 2.806546e+04 #> 72: 1.02210e+01  7536.3611 7.676274e+04 #>           close     volume     turnover"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"Get market symbols' metadata –deprecated–","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"","code":"get_market_metadata.deprecated(retries = 3)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"data.table metadata","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"TODO: function needs updated v2 API.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"information see documentation: KuCoin - get-symbols-list-deprecated","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all market symbols' metadata –deprecated– — get_market_metadata.deprecated","text":"","code":"# import library library(\"kucoin\")  # get all symbols' most recent metadata metadata <- kucoin::get_market_metadata()  # quick check metadata #>           symbol       name base_currency quote_currency fee_currency market #>           <char>     <char>        <char>         <char>       <char> <char> #>    1:  1CAT/USDT  1CAT/USDT          1CAT           USDT         USDT   USDS #>    2: 1INCH/USDT 1INCH/USDT         1INCH           USDT         USDT   USDS #>    3:    AA/USDT    AA/USDT            AA           USDT         USDT   USDS #>    4:   AAVE/BTC   AAVE/BTC          AAVE            BTC          BTC   DeFi #>    5:   AAVE/KCS   AAVE/KCS          AAVE            KCS          KCS    KCS #>   ---                                                                        #> 1261:  ZOOA/USDT  ZOOA/USDT          ZOOA           USDT         USDT   USDS #> 1262:  ZPAY/USDT  ZPAY/USDT          ZPAY           USDT         USDT   USDS #> 1263:   ZRO/USDT   ZRO/USDT           ZRO           USDT         USDT   USDS #> 1264:    ZRX/BTC    ZRX/BTC           ZRX            BTC          BTC   DeFi #> 1265:   ZRX/USDT   ZRX/USDT           ZRX           USDT         USDT   USDS #>       base_min_size quote_min_size base_max_size quote_max_size base_increment #>               <num>          <num>         <num>          <num>          <num> #>    1:         1e+02          1e-01         1e+10          1e+08          1e-04 #>    2:         1e-02          1e-01         1e+10          1e+08          1e-04 #>    3:         1e+00          1e-01         1e+10          1e+08          1e-04 #>    4:         1e-03          1e-06         1e+10          1e+08          1e-04 #>    5:         1e-02          1e-02         1e+10          1e+08          1e-04 #>   ---                                                                          #> 1261:         1e+01          1e-01         1e+10          1e+08          1e+00 #> 1262:         1e+00          1e-01         1e+10          1e+08          1e-04 #> 1263:         1e+00          1e-01         1e+10          1e+08          1e-02 #> 1264:         1e-01          1e-05         1e+10          1e+08          1e-04 #> 1265:         1e+00          1e-01         1e+10          1e+08          1e-04 #>       quote_increment price_increment price_limit_rate min_funds #>                 <num>           <num>            <num>     <num> #>    1:           1e-06           1e-06             0.10     1e-01 #>    2:           1e-05           1e-05             0.10     1e-01 #>    3:           1e-04           1e-04             0.10     1e-01 #>    4:           1e-06           1e-06             0.10     1e-06 #>    5:           1e-04           1e-04             0.05     1e-03 #>   ---                                                            #> 1261:           1e-06           1e-06             0.10     1e-01 #> 1262:           1e-05           1e-05             0.10     1e-01 #> 1263:           1e-04           1e-04             0.10     1e-01 #> 1264:           1e-09           1e-09             0.10     1e-06 #> 1265:           1e-04           1e-04             0.10     1e-01 #>       is_margin_enabled enable_trading #>                  <lgcl>         <lgcl> #>    1:             FALSE           TRUE #>    2:              TRUE           TRUE #>    3:             FALSE           TRUE #>    4:             FALSE           TRUE #>    5:             FALSE           TRUE #>   ---                                  #> 1261:             FALSE           TRUE #> 1262:             FALSE           TRUE #> 1263:              TRUE           TRUE #> 1264:             FALSE           TRUE #> 1265:             FALSE           TRUE"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all market symbols' metadata — get_market_metadata","title":"Get all market symbols' metadata — get_market_metadata","text":"Get market symbols' metadata","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all market symbols' metadata — get_market_metadata","text":"","code":"get_market_metadata(retries = 3)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all market symbols' metadata — get_market_metadata","text":"retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all market symbols' metadata — get_market_metadata","text":"data.table metadata","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Get all market symbols' metadata — get_market_metadata","text":"information see documentation: KuCoin - get-symbols-list-deprecated","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_market_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all market symbols' metadata — get_market_metadata","text":"","code":"# get all symbols' most recent metadata kucoin::get_market_metadata() #>           symbol       name base_currency quote_currency fee_currency market #>           <char>     <char>        <char>         <char>       <char> <char> #>    1:  1CAT/USDT  1CAT/USDT          1CAT           USDT         USDT   USDS #>    2: 1INCH/USDT 1INCH/USDT         1INCH           USDT         USDT   USDS #>    3:    AA/USDT    AA/USDT            AA           USDT         USDT   USDS #>    4:   AAVE/BTC   AAVE/BTC          AAVE            BTC          BTC   DeFi #>    5:   AAVE/KCS   AAVE/KCS          AAVE            KCS          KCS    KCS #>   ---                                                                        #> 1261:  ZOOA/USDT  ZOOA/USDT          ZOOA           USDT         USDT   USDS #> 1262:  ZPAY/USDT  ZPAY/USDT          ZPAY           USDT         USDT   USDS #> 1263:   ZRO/USDT   ZRO/USDT           ZRO           USDT         USDT   USDS #> 1264:    ZRX/BTC    ZRX/BTC           ZRX            BTC          BTC   DeFi #> 1265:   ZRX/USDT   ZRX/USDT           ZRX           USDT         USDT   USDS #>       base_min_size quote_min_size base_max_size quote_max_size base_increment #>               <num>          <num>         <num>          <num>          <num> #>    1:         1e+02          1e-01         1e+10          1e+08          1e-04 #>    2:         1e-02          1e-01         1e+10          1e+08          1e-04 #>    3:         1e+00          1e-01         1e+10          1e+08          1e-04 #>    4:         1e-03          1e-06         1e+10          1e+08          1e-04 #>    5:         1e-02          1e-02         1e+10          1e+08          1e-04 #>   ---                                                                          #> 1261:         1e+01          1e-01         1e+10          1e+08          1e+00 #> 1262:         1e+00          1e-01         1e+10          1e+08          1e-04 #> 1263:         1e+00          1e-01         1e+10          1e+08          1e-02 #> 1264:         1e-01          1e-05         1e+10          1e+08          1e-04 #> 1265:         1e+00          1e-01         1e+10          1e+08          1e-04 #>       quote_increment price_increment price_limit_rate min_funds #>                 <num>           <num>            <num>     <num> #>    1:           1e-06           1e-06             0.10     1e-01 #>    2:           1e-05           1e-05             0.10     1e-01 #>    3:           1e-04           1e-04             0.10     1e-01 #>    4:           1e-06           1e-06             0.10     1e-06 #>    5:           1e-04           1e-04             0.05     1e-03 #>   ---                                                            #> 1261:           1e-06           1e-06             0.10     1e-01 #> 1262:           1e-05           1e-05             0.10     1e-01 #> 1263:           1e-04           1e-04             0.10     1e-01 #> 1264:           1e-09           1e-09             0.10     1e-06 #> 1265:           1e-04           1e-04             0.10     1e-01 #>       is_margin_enabled enable_trading #>                  <lgcl>         <lgcl> #>    1:             FALSE           TRUE #>    2:              TRUE           TRUE #>    3:             FALSE           TRUE #>    4:             FALSE           TRUE #>    5:             FALSE           TRUE #>   ---                                  #> 1261:             FALSE           TRUE #> 1262:             FALSE           TRUE #> 1263:              TRUE           TRUE #> 1264:             FALSE           TRUE #> 1265:             FALSE           TRUE"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all order(s) — get_orders_all","title":"Get all order(s) — get_orders_all","text":"TODO: experimental.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all order(s) — get_orders_all","text":"","code":"get_orders_all(   symbol = NULL,   status = NULL,   side = NULL,   type = NULL,   tradeType = \"TRADE\",   from = NULL,   to = NULL,   retries = 3,   delay = 0.1 )"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all order(s) — get_orders_all","text":"symbol character vector one contain symbol(s) format \"BTC/USDT\" (optional - default NULL). status character vector one either \"done\" \"active\" (optional - default NULL). side character vector one either \"buy\" \"sell\" (optional - default NULL). type character vector one either \"limit\", \"market\", \"limit_stop\", \"market_stop\" (optional - default NULL). tradeType character vector one either \"TRADE\" (spot trading), \"MARGIN_TRADE\" (cross margin trading), \"MARGIN_ISOLATED_TRADE\" (isolated margin trading) (required - default TRADE). character valid date/datetime format, date/datetime object start datetime range (optional - default NULL). character valid date/datetime format, date/datetime object end datetime range (optional - default NULL). retries numeric value specify number retries case failure (optional - default 3). delay numeric value delay data request milliseconds (optional - default 0.1).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all order(s) — get_orders_all","text":"data.table containing order details","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all order(s) — get_orders_all","text":"information see documentation: KuCoin - list-orders","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all order(s) — get_orders_all","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  kucoin::get_orders_all()  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get order(s) details by order id — get_orders_by_id","title":"Get order(s) details by order id — get_orders_by_id","text":"Get order(s) details order id","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get order(s) details by order id — get_orders_by_id","text":"","code":"get_orders_by_id(orderIds = NULL, delay = 0, retries = 3)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get order(s) details by order id — get_orders_by_id","text":"orderIds character vector one contain order id(s) designated KuCoin (required - default NULL). delay numeric value delay data request milliseconds (optional - default 0). retries numeric value specify number retries case failure (optional - default 3).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get order(s) details by order id — get_orders_by_id","text":"data.table containing order details","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get order(s) details by order id — get_orders_by_id","text":"information see documentation: KuCoin - get-order","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/get_orders_by_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get order(s) details by order id — get_orders_by_id","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  # get order details order_details <- kucoin::get_orders_by_id(order_ids = \"insertorderid\")  # quick check order_details  } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/kucoin_time_to_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","title":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","text":"Convert raw Kucoin time datetime object","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/kucoin_time_to_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","text":"","code":"kucoin_time_to_datetime(time)"},{"path":"https://dereckmezquita.github.io/kucoin/reference/kucoin_time_to_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","text":"time numeric vector time returned KuCoin API (milliseconds) converted datetime object.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/kucoin_time_to_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","text":"datetime object","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/kucoin_time_to_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raw Kucoin time to a datetime object — kucoin_time_to_datetime","text":"","code":"# import library library(\"kucoin\")  # get current server time kucoin_time_to_datetime(1.669401e+12) #> [1] \"2022-11-25 18:30:00 UTC\""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a limit order — submit_limit_order","title":"Post a limit order — submit_limit_order","text":"Post limit order","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a limit order — submit_limit_order","text":"","code":"submit_limit_order(   symbol = NULL,   side = NULL,   base_size = NULL,   price = NULL,   timeInForce = \"GTC\",   cancelAfter = NULL,   postOnly = NULL,   hidden = NULL,   iceberg = NULL,   visibleSize = NULL )"},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a limit order — submit_limit_order","text":"symbol character vector one pair symbol (required - default NULL). side character vector one specify order side: \"buy\" \"sell\" (required - default NULL). base_size numeric vector one determining base size order; n units first currency pair (required - default NULL). price numeric vector one specify price order (required - default NULL). timeInForce character vector one specifying time force policy: \"GTC\" (Good Till Canceled), \"GTT\" (Good Till Time), \"IOC\" (Immediate Cancel), \"FOK\" (Fill Kill) (optional - default \"GTC\"). cancelAfter numeric vector one specifying number seconds wait cancelling order (optional - default NULL). postOnly logical vector one specifying whether order post ; invalid timeInForce \"IOC\" \"FOK\" (optional - default NULL). hidden logical vector one specifying whether order hidden (optional - default NULL). iceberg logical vector one specifying whether order iceberg (optional - default NULL). visibleSize numeric vector one specifying visible size iceberg order (optional - default 0).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a limit order — submit_limit_order","text":"success returns character vector one; order id designated KuCoin.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post a limit order — submit_limit_order","text":"API restricted account, request rate limit 45 times/3s. Currencies traded pairs. first currency called base currency second currency called quote currency. example, BTC/USDT, means base currency BTC quote currency USDT. function returns order ID set KuCoin typically looks like : \"63810a330091a60001ceeb04\". can used get status order. See function get_orders_by_id().","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"-","dir":"Reference","previous_headings":"","what":"—————","title":"Post a limit order — submit_limit_order","text":"Time force policies provide guarantees lifetime order. four policies: Good Till Canceled GTC, Good Till Time GTT, Immediate Cancel IOC, Fill Kill FOK. GTC Good Till Canceled orders remain open book canceled. default behavior policy specified. GTT Good Till Time orders remain open book canceled allotted cancelAfter depleted matching engine. GTT orders guaranteed cancel order processed cancelAfter seconds placed order book. IOC Immediate Cancel orders instantly cancel remaining size limit order instead opening book. FOK Fill Kill orders rejected entire size matched. Note self trades belong match well. market orders, using “TimeInForce” parameter effect. post-flag ensures trader always pays maker fee provides liquidity order book. part order going pay taker fee, order fully rejected. post order get executed immediately existing orders (except iceberg hidden orders) market, order cancelled. post orders, get executed immediately iceberg orders hidden orders market. Users placing post order charged maker fees iceberg hidden orders charged taker fees. information see KuCoin API documentation - new order.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_limit_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post a limit order — submit_limit_order","text":"","code":"if (FALSE) { # \\dontrun{  # to run this example, make sure # you already setup the API key # in a proper .Renviron file  # check our balances kucoin::get_account_balances()  ## ------- # to avoid errors we will calculate our price and order size # kucoin accepts these values in specific increments per ticker symbol  # get the market metadata ticker <- \"BTC/USDT\" price_per_coin <- 10000 amount_to_spend <- 300  metadata <- kucoin::get_market_metadata.deprecated()[symbol == ticker, ] price_increment <- metadata[symbol == ticker, ]$price_increment size_increment <- metadata[symbol == ticker, ]$base_increment  # calculate size and price size <- floor(amount_to_spend / price_per_coin / size_increment) * size_increment price <- floor(price_per_coin / price_increment) * price_increment  ## ---- # submit order message(stringr::str_interp('${ticker}: selling ${size} ${gsub(\"\\\\\\\\/.*\", \"\", ticker)} @ ${price} ${gsub(\".*\\\\\\\\/\", \"\", ticker)}.')) order_id <- kucoin::submit_limit_order(     symbol = ticker,     side = \"sell\",     base_size = size,     price = price ); order_id   ## ---- # buying asset so recalculate price_per_coin <- 0.0005 amount_to_spend <- 300  # calculate size and price size <- floor(amount_to_spend / price_per_coin / size_increment) * size_increment price <- floor(price_per_coin / price_increment) * price_increment  message(stringr::str_interp('${ticker}: buying ${size} ${gsub(\"\\\\\\\\/.*\", \"\", ticker)} @ ${price} ${gsub(\".*\\\\\\\\/\", \"\", ticker)}.')) order_id2 <- kucoin::submit_limit_order(     symbol = ticker,     side = \"buy\",     base_size = size,     price = price ); order_id2  kucoin::get_orders_by_id(c(order_id, order_id2))   } # }"},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_market_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a market order — submit_market_order","title":"Post a market order — submit_market_order","text":"Post market order","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_market_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a market order — submit_market_order","text":"","code":"submit_market_order(   symbol = NULL,   side = NULL,   base_size = NULL,   quote_size = NULL )"},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_market_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a market order — submit_market_order","text":"symbol character vector one pair symbol (required - default NULL). side character vector one specify order side: \"buy\" \"sell\" (required - default NULL). base_size numeric vector one determining base size order; n units first currency pair (required quote_size - default NULL). quote_size numeric vector specify base quote currency size; n units second currency pair (required base_size - default NULL).","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_market_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a market order — submit_market_order","text":"success returns character vector one; order id designated KuCoin.","code":""},{"path":"https://dereckmezquita.github.io/kucoin/reference/submit_market_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post a market order — submit_market_order","text":"information see KuCoin API documentation - new order. API restricted account, request rate limit 45 times/3s. Currencies traded pairs. first currency called base currency second currency called quote currency. example, BTC/USDT, means base currency BTC quote currency USDT. function returns order ID set KuCoin typically looks like : \"63810a330091a60001ceeb04\". can used get status order. See function get_orders_by_id().","code":""},{"path":[]}]
