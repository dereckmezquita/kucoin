Basic Info

Request Rate Limit

REST API

New rate limit 2.0 has been launched，Compared with 1.0, users can more freely break through the rate limit of a single interface according to the strategy, and freely coordinate the use of interfaces, which makes the strategy that relies too much on certain interfaces run smoothly. For example, in the 1.0 rate limit, the order cancellation interface of high-frequency users is relatively restricted, but under the new logic, as long as other interfaces are not requested too much, the order cancellation can be 2-3 times that of the previous one, so it can be realized higher rate limit requirements That is to say, the new rate limit rules are equivalent to determining the resource supply and realizing the optimal configuration of the interface according to user needs.

The specific rules of REST rate limit 2.0 are as follows:

Resource pool: Each API resource pool has a certain quota, the specific amount depends on the VIP level:
Spot rate limit (including margin)、Futures rate limit、Management rate limit、Public rate limit、Earn rate limit

Level	Spot	Futures	Management	Public	Earn
VIP0	4000/30s	2000/30s	2000/30s	2000/30s	2000/30s
VIP1	6000/30s	2000/30s	2000/30s	2000/30s	2000/30s
VIP2	8000/30s	4000/30s	4000/30s	2000/30s	2000/30s
VIP3	10000/30s	5000/30s	5000/30s	2000/30s	2000/30s
VIP4	13000/30s	6000/30s	6000/30s	2000/30s	2000/30s
VIP5	16000/30s	7000/30s	7000/30s	2000/30s	2000/30s
VIP6	20000/30s	8000/30s	8000/30s	2000/30s	2000/30s
VIP7	23000/30s	10000/30s	10000/30s	2000/30s	2000/30s
VIP8	26000/30s	12000/30s	12000/30s	2000/30s	2000/30s
VIP9	30000/30s	14000/30s	14000/30s	2000/30s	2000/30s
VIP10	33000/30s	16000/30s	16000/30s	2000/30s	2000/30s
VIP11	36000/30s	18000/30s	18000/30s	2000/30s	2000/30s
VIP12	40000/30s	20000/30s	20000/30s	2000/30s	2000/30s
Weight: When a user requests any API, the weight of this interface will be deducted and updated every 30s (starting from the arrival time of the user's first request). For specific interfaces, please refer to the rate limit weight regulations under each interface.
If the quota of any resource pool is used up within 30s, that is, after the rate limit is exceeded, an error message of http code:429, error code:429000 will be returned, and the request can be re-requested after how long the request header shows. At this time, user needs to stop accessing and wait until the resource quota is reset before continuing to access.

For example:

When the user's VIP is 5, he has a "total spot quota" of 16000/30s.

The quota consumption for each "add spot limit order" is 2. After placing the first order, the user's remaining spot quota is 15998, after placing the second order, the remaining quota is 15996, and so on.

If the quota is not used up within 30 seconds. When the next cycle comes, the spot resource pool quota will be reset and returned to the quota limit of 16000.

Request header: The returned information of each request will carry the following information: total resource pool quota, resource pool remaining quota, resource pool quota reset countdown (milliseconds).
"gw-ratelimit-limit": 500

"gw-ratelimit-remaining": 300

"gw-ratelimit-reset": 1489

Public rate limit: It is based on IP rate limitation. If there is a large demand for the use of public interfaces, it is recommended to use the Websocket interface instead of the Rest interface (if the interface supports it). You can also use one server to bind multiple IP addresses (ipv4 or ipv6), or use different IPs to avoid IP rate limit issues.
Spot rate limit (including margin), futures rate limit, management rate limit and Earn rate limit: all are based on uid, and the request header will carry the rate limit information of the resource pool, such as the remaining rate limit times, rate limit cycle time, etc. And the rate limit of the sub-account and the master account are independent of each other at the API request level, that is to say, if the demand for such interface access is relatively large, it can also be solved by using the sub-account
In addition to the regular rate limit, server overload may also cause the rate limit. After the rate limit, the error code is 429000, but the request header will not carry other personal rate limit information. This type of rate limit does not count as the number of rate limits. It is recommended to try again later.

In addition, during the transition period between 1.0 and 2.0, you may still encounter error code 1015. It is recommended to try again later. If it occurs frequently, please contact the official community to deal with it https://t.me/KuCoin_API

WEBSOCKET

Number of Connections Number of connections per user ID: ≤ 50
Connection Times Connection Limit: 30 per minute
Number of Uplink Messages Message limit sent to the server: 100 per 10 seconds
Topic Subscription Limit Maximum number of batch subscriptions at a time: 100 topics
Subscription limit for each connection: 500 topics


Apply for Higher Request Rate Limit

If you are a professional trader or market maker and need a higher limit, please send your KuCoin account, reason and approximate trading volume to api@kucoin.com.

Is the content of this page helpful to you?
Yes

Base URL

The request URL needs to be determined by BASE and specific endpoint combination.

Spot & Margin REST API: Base URL: https://api.kucoin.com
Futures REST API: Base URL: https://api-futures.kucoin.com
Spot & Margin Websocket API: Base URL: Please refer to Apply connect token to dynamically obtain the base URL
Futures Websocket API: Base URL: Please refer to Apply connect token to dynamically obtain the base URL
Is the content of this page helpful to you?
Yes

Connection Method

Endpoint of the Interface

Each interface has its own endpoint, described by field HTTP REQUEST in the docs.

For the GET METHOD API, the endpoint needs to contain the query parameters string.

E.G. For "List Accounts" , the default endpoint of this API is /api/v1/accounts. If you pass the "currency" parameter(BTC), the endpoint will become /api/v1/accounts?currency=BTC and the final request URL will be https://api.kucoin.com/api/v1/accounts?currency=BTC.

E.G. For "Position", the default endpoint of this API is /api/v1/position. If you pass the "symbol" parameter (XBTUSDM), the endpoint will become /api/v1/position?symbol=XBTUSDM and the final request URL will be https://api-futures.kucoin.com/api/v1/position?symbol=XBTUSDM.


Pager

Introduction

KuCoin Spot & Margin uses Pagination for all REST requests which return arrays.

KuCoin Futures uses Pagination or HasMore for all REST requests which return arrays.


Pagination

Pagination allows for fetching results with the current page and is well suited for real time data. Endpoints like /api/v1/deposit-list, /api/v1/orders, /api/v1/fills, return the latest items by default. To retrieve more results, users should specify the currentPage number in the subsequent requests to turn the page based on the data previously returned.

Example

GET /api/v1/orders?currentPage=1&pageSize=50

  {
      "currentPage": 1,
      "pageSize": 50,
      "totalNum": 6,
      "totalPage": 1,
      "data": ...
  }
PARAMETERS

Parameter	Default	Description
currentPage	1	Current request page.
pageSize	50	Number of results per request. Minimum is 10, maximum is 500.

HasMore

The HasMore pager uses sliding window scheme to obtain paged data by sliding a fixed-sized window on data stream. The returned results will provide field HasMore to show if there are more data. The HasMore pager is efficient and takes the same amount of time for each sliding which makes HasMore pager well suited for the real-time streaming data queries.

Example

GET /api/v1/interest/query?symbol=.XBTINT&offset=1558079160000&forward=true&maxCount=10

PARAMETERS

Parameter	Default	Description
offset	-	Start offset. The unique attribute of the last returned result of the last request. The data of the first page will be returned by default.
forward	boolean	Slide direction. Set to “TRUE” to look up data of the next page
maxCount	int	The maximum amount for each sliding

Types

Timestamps

Unless otherwise specified, all timestamps from API are returned in milliseconds(e.g. 1546658861000). Most modern languages and libraries will handle this without issues.

But please note that the timestamps between the matching engine and the order system are in nanoseconds.

The KC-API-TIMESTAMP header MUST be number of milliseconds since Unix Epoch in UTC, Unix Time (opens new window). e.g. 1547015186532

Decimal values are allowed, e.g. 1547015186532. But you need to be aware that timestamp between match and order is nanosecond.

The difference between your timestamp and the API service time must be less than 5 seconds , or your request will be considered expired and rejected. We recommend using the time endpoint to query for the API server time if you believe there may be time skew between your server and the API server.

Numbers

Decimal numbers are returned as strings in order to preserve the full precision across platforms. When making a request, it is recommended that you also convert your numbers to strings to avoid truncation and precision errors.

Request

Introduction

All requests and responses are application/json content type.

Unless otherwise stated, all timestamp parameters should in milliseconds. e.g. 1544657947759

For the GET, DELETE request, all query parameters need to be included in the request url. (e.g. /api/v1/accounts?currency=BTC)

For the POST request, all query parameters need to be included in the request body with JSON. (e.g. {"currency":"BTC"}).

Do not include extra spaces in JSON strings.

Success response

A successful response is indicated by an HTTP status code 200 and system code 200000. The success response is as follows:

{
  "code": "200000",
  "data": "1544657947759"
}

Error response

When errors occur, the HTTP error code or system error code will be returned. The body will also contain a message parameter indicating the cause.

{
  "code": "400100",
  "msg": "Invalid Parameter."
}

Authentication

Generating an API Key

Before being able to sign any requests, you must create an API key via the KuCoin website. Upon creating a key you need to write down 3 pieces of information:

Key
Secret
Passphrase
The Key and Secret are generated and provided by KuCoin and the Passphrase refers to the one you used to create the KuCoin API. Please note that these three pieces of information can not be recovered once lost. If you lost this information, please create a new API KEY.

API KEY PERMISSIONS

You can manage the API permission on KuCoin’s official website. The permissions are:

General - Limited to read-only operations such as querying account information, account statements, and order information. The API cannot be used to perform operations such as order placement or withdrawals.
Spot - This API can be used for spot trading to perform order placement, order cancellation, etc.
Margin - This API can be used for margin trading to perform order placement, order cancellation, etc.
Futures - This API can be used for futures trading to perform order placement, order cancellation, etc.
Transfer - This permission allows you to withdraw assets, acquire deposit addresses, cancel withdrawals, and execute other operations. To use this permission, you must enable IP Restriction. Please note that when authorizing the Transfer permission, you can use the API to transfer money without email verification and Google verification.
Please refer to the documentation below to see what API key permissions are required for a specific route.

Creating a Request

All private REST requests must contain the following headers:

KC-API-KEY The API key as a string.
KC-API-SIGN The base64-encoded signature (see Signing a Message).
KC-API-TIMESTAMP A timestamp for your request.
KC-API-PASSPHRASE The passphrase you specified when creating the API key.
KC-API-KEY-VERSION You can check the version of API key on the page of API Management

Signing a Message

For the header of KC-API-SIGN:

Use API-Secret to encrypt the prehash string {timestamp+method+endpoint+body} with sha256 HMAC. The request body is a JSON string and need to be the same with the parameters passed by the API.
After that, use base64-encode to encrypt the result in step 1 again.
For the KC-API-PASSPHRASE of the header:

For API key-V1.0, please pass requests in plaintext.
For API key-V2.0, please Specify KC-API-KEY-VERSION as 2 --> Encrypt passphrase with HMAC-sha256 via API-Secret --> Encode contents by base64 before you pass the request.
For API key-V3.0, please Specify KC-API-KEY-VERSION as 3 --> Encrypt passphrase with HMAC-sha256 via API-Secret --> Encode contents by base64 before you pass the request.
Notice:

The encrypted timestamp shall be consistent with the KC-API-TIMESTAMP field in the request header.
The body to be encrypted shall be consistent with the content of the Request Body.
The Method should be UPPER CASE.
For GET, DELETE request, the endpoint needs to contain the query string. e.g. /api/v1/deposit-addresses?currency=XBT. The body is "" if there is no request body (typically for GET requests).
    <?php
    class API {
        public function __construct($key, $secret, $passphrase) {
          $this->key = $key;
          $this->secret = $secret;
          $this->passphrase = $passphrase;
        }

        public function signature($request_path = '', $body = '', $timestamp = false, $method = 'GET') {

          $body = is_array($body) ? json_encode($body) : $body; // Body must be in json format

          $timestamp = $timestamp ? $timestamp : time() * 1000;

          $what = $timestamp . $method . $request_path . $body;

          return base64_encode(hash_hmac("sha256", $what, $this->secret, true));
        }
    }
    ?>
    Spot
    #Example for get balance of accounts in python

    api_key = "api_key"
    api_secret = "api_secret"
    api_passphrase = "api_passphrase"
    url = 'https://api.kucoin.com/api/v1/accounts'
    now = int(time.time() * 1000)
    str_to_sign = str(now) + 'GET' + '/api/v1/accounts'
    signature = base64.b64encode(
        hmac.new(api_secret.encode('utf-8'), str_to_sign.encode('utf-8'), hashlib.sha256).digest())

    passphrase = base64.b64encode(hmac.new(api_secret.encode('utf-8'), api_passphrase.encode('utf-8'), hashlib.sha256).digest())
    headers = {
        "KC-API-SIGN": signature,
        "KC-API-TIMESTAMP": str(now),
        "KC-API-KEY": api_key,
        "KC-API-PASSPHRASE": passphrase,
        "KC-API-KEY-VERSION": "2"
    }
    response = requests.request('get', url, headers=headers)
    print(response.status_code)
    print(response.json())

    #Example for create deposit addresses in python
    url = 'https://api.kucoin.com/api/v1/deposit-addresses'
    now = int(time.time() * 1000)
    data = {"currency": "BTC"}
    data_json = json.dumps(data)
    str_to_sign = str(now) + 'POST' + '/api/v1/deposit-addresses' + data_json
    signature = base64.b64encode(
        hmac.new(api_secret.encode('utf-8'), str_to_sign.encode('utf-8'), hashlib.sha256).digest())
    passphrase = base64.b64encode(
        hmac.new(api_secret.encode('utf-8'), api_passphrase.encode('utf-8'), hashlib.sha256).digest())
    headers = {
        "KC-API-SIGN": signature,
        "KC-API-TIMESTAMP": str(now),
        "KC-API-KEY": api_key,
        "KC-API-PASSPHRASE": passphrase,
        "KC-API-KEY-VERSION": 2,
        "Content-Type": "application/json" # specifying content type or using json=data in request
    }
    response = requests.request('post', url, headers=headers, data=data_json)
    print(response.status_code)
    print(response.json())
    Futures
    #Example for get user position in python

    api_key = "api_key"
    api_secret = "api_secret"
    api_passphrase = "api_passphrase"
    url = 'https://api-futures.kucoin.com/api/v1/position?symbol=XBTUSDM'
    now = int(time.time() * 1000)
    str_to_sign = str(now) + 'GET' + '/api/v1/position?symbol=XBTUSDM'
    signature = base64.b64encode(
        hmac.new(api_secret.encode('utf-8'), str_to_sign.encode('utf-8'), hashlib.sha256).digest())
    passphrase = base64.b64encode(hmac.new(api_secret.encode('utf-8'), api_passphrase.encode('utf-8'), hashlib.sha256).digest())
    headers = {
        "KC-API-SIGN": signature,
        "KC-API-TIMESTAMP": str(now),
        "KC-API-KEY": api_key,
        "KC-API-PASSPHRASE": passphrase
        "KC-API-KEY-VERSION": "2"
    }
    response = requests.request('get', url, headers=headers)
    print(response.status_code)
    print(response.json())

    #Example for create deposit addresses in python
    url = 'https://api-futures.kucoin.com/api/v1/deposit-address'
    now = int(time.time() * 1000)
    data = {"currency": "XBT"}
    data_json = json.dumps(data)
    str_to_sign = str(now) + 'POST' + '/api/v1/deposit-address' + data_json
    signature = base64.b64encode(
        hmac.new(api_secret.encode('utf-8'), str_to_sign.encode('utf-8'), hashlib.sha256).digest())
    passphrase = base64.b64encode(hmac.new(api_secret.encode('utf-8'), api_passphrase.encode('utf-8'), hashlib.sha256).digest())
    headers = {
        "KC-API-SIGN": signature,
        "KC-API-TIMESTAMP": str(now),
        "KC-API-KEY": api_key,
        "KC-API-PASSPHRASE": passphrase,
        "KC-API-KEY-VERSION": "2",
        "Content-Type": "application/json" # specifying content type or using json=data in request
    }
    response = requests.request('post', url, headers=headers, data=data_json)
    print(response.status_code)
    print(response.json())
#Example for Create Deposit Address

curl -H "Content-Type:application/json" -H "KC-API-KEY:5c2db93503aa674c74a31734" -H "KC-API-TIMESTAMP:1547015186532" -H "KC-API-PASSPHRASE:QWIxMjM0NTY3OCkoKiZeJSQjQA==" -H "KC-API-SIGN:7QP/oM0ykidMdrfNEUmng8eZjg/ZvPafjIqmxiVfYu4="  -H "KC-API-KEY-VERSION:2"
-X POST -d '{"currency":"BTC"}' http://api.kucoin.com/api/v1/deposit-addresses

KC-API-KEY = 5c2db93503aa674c74a31734
KC-API-SECRET = f03a5284-5c39-4aaa-9b20-dea10bdcf8e3
KC-API-PASSPHRASE = QWIxMjM0NTY3OCkoKiZeJSQjQA==
KC-API-KEY-VERSION = 2
TIMESTAMP = 1547015186532
METHOD = POST
ENDPOINT = /api/v1/deposit-addresses
STRING-TO-SIGN = 1547015186532POST/api/v1/deposit-addresses{"currency":"BTC"}
KC-API-SIGN = 7QP/oM0ykidMdrfNEUmng8eZjg/ZvPafjIqmxiVfYu4=

REST

Account

Basic Info

Get Account Summary Info

This endpoint can be used to obtain account summary information.

HTTP REQUEST

GET /api/v2/user-info

Example

GET /api/v2/user-info

{
  "data": {
    "level": 0,
    "subQuantity": 5,
    "maxDefaultSubQuantity": 5,
    "maxSubQuantity": 5,

    "spotSubQuantity": 5,
    "marginSubQuantity": 5,
    "futuresSubQuantity": 5,

    "maxSpotSubQuantity": 0,
    "maxMarginSubQuantity": 0,
    "maxFuturesSubQuantity": 0
  },
  "code": "200000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

N/A

RESPONSES

Param	Description
level	User level
subQuantity	Number of sub-accounts
maxDefaultSubQuantity	Max number of default open sub-accounts (according to level)
maxSubQuantity	Max number of sub-accounts = maxDefaultSubQuantity + maxSpotSubQuantity
spotSubQuantity	Number of sub-accounts with spot trading permissions enabled
marginSubQuantity	Number of sub-accounts with margin trading permissions enabled
futuresSubQuantity	Number of sub-accounts with futures trading permissions enabled
maxSpotSubQuantity	Max number of sub-accounts with additional Spot trading permissions
maxMarginSubQuantity	Max number of sub-accounts with additional margin trading permissions
maxFuturesSubQuantity	Max number of sub-accounts with additional futures trading permissions

Get Account List - Spot/Margin/trade_hf

Get a list of accounts.

Please Deposit to the main account firstly, then transfer the funds to the trade account via Inner Transfer before transaction.

HTTP REQUEST

GET /api/v1/accounts

Example

GET /api/v1/accounts

[
  {
    "id": "5bd6e9286d99522a52e458de", //accountId
    "currency": "BTC", //Currency
    "type": "main", //Account type, including main and trade
    "balance": "237582.04299", //Total assets of a currency
    "available": "237582.032", //Available assets of a currency
    "holds": "0.01099" //Hold assets of a currency
  },
  {
    "id": "5bd6e9216d99522a52e458d6",
    "currency": "BTC",
    "type": "trade",
    "balance": "1234356",
    "available": "1234356",
    "holds": "0"
  }
]
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency
type	String	No	Account type main、trade、margin、trade_hf
RESPONSES

Param	Description
id	The ID of the account
currency	Currency
type	Account type:，main、trade、trade_hf、margin
balance	Total funds in the account
available	Funds available to withdraw or trade
holds	Funds on hold (not available for use)
Account type

There are three types of accounts: 1) main account 2) trade account 3) trade_hf account 4) margin account.

No fees will be charged for the funds transfer between these account.

The main account is used for the storage, withdrawal, and deposit of the funds. The assets in the main account cannot be directly used for trading. To trade cryptos, you need to transfer funds from the main account to the trade account.

The trade account is used for transaction. When you place an order, the system will use the balance of the trade account. You can’t withdraw funds directly from a trade account. To withdraw the funds, you need to transfer the funds from the trade account to the main account firstly.

The trade_hf account is used for transaction. When you place an order, the system will use the balance of the trade_hf account. You can’t withdraw funds directly from a trade_hf account. To withdraw the funds, you need to transfer the funds from the trade_hf account to the main account firstly. In addition, it should be noted that spot trade_hf acount is only applicable to API, and order record query can only be queried through API, WEB or APP cannot be queried.

The margin account is used to borrow assets and leverage transactions.

For funds transfer between accounts, please refer to Inner Transfer。

FUNDS ON HOLD

When placing an order, the funds for the order will be freezed. The freezed funds cannot be used for other order placement or withdrawal and will remain on hold until the order is filled or cancelled.

Get Account Detail - Spot/Margin/trade_hf

Information for a single account. Use this endpoint when you know the accountId.

HTTP REQUEST

GET /api/v1/accounts/{accountId}

Example

GET /api/v1/accounts/5bd6e9286d99522a52e458de

{
  "currency": "KCS", //Currency
  "balance": "1000000060.6299", //Total assets of a currency
  "available": "1000000060.6299", //Available assets of a currency
  "holds": "0" //Hold assets of a currency
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

PARAMETERS

Param	Type	Mandatory	Description
accountId	String	Yes	Path parameter. Account ID
RESPONSES

Field	Description
currency	The currency of the account
balance	Total funds in the account
holds	Funds on hold (not available for use)
available	Funds available to withdraw or trade

Get Account Ledgers - Spot/Margin

This interface is for transaction records from all types of your accounts, supporting inquiry of various currencies. Items are paginated and sorted to show the latest first. See the Pagination section for retrieving additional entries after the first page.

HTTP REQUEST

GET /api/v1/accounts/ledgers

Example

GET /api/v1/accounts/ledgers?currency=BTC&startAt=1601395200000

{
  "currentPage": 1,
  "pageSize": 50,
  "totalNum": 2,
  "totalPage": 1,
  "items": [
    {
      "id": "611a1e7c6a053300067a88d9", //unique key
      "currency": "USDT", //Currency
      "amount": "10.00059547", //Change amount of the funds
      "fee": "0", //Deposit or withdrawal fee
      "balance": "0", //Total assets of a currency
      "accountType": "MAIN", //Account Type
      "bizType": "Loans Repaid", //business type
      "direction": "in", //side, in or out
      "createdAt": 1629101692950, //Creation time
      "context": "{\"borrowerUserId\":\"601ad03e50dc810006d242ea\",\"loanRepayDetailNo\":\"611a1e7cc913d000066cf7ec\"}" //Business core parameters
    },
    {
      "id": "611a18bc6a0533000671e1bf",
      "currency": "USDT",
      "amount": "10.00059547",
      "fee": "0",
      "balance": "0",
      "accountType": "MAIN",
      "bizType": "Loans Repaid",
      "direction": "in",
      "createdAt": 1629100220843,
      "context": "{\"borrowerUserId\":\"5e3f4623dbf52d000800292f\",\"loanRepayDetailNo\":\"611a18bc7255c200063ea545\"}"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：2

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency ( you can choose more than one currency). You can specify 10 currencies at most for one time. If not specified, all currencies will be inquired by default.
direction	String	No	direction: in, out
bizType	String	No	Type: DEPOSIT -deposit, WITHDRAW -withdraw, TRANSFER -transfer, SUB_TRANSFER -subaccount transfer,TRADE_EXCHANGE -trade, MARGIN_EXCHANGE -margin trade, KUCOIN_BONUS -bonus, BROKER_TRANSFER -Broker transfer record
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
TIP
the start and end time range cannot exceed 24 hours. An error will occur if the specified time window exceeds the range. If you specify the end time only, the system will automatically calculate the start time as end time minus 24 hours, and vice versa.

TIP
Support to obtain 1 year historical data, if need to obtain longer historical data, please submit a ticket: https://kucoin.zendesk.com/hc/en-us/requests/new

RESPONSES

Field	Description
id	unique key
currency	The currency of an account
amount	The total amount of assets (fees included) involved in assets changes such as transaction, withdrawal and bonus distribution.
fee	Fees generated in transaction, withdrawal, etc.
balance	Remaining funds after the transaction.
accountType	The account type of the master user: MAIN, TRADE, MARGIN or CONTRACT.
bizType	Business type leading to the changes in funds, such as exchange, withdrawal, deposit, KUCOIN_BONUS, REFERRAL_BONUS, Lendings etc.
direction	Side, out or in
createdAt	Time of the event
context	Business related information such as order ID, serial No., etc.
context

If the returned value under bizType is “trade exchange”, the additional info. (such as order ID and trade ID, trading pair, etc.) of the trade will be returned in field context.

BizType Description

Field	Description
Assets Transferred in After Upgrading	Assets Transferred in After V1 to V2 Upgrading
Deposit	Deposit
Withdrawal	Withdrawal
Transfer	Transfer
Trade_Exchange	Trade
Vote for Coin	Vote for Coin
KuCoin Bonus	KuCoin Bonus
Referral Bonus	Referral Bonus
Rewards	Activities Rewards
Distribution	Distribution, such as get GAS by holding NEO
Airdrop/Fork	Airdrop/Fork
Other rewards	Other rewards, except Vote, Airdrop, Fork
Fee Rebate	Fee Rebate
Buy Crypto	Use credit card to buy crypto
Sell Crypto	Use credit card to sell crypto
Public Offering Purchase	Public Offering Purchase for Spotlight
Send red envelope	Send red envelope
Open red envelope	Open red envelope
Staking	Staking
LockDrop Vesting	LockDrop Vesting
Staking Profits	Staking Profits
Redemption	Redemption
Refunded Fees	Refunded Fees
KCS Pay Fees	KCS Pay Fees
Margin Trade	Margin Trade
Loans	Loans
Borrowings	Borrowings
Debt Repayment	Debt Repayment
Loans Repaid	Loans Repaid
Lendings	Lendings
Pool transactions	Pool-X transactions
Instant Exchange	Instant Exchange
Sub Account Transfer	Sub-account transfer
Liquidation Fees	Liquidation Fees
Soft Staking Profits	Soft Staking Profits
Voting Earnings	Voting Earnings on Pool-X
Redemption of Voting	Redemption of Voting on Pool-X
Convert to KCS	Convert to KCS
BROKER_TRANSFER	Broker transfer record

Get Account Ledgers - trade_hf

This API endpoint returns all transfer (in and out) records in high-frequency trading account and supports multi-coin queries. The query results are sorted in descending order by createdAt and id.

HTTP REQUEST

GET /api/v1/hf/accounts/ledgers

Example

GET /api/v1/hf/accounts/ledgers?bizType=TRADE_EXCHANGE&currency=YOP,DAI&startAt=1601395200000

// response
{
  "code": "200000",
  "data": [
    {
      "id": "42852417537",
      "currency": "CSP",
      "amount": "1.00000000",
      "fee": "0.00000000",
      "balance": "99999986.99999999",
      "accountType": "TRADE_HF",
      "bizType": "TRADE_EXCHANGE",
      "direction": "in",
      "createdAt": "1661347205743",
      "context": "{'symbol':'CSP-USDT','orderId':'6306257dd9180300014c8d47','tradeId':'609522034689'}"
    },
    {
      "id": "42852401152",
      "currency": "CSP",
      "amount": "1.00000000",
      "fee": "0.00000000",
      "balance": "99999985.99999999",
      "accountType": "TRADE_HF",
      "bizType": "TRADE_EXCHANGE",
      "direction": "out",
      "createdAt": "1661347205743",
      "context": "{'symbol':'CSP-USDT','orderId':'63062585d9180300014c8d50','tradeId':'609522034689'}"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	currency, optional，can select more than one，separate with commas，select no more than 10 currencys，the default will be to query for all currencys if left empty
direction	String	No	Direction of transaction (in or out): in-transfer in, out-transfer out
bizType	String	No	Transaction type: TRANSFER-transfer funds,TRADE_EXCHANGE-Trade
lastId	long	No	The id of the last set of data from the previous batch of data. By default, the latest information is given.
limit	int	No	Default100，Max200
startAt	long	No	Start time (milisecond), the conditional limit createdAt
endAt	long	No	End time (milisecond), the conditional limit createdAt
TIP
If lastId is configured, the information obtained < lastId. Otherwise, it will go back to the latest information.

You can only obtain data from within a 3 _ 24 hour time range (i.e., from 3 _ 24 hours ago up to now) If you specify a time range that exceeds this limit, the system will default to data from within 3 * 24 hours.

RESPONSES

Param	Description
id	Unique key
currency	currency
amount	Change in funds balance
fee	Deposit or withdrawal fee
balance	Total balance of funds after change
accountType	Master account type TRADE_HF
bizType	Trnasaction type，such as TRANSFER, TRADE_EXCHANGE, etc.
direction	Direction of transfer( out or in)
createdAt	Created
context	Core transaction parameter
context description
If the bizType is TRADE_EXCHANGE, the context field will include additional transaction information (order id, transaction id, and trading pair).

Get Account Ledgers - margin_hf

This API endpoint returns all transfer (in and out) records in high-frequency margin trading account and supports multi-coin queries. The query results are sorted in descending order by createdAt and id.

HTTP REQUEST

GET /api/v3/hf/margin/account/ledgers

Example

GET /api/v3/hf/margin/account/ledgers?bizType=MARGIN_EXCHANGE&currency=YOP,DAI&startAt=1601395200000

//Response
{
  "code": "200000",
  "data": [
    {
      "id": "42852417537",
      "currency": "CSP",
      "amount": "1.00000000",
      "fee": "0.00000000",
      "balance": "99999986.99999999",
      "accountType": "MARGIN_V2",
      "bizType": "MARGIN_EXCHANGE",
      "direction": "in",
      "createdAt": "1661347205743",
      "context": "{'symbol':'CSP-USDT','orderId':'6306257dd9180300014c8d47','tradeId':'609522034689'}"
    },
    {
      "id": "42852401152",
      "currency": "CSP",
      "amount": "1.00000000",
      "fee": "0.00000000",
      "balance": "99999985.99999999",
      "accountType": "MARGIN_V2",
      "bizType": "MARGIN_EXCHANGE",
      "direction": "out",
      "createdAt": "1661347205743",
      "context": "{'symbol':'CSP-USDT','orderId':'63062585d9180300014c8d50','tradeId':'609522034689'}"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	currency, optional，can select more than one，separate with commas，select no more than 10 currencys，the default will be to query for all currencys if left empty
direction	String	No	Direction of transaction (in or out): in-transfer in, out-transfer out
bizType	String	No	Transaction type: TRANSFER- transfer funds, MARGIN_EXCHANGE - cross margin trade, ISOLATED_EXCHANGE - isolated margin trade, LIQUIDATION - liquidation, ASSERT_RETURN - forced liquidation asset return
lastId	long	No	The id of the last set of data from the previous batch of data. By default, the latest information is given.
limit	int	No	Default100，Max200
startAt	long	No	Start time (milisecond), the conditional limit createdAt
endAt	long	No	End time (milisecond), the conditional limit createdAt
TIP
If lastId is configured, the information obtained < lastId. Otherwise, it will go back to the latest information.

You can only obtain data from within a 3 _ 24 hour time range (i.e., from 3 _ 24 hours ago up to now) If you specify a time range that exceeds this limit, the system will default to data from within 3 * 24 hours.

If bizType is MARGIN_EXCHANGE or ISOLATED_EXCHANGE, the context field will contain additional information about the transaction (order id, transaction id, transaction pair).

RESPONSES

Param	Description
id	Unique key
currency	currency
amount	Change in funds balance
fee	Deposit or withdrawal fee
balance	Total balance of funds after change
accountType	Master account type MARGIN_V2、ISOLATED_V2
bizType	Trnasaction type，such as TRANSFER, MARGIN_EXCHANGE, etc.
direction	Direction of transfer( out or in)
createdAt	Created
context	Core transaction parameter

Get Account Ledgers - Futures

If there are open positions, the status of the first page returned will be Pending, indicating the realised profit and loss in the current 8-hour settlement period. Please specify the minimum offset number of the current page into the offset field to turn the page.

HTTP REQUEST

GET /api/v1/transaction-history

Example

GET /api/v1/transaction-history?offset=1&forward=true&maxCount=50

{
  "code": "200000",
  "data": {
    "hasMore": false, //Whether there are more pages
    "dataList": [
      {
        "time": 1558596284040, //Event time
        "type": "RealisedPNL", //Type
        "amount": 0, //Transaction amount
        "fee": null, //Fees
        "accountEquity": 8060.7899305281, //Account equity
        "status": "Pending", //Status. If you have held a position in the current 8-hour settlement period.
        "remark": "XBTUSDM", //Ticker symbol of the contract
        "offset": -1, //Offset
        "currency": "XBT" //Currency
      },
      {
        "time": 1557997200000,
        "type": "RealisedPNL",
        "amount": -0.000017105,
        "fee": 0,
        "accountEquity": 8060.7899305281,
        "status": "Completed", //Status. Status. Funding period that has been settled.
        "remark": "XBTUSDM",
        "offset": 1,
        "currency": "XBT"
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Manage weight：2

PARAMETERS

Param	Type	Mandatory	Description
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
type	String	No	Type RealisedPNL-Realised profit and loss, Deposit-Deposit, Withdrawal-withdraw, Transferin-Transfer in, TransferOut-Transfer out
offset	long	No	Start offset. Generally, the only attribute of the last returned result of the previous request is used, and the first page is returned by default
maxCount	long	No	Displayed size per page. The default size is 50
currency	String	No	Currency of transaction history XBT or USDT
forward	boolean	No	This parameter functions to judge whether the lookup is forward or not. True means “yes” and False means “no”. This parameter is set as true by default
TIP
Supplementary instructions for startAt and endAt: startAt must be less than endAt; and the interval cannot exceed 1 day; only one field is allowed, and if only one field is passed, another field will be automatically added or subtracted by the system 1 day to complete

RESPONSES

Param	Description
time	Event time
type	Type: RealisedPNL, Deposit, Withdrawal, TransferIn, TransferOut
amount	Transaction amount
fee	Fees
accountEquity	Account equity
status	Status: Completed, Pending
remark	Ticker symbol of the contract
offset	Offset
currency	Currency

Sub-Account

Introduction

You can create a sub-account and its API key on the web end.

A sub-account can be used to separate the funds for crypto tradings and the funds can be transferred between the master account and the sub-account.

Please note that the funds in sub-account is limited for sub-account crypto trading only and the funds cannot be withdrawn directly from the sub-account.

The API of a sub-account is available to access all the public endpoints. Besides this, traders can access the following private endpoints via the API key of a sub-account:

Endpoints	Description
List Accounts	Get the status of an account.
Get an Account	Get the info of an account.
Create an Account	Create an Account.
Get Account Ledgers	Get the funds details of an account.
Get Holds	Get the hold details of an account.
Inner Transfer	Transferring assets between the accounts of main and trade.
Place a new order	Place an order.
Cancel an order	Request to cancel an order.
Cancel all orders	Request to cancel all orders.
List Orders	Get orders details.
Recent Orders	Get order details of the last 24 hours(up to 1000).
Get an order	Get the details of a single order.
List Fills	Get the order execution details.
Recent Fills	Get order execution details of the last 24 hours(up to 1000).
Cancel Single Order by clientOid	Cancel Single Order by clientOid.
Get Single Active Order by clientOid	Get Single Active Order by clientOid.
A sub-account shares the same fee level as its master-account. (The fee level will be calculated based on the total transaction amount of the sub-account and the master account or the holding amount of KCS.)

The sub-account needs to transfer funds from the main account to the trade account before trading.

TIP
The withdrawal and deposit is not supported for sub-account.

Get All Sub-Accounts Info(V1)

You can get the user info of all sub-account via this interface.

TIP
It is recommended to use the GET /api/v2/sub/user interface for paging query

HTTP REQUEST

GET /api/v1/sub/user

Example

GET /api/v1/sub/user

[
  {
    "userId": "5cbd31ab9c93e9280cd36a0a", //subUserId
    "uid": "1789234",
    "subName": "kucoin1",
    "type": 0, //type:0-nomal
    "remarks": "kucoin1",
    "access": "All"
  },
  {
    "userId": "5cbd31b89c93e9280cd36a0d",
    "uid": "1789431",
    "subName": "kucoin2",
    "type": 1, //type:1-rebot
    "remarks": "kucoin2",
    "access": "All"
  }
]
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

N/A

RESPONSES

Param	Description
userId	The user ID of your sub-account
uid	The UID of your sub-account
subName	The username of your sub-account
type	The type of your sub-account
remarks	Remark
access	The permissions of your sub-account

Get All Sub-Accounts Info(V2)

This endpoint can be used to get a paginated list of sub-accounts. Pagination is required.

HTTP REQUEST

GET /api/v2/sub/user

Example

GET /api/v2/sub/user

{
  "code": "200000",
  "data": {
    "currentPage": 1,
    "pageSize": 100,
    "totalNum": 1,
    "totalPage": 1,
    "items": [
      {
        "userId": "635002438793b80001dcc8b3",
        "uid": 62356,
        "subName": "margin01",
        "status": 2,
        "type": 4,
        "access": "Margin",
        "createdAt": 1666187844000,
        "remarks": null
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currentPage	Int	No	Current request page. Default is 1
pageSize	Int	No	Number of results per request. Minimum is 1, maximum is 100, default is 10.
RESPONSES

Param	Description
createdAt	Time of the event
remarks	Remarks
status	Account status; 2:Enable, 3:Frozen
subName	Sub-account name
type	The type of your sub-account
uid	Sub-account UID
userId	The user ID of your sub-account
access	Permission


Create Sub-Account

This endpoint can be used to create sub-accounts.

HTTP REQUEST

POST /api/v2/sub/user/created

Example

POST /api/v2/sub/user/created

{
  "code": "200000",
  "data": {
    "uid": 9969082973,
    "subName": "AAAAAAAAAA0007",
    "remarks": "remark",
    "access": "Spot"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URLs

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：15

PARAMETERS

Param	Type	Mandatory	Description
password	String	Yes	Password(7-24 characters, must contain letters and numbers, cannot only contain numbers or include special characters)
remarks	String	No	Remarks(1~24 characters)
subName	String	Yes	Sub-account name(must contain 7-32 characters, at least one number and one letter. Cannot contain any spaces.)
access	String	Yes	Permission (types include Spot, Futures, Margin permissions, which can be used alone or in combination).
RESPONSES

Param	Description
remarks	Remarks
subName	Sub-account name
uid	Sub-account UID
access	Permission

Add SubAccount Margin Permission

This endpoint can be used to add sub-accounts Margin permission. Before using this endpoints, you need to ensure that the master account apikey has Margin permissions and the Margin function has been activated.

HTTP REQUEST

POST /api/v3/sub/user/margin/enable

Example

POST /api/v3/sub/user/margin/enable

{
  "code": "200000",
  "data": null
}
API KEY PERMISSIONS

This endpoint requires the Margin permission.

REQUEST URLs

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：15

PARAMETERS

Param	Type	Mandatory	Description
uid	String	Yes	Sub account UID
RESPONSES

NULL

Add SubAccount Futures Permission

This endpoint can be used to add sub-accounts Futures permission. Before using this endpoints, you need to ensure that the master account apikey has Futures permissions and the Futures function has been activated.

HTTP REQUEST

POST /api/v3/sub/user/futures/enable

Example

POST /api/v3/sub/user/futures/enable

{
  "code": "200000",
  "data": null
}
API KEY PERMISSIONS

This endpoint requires the Futures permission.

REQUEST URLs

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：15

PARAMETERS

Param	Type	Mandatory	Description
uid	String	Yes	Sub account UID
RESPONSES

NULL


Get a Sub-Account Balance

This endpoint returns the account info of a sub-user specified by the subUserId.

HTTP REQUEST

GET /api/v1/sub-accounts/{subUserId}

Example

GET /api/v1/sub-accounts/5caefba7d9575a0688f83c45?includeBaseAmount=false

{
  "subUserId": "5caefba7d9575a0688f83c45",
  "subName": "sdfgsdfgsfd",
  "mainAccounts": [
    {
      "currency": "BTC",
      "balance": "8",
      "available": "8",
      "holds": "0",
      "baseCurrency": "BTC",
      "baseCurrencyPrice": "1",
      "baseAmount": "1.1"
    }
  ],
  "tradeAccounts": [
    {
      "currency": "BTC",
      "balance": "1000",
      "available": "1000",
      "holds": "0",
      "baseCurrency": "BTC",
      "baseCurrencyPrice": "1",
      "baseAmount": "1.1"
    }
  ],
  "marginAccounts": [
    {
      "currency": "BTC",
      "balance": "1.1",
      "available": "1.1",
      "holds": "0",
      "baseCurrency": "BTC",
      "baseCurrencyPrice": "1",
      "baseAmount": "1.1"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：15

PARAMETERS

Param	Type	Mandatory	Description
subUserId	String	Yes	the user ID of a sub-account.
includeBaseAmount	boolean	Yes	false: do not display the currency which asset is 0, true: display all currency
RESPONSES

Param	Description
subUserId	The user ID of a sub-user.
subName	The username of a sub-user.
currency	Currency
balance	Total funds in an account.
available	Funds available to withdraw or trade.
holds	Funds on hold (not available for use).
baseCurrency	Calculated on this currency.
baseCurrencyPrice	The base currency price.
baseAmount	The base currency amount.

Get All Sub-Accounts Balance(V1)

This endpoint returns the account info of all sub-users.

TIP
It is recommended to use the GET /api/v2/sub-accounts interface for paging query

HTTP REQUEST

GET /api/v1/sub-accounts

Example

GET /api/v1/sub-accounts

[
  {
    "subUserId": "5caefba7d9575a0688f83c45",
    "subName": "kucoin1",
    "mainAccounts": [
      {
        "currency": "BTC",
        "balance": "6",
        "available": "6",
        "holds": "0",
        "baseCurrency": "BTC",
        "baseCurrencyPrice": "1",
        "baseAmount": "1.1"
      }
    ],
    "tradeAccounts": [
      {
        "currency": "BTC",
        "balance": "1000",
        "available": "1000",
        "holds": "0",
        "baseCurrency": "BTC",
        "baseCurrencyPrice": "1",
        "baseAmount": "1.1"
      }
    ],
    "marginAccounts": [
      {
        "currency": "BTC",
        "balance": "1.1",
        "available": "1.1",
        "holds": "0",
        "baseCurrency": "BTC",
        "baseCurrencyPrice": "1",
        "baseAmount": "1.1"
      }
    ]
  }
]
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

N/A

RESPONSES

Param	Description
subUserId	The user ID of the sub-user.
subName	The username of the sub-user.
currency	The currency of the account.
balance	Total funds in the account.
available	Funds available to withdraw or trade.
holds	Funds on hold (not available for use).
baseCurrency	Calculated on this currency.
baseCurrencyPrice	The base currency price.
baseAmount	The base currency amount.

Get All Sub-Accounts Balance(V2)

This endpoint can be used to get paginated sub-account information. Pagination is required.

HTTP REQUEST

GET /api/v2/sub-accounts

Example

GET /api/v2/sub-accounts

{
  "code": "200000",
  "data": {
    "currentPage": 1,
    "pageSize": 10,
    "totalNum": 14,
    "totalPage": 2,
    "items": [
      {
        "subUserId": "635002438793b80001dcc8b3",
        "subName": "margin03",
        "mainAccounts": [
          {
            "currency": "00",
            "balance": "0",
            "available": "0",
            "holds": "0",
            "baseCurrency": "BTC",
            "baseCurrencyPrice": "125.63",
            "baseAmount": "0"
          }
        ]
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currentPage	Int	No	Current request page. Default is 1
pageSize	Int	No	Number of results per request. Minimum is 1, maximum is 100, default is 10.
RESPONSES

Param	Description
subUserId	The user ID of the sub-user.
subName	The username of the sub-user.
currency	The currency of the account.
balance	Total funds in the account.
available	Funds available to withdraw or trade.
holds	Funds on hold (not available for use).
baseCurrency	Calculated on this currency.
baseCurrencyPrice	The base currency price.
baseAmount	The base currency amount.

Sub-Account API

Get Sub-Account API List

This endpoint can be used to obtain a list of Spot APIs pertaining to a sub-account.(Not contain ND Broker Sub Account)

HTTP REQUEST

GET /api/v1/sub/api-key

Example

GET /api/v1/sub/api-key

{
  "code": "200000",
  "data": [
    {
      "subName": "AAAAAAAAAAAAA0022",
      "remark": "hytest01-01",
      "apiKey": "63032453e75087000182982b",
      "permission": "General",
      "ipWhitelist": "",
      "createdAt": 1661150291000,
      "apiVersion" : 3
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL or Futures URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
apiKey	String	No	API-Key
subName	String	Yes	Sub-account name.
RESPONSES

Param	Description
apiKey	API-Key
createdAt	Time of the event
ipWhitelist	IP whitelist
permission	Permissions
remark	Remarks
subName	Sub-account name
apiVersion	API-Key version

Create Sub-Account API

This endpoint can be used to create Spot APIs for sub-accounts.

HTTP REQUEST

POST /api/v1/sub/api-key

Example

POST /api/v1/sub/api-key

{
  "code": "200000",
  "data": {
    "subName": "AAAAAAAAAA0007",
    "remark": "remark",
    "apiKey": "630325e0e750870001829864",
    "apiSecret": "110f31fc-61c5-4baf-a29f-3f19a62bbf5d",
    "passphrase": "passphrase",
    "permission": "General",
    "ipWhitelist": "",
    "createdAt": 1661150688000
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL or Futures URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
subName	String	Yes	Sub-account name, create sub account name of API Key.
passphrase	String	Yes	Password(Must contain 7-32 characters. Cannot contain any spaces.)
remark	String	Yes	Remarks(1~24 characters)
permission	String	No	Permissions(Only General、Spot、Futures、Margin、InnerTransfer(Flex Transfer) permissions can be set, such as "General, Trade". The default is "General")
ipWhitelist	String	No	IP whitelist(You may add up to 20 IPs. Use a halfwidth comma to each IP)
expire	String	No	API expiration time; Never expire(default)-1，30Day30，90Day90，180Day180，360Day360
RESPONSES

Param	Description
apiKey	API-Key
createdAt	Time of the event
ipWhitelist	IP whitelist
permission	Permissions
remark	Remarks
subName	Sub-account name
apiSecret	API secret
passphrase	Password

Modify Sub-Account API

This endpoint can be used to modify sub-account Spot APIs.

HTTP REQUEST

POST /api/v1/sub/api-key/update

Example

POST /api/v1/sub/api-key/update

{
  "code": "200000",
  "data": {
    "subName": "AAAAAAAAAA0007",
    "apiKey": "630329b4e7508700018298c5",
    "permission": "General",
    "ipWhitelist": "127.0.0.1"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL or Futures URL

REQUEST RATE LIMIT

Manage weight：30

PARAMETERS

Param	Type	Mandatory	Description
subName	String	Yes	Sub-account name
apiKey	String	Yes	API-Key(Sub-account APIKey)
passphrase	String	Yes	Password of API key
permission	String	No	Permissions list(Only General、Spot、Futures、Margin、InnerTransfer(Flex Transfer) permissions can be set, such as "General, Trade". If modified, permissions will be reset.
ipWhitelist	String	No	IP whitelist(you may add up to 20 IPs. Use a halfwidth comma to each IP.If modified, the IP will be reset.)
expire	String	No	API expiration time; Never expire(default)-1，30Day30，90Day90，180Day180，360Day360
RESPONSES

Param	Description
apiKey	API-Key
ipWhitelist	IP whitelist
permission	Permissions
subName	Sub-account name

Delete Sub-Account API

This endpoint can be used to delete sub-account Spot APIs.

HTTP REQUEST

DELETE /api/v1/sub/api-key

Example

DELETE /api/v1/sub/api-key

{
  "code": "200000",
  "data": {
    "subName": "AAAAAAAAAA0007",
    "apiKey": "630325e0e750870001829864"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL or Futures URL

REQUEST RATE LIMIT

Manage weight：30

PARAMETERS

Param	Type	Mandatory	Description
apiKey	String	Yes	API-Key(API key to be deleted)
passphrase	String	Yes	Password(Password of the API key)
subName	String	Yes	Sub-account name(The sub-account name corresponding to the API key)
RESPONSES

Param	Description
apiKey	API-Key
subName	Sub-account name.

Get Account Detail - Margin

Request via this endpoint to get the info of the margin account.

HTTP REQUEST

GET /api/v1/margin/account

Example

GET /api/v1/margin/account

{
    "code": "200000",
    "data": {
        "debtRatio": "0",
        "accounts": [
            {
                "currency": "KCS",
                "totalBalance": "0.01",
                "availableBalance": "0.01",
                "holdBalance": "0",
                "liability": "0",
                "maxBorrowSize": "0"
            },
            {
                "currency": "USDT",
                "totalBalance": "0",
                "availableBalance": "0",
                "holdBalance": "0",
                "liability": "0",
                "maxBorrowSize": "0"
            },
            ...
        ]
    }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：40

RESPONSES

Param	Description
accounts	Margin account list
debtRatio	Debt ratio
currency	Currency
totalBalance	Total funds in the account
availableBalance	Available funds in the account
holdBalance	Funds on hold in the account
liability	Total liabilities
maxBorrowSize	Available size to borrow

Get Account Detail - Cross Margin

Request via this endpoint to get the info of the cross margin account.

HTTP REQUEST

GET /api/v3/margin/accounts

Example

GET /api/v3/margin/accounts?quoteCurrency=BTC

//Response
{
    "success": true,
    "code": "200",
    "msg": "success",
    "retry": false,
    "data": {
        "timestamp": 1669708513820,
        "currentPage": 1,
        "pageSize": 100,
        "totalNum": 1,
        "totalPage": 1,
        "items": [
            {
                "totalLiabilityOfQuoteCurrency": "0.976",
                "totalAssetOfQuoteCurrency": "1.00",
                "debtRatio": "0.976",
                "status": "LIQUIDATION",
                "assets": [
                    {
                        "currency": "BTC",
                        "borrowEnabled": true,
                        "repayEnabled": true,
                        "transferEnabled": false,
                        "borrowed": "0.976",
                        "totalAsset": "1.00",
                        "available": "0.024",
                        "hold": "0",
                        "maxBorrowSize": "0"
                    }
                ]
            }
        ]
    }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：15

PARAMETERS

Param	Type	Mandatory	Description
quoteCurrency	STRING	No	quote currency, currently only supports USDT, KCS, BTC, USDT as default
queryType	STRING	No	Query account type (default MARGIN), MARGIN - only query low frequency cross margin account, MARGIN_V2-only query high frequency cross margin account, ALL - consistent aggregate query with the web side
RESPONSES

Param	Description
totalAssetOfQuoteCurrency	Total Assets in Quote Currency
totalLiabilityOfQuoteCurrency	Total Liability in Quote Currency
debtRatio	debt ratio
status	Position status; EFFECTIVE-effective, BANKRUPTCY-bankruptcy liquidation, LIQUIDATION-closing, REPAY-repayment, BORROW borrowing
assets	asset list
currency	currency
liability	Liabilities
total	Total Assets
available	Account available assets (total assets - frozen)
hold	Account frozen assets
maxBorrowSize	The user's remaining maximum loan amount
borrowEnabled	Support borrow or not
repayEnabled	Support repay or not
transferEnabled	Support transfer or not

Get Account Detail - Isolated Margin

Request via this endpoint to get the info of the isolated margin account.

HTTP REQUEST

GET /api/v3/isolated/accounts

Example

GET /api/v3/isolated/accounts?quoteCurrency=BTC

//Response
{
	"code": "200000",
	"data": [
		{
			"totalAssetOfQuoteCurrency": "3.4939947",
			"totalLiabilityOfQuoteCurrency": "0.00239066",
			"timestamp": 1668062174000,
			"assets": [
				{
					"symbol": "MANA-USDT",
					"debtRatio": "0",
					"status": "BORROW",
					"baseAsset": {
						"currency": "MANA",
						"borrowEnabled": true,
						"repayEnabled": true,
						"transferEnabled": true,
						"borrowed": "0",
						"totalAsset": "0",
						"available": "0",
						"hold": "0",
						"maxBorrowSize": "1000"
					},
					"quoteAsset": {
						"currency": "USDT",
						"borrowEnabled": true,
						"repayEnabled": true,
						"transferEnabled": true,
						"borrowed": "0",
						"totalAsset": "0",
						"available": "0",
						"hold": "0",
						"maxBorrowSize": "50000"
					}
				}
			]
		}
	]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：15

PARAMETERS

Param	Type	Mandatory	Description
symbol	STRING	No	For isolated trading pairs, query all without passing
quoteCurrency	STRING	No	quote currency, currently only supports USDT, KCS, BTC, default is USDT
queryType	STRING	No	Query account type (default MARGIN), ISOLATED- - only query low frequency isolated margin account, ISOLATED_V2-only query high frequency isolated margin account, ALL - consistent aggregate query with the web side
RESPONSES

Param	Description
totalAssetOfQuoteCurrency	Total Assets in Quote Currency
totalLiabilityOfQuoteCurrency	Total Liability in Quote Currency
timestamp	timestamp
status	Position status; EFFECTIVE-effective, BANKRUPTCY-bankruptcy liquidation, LIQUIDATION-closing, REPAY-repayment, BORROW borrowing
assets	asset list
symbol	symbol
debtRatio	debt ratio
baseAsset	base asset
quoteAsset	quote asset
currency	currency
borrowEnabled	Support borrow or not
repayEnabled	Support repay or not
transferEnabled	Support transfer or not
liability	Liabilities
total	Total Assets
available	Account available assets (total assets - frozen)
hold	Account frozen assets
maxBorrowSize	The user's remaining maximum loan amount

Get Account Detail - Futures

HTTP REQUEST

GET /api/v1/account-overview

Example

GET /api/v1/account-overview?currency=XBT

  {
    "code": "200000",
    "data": {
      "accountEquity": 99.8999305281, 	//Account equity = marginBalance + Unrealised PNL
      "unrealisedPNL": 0, 				//Unrealised profit and loss
      "marginBalance": 99.8999305281, 	//Margin balance = positionMargin + orderMargin + frozenFunds + availableBalance - unrealisedPNL
      "positionMargin": 0, 				//Position margin
      "orderMargin": 0, 				//Order margin
      "frozenFunds": 0, 				//Frozen funds for withdrawal and out-transfer
      "availableBalance": 99.8999305281 //Available balance
      "currency": "XBT" ,				//currency code
	  "riskRatio": 0 
    }
  }
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Futures weight：5

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currecny ,including XBT,USDT,Default XBT
RESPONSES

Param	Description
accountEquity	Account equity = marginBalance + Unrealised PNL
unrealisedPNL	Unrealised profit and loss
marginBalance	Margin balance = positionMargin + orderMargin + frozenFunds + availableBalance - unrealisedPNL
positionMargin	Position margin
orderMargin	Order margin
frozenFunds	Frozen funds for withdrawal and out-transfer
availableBalance	Available balance
currency	currency code
riskRatio	Cross margin risk ratio

Get All Sub-Accounts Balance - Futures

HTTP REQUEST

GET /api/v1/account-overview-all

Example

GET /api/v1/account-overview-all?currency=USDT

{
  "success": true,
  "code": "200",
  "msg": "success",
  "retry": false,
  "data": {
    "summary": {
      "accountEquityTotal": 9.99,
      "unrealisedPNLTotal": 0,
      "marginBalanceTotal": 9.99,
      "positionMarginTotal": 0,
      "orderMarginTotal": 0,
      "frozenFundsTotal": 0,
      "availableBalanceTotal": 9.99,
      "currency": "USDT"
    },
    "accounts": [
      {
        "accountName": "main",
        "accountEquity": 9.99,
        "unrealisedPNL": 0,
        "marginBalance": 9.99,
        "positionMargin": 0,
        "orderMargin": 0,
        "frozenFunds": 0,
        "availableBalance": 9.99,
        "currency": "USDT"
      },
      {
        "accountName": "subacct",
        "accountEquity": 0,
        "unrealisedPNL": 0,
        "marginBalance": 0,
        "positionMargin": 0,
        "orderMargin": 0,
        "frozenFunds": 0,
        "availableBalance": 0,
        "currency": "USDT"
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Futures weight：6

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currecny ,including XBT,USDT,Default XBT
RESPONSES

Param	Description
accountEquityTotal	Total Account Equity
unrealisedPNLTotal	Total unrealisedPNL
marginBalanceTotal	Total Margin Balance
positionMarginTotal	Total Position margin
orderMarginTotal	Total Order Margin
frozenFundsTotal	Total frozen funds for withdrawal and out-transfer
availableBalanceTotal	total available balance
accountName	Account name, main account is main
accountEquity	Account Equity = marginBalance + unrealisedPNL
unrealisedPNL	unrealisedPNL
marginBalance	Margin Balance = positionMargin + orderMargin + frozenFunds + availableBalance - unrealisedPNL
positionMargin	Position margin
orderMargin	Order Margin
frozenFunds	Frozen funds for withdrawal and out-transfer
availableBalance	Available balance
currency	currency

Deposit

Create Deposit Address

Request via this endpoint to create a deposit address for a currency you intend to deposit.

Notice This interface has been abandoned. Please use the v3 interface to apply for a deposit address.

HTTP REQUEST

POST /api/v1/deposit-addresses

Example

POST /api/v1/deposit-addresses

{
  "data" : {
    "memo" : null,
    "chain" : "ERC20",
    "chainId" : "eth",
    "to" : "MAIN",
    "currency" : "USDT",
    "address" : "0x0a2586d5a901c8e7e68f6b0dc83bfd8bd8600ff5"
  },
  "code" : "200000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
chain	String	No	The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
RESPONSES

Param	Description
address	Deposit address
memo	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
chain	The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native.
chainID	The chain id of currency
to	deposit account type: main (funding account), trade (spot trading account)
currency	currency

Create Deposit Address（V3）

Request via this endpoint to create a deposit address for a currency you intend to deposit.

HTTP REQUEST

POST /api/v3/deposit-address/create

Example

POST /api/v3/deposit-address/create

{
  "data" : {
    "memo" : null,
    "chain" : "ERC20",
    "chainId" : "eth",
    "to" : "MAIN",
    "currency" : "USDT",
    "address" : "0x0a2586d5a901c8e7e68f6b0dc83bfd8bd8600ff5"
  },
  "code" : "200000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
chain	String	No	The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native. This only apply for multi-chain currency, and there is no need for single chain currency.
to	String	No	Deposit account type: main (funding account), trade (spot trading account), the default is main
amount	String	No	Deposit amount. This parameter is only used when applying for invoices on the Lightning Network. This parameter is invalid if it is not passed through the Lightning Network.
RESPONSES

Param	Description
address	Deposit address
memo	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
chainName	The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20. The available value for BTC are Native, Segwit, TRC20, the parameters are bech32, btc, trx, default is Native.
chainID	The chain id of currency
to	deposit account type: main (funding account), trade (spot trading account)
currency	currency
expirationDate	Expiration time, Lightning network expiration time, non-Lightning network this field is invalid

Get Deposit Addresses(V3)

Get all deposit addresses for the currency you intend to deposit. If the returned data is empty, you may need to Create Deposit Address first.

HTTP REQUEST

GET /api/v3/deposit-addresses

Example

GET /api/v3/deposit-addresses?currency=BTC

{
  "data" : [
    {
      "address" : "bc1qwyuvmx53d*****gdg47kqxfwqy",
      "chain" : "BTC-Segwit",
      "memo" : "",
      "contractAddress" : "",
      "to" : "MAIN",
      "chainId" : "bech32",
      "currency" : "BTC"
    },
    {
      "address" : "3K7X9Vjnd*****TGaTAWoJ7H",
      "chain" : "BTC",
      "memo" : "",
      "contractAddress" : "",
      "to" : "MAIN",
      "chainId" : "btc",
      "currency" : "BTC"
    },
    {
      "address" : "0x637da22b860*****ac0c2433",
      "chain" : "KCC",
      "memo" : "",
      "contractAddress" : "0xfa93c12cd345c658bc4644d1d4e1b9615952258c",
      "to" : "MAIN",
      "chainId" : "kcc",
      "currency" : "BTC"
    }
  ],
  "code" : "200000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
amount	String	No	Deposit amount. This parameter is only used when applying for invoices on the Lightning Network. This parameter is invalid if it is not passed through the Lightning Network.
chain	String	No	The chain Id of currency.
RESPONSES

Param	Description
address	Deposit address
memo	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
chainName	The chain name of currency.
chainId	The chain Id of currency.
contractAddress	The token contract address.
expirationDate	Expiration time, Lightning network expiration time, non-Lightning network this field is invalid
to	Deposit account type: main (funding account), trade (spot trading account)
currency	currency

Get Deposit List

Request via this endpoint to get deposit list Items are paginated and sorted to show the latest first. See the Pagination section for retrieving additional entries after the first page.

HTTP REQUEST

GET /api/v1/deposits

Example

GET /api/v1/deposits

{
  "code": "200000",
  "data": {
    "currentPage": 1,
    "pageSize": 50,
    "totalNum": 1,
    "totalPage": 1,
    "items": [
      {
        "currency": "XRP",
        "chain": "xrp",
        "status": "SUCCESS",
        "address": "rNFugeoj3ZN8Wv6xhuLegUBBPXKCyWLRkB",
        "memo": "1919537769",
        "isInner": false,
        "amount": "20.50000000",
        "fee": "0.00000000",
        "walletTxId": "2C24A6D5B3E7D5B6AA6534025B9B107AC910309A98825BF5581E25BEC94AD83B",
        "createdAt": 1666600519000,
        "updatedAt": 1666600549000,
        "remark": "Deposit"
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
status	String	No	Status. Available value: PROCESSING, SUCCESS, and FAILURE
RESPONSES

Param	Description
address	Deposit address
memo	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
amount	Deposit amount
fee	Fees charged for deposit
currency	Currency
chain	The chain of currency
isInner	Internal deposit or not
walletTxId	Wallet Txid
status	Status
remark	remark
createdAt	Creation time of the database record
updatedAt	Update time of the database record

Get V1 Historical Deposits List

Request via this endpoint to get the V1 historical deposits list on KuCoin. The return value is the data after Pagination, sorted in descending order according to time.

TIP
The data of the latest one month will be queried by default.

HTTP REQUEST

GET /api/v1/hist-deposits

Example

GET /api/v1/hist-deposits

{
  "currentPage": 1,
  "pageSize": 1,
  "totalNum": 9,
  "totalPage": 9,
  "items": [
    {
      "currency": "BTC",
      "createAt": 1528536998,
      "amount": "0.03266638",
      "walletTxId": "55c643bc2c68d6f17266383ac1be9e454038864b929ae7cee0bc408cc5c869e8",
      "isInner": false,
      "status": "SUCCESS"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency
status	String	No	Status. Available value: PROCESSING, SUCCESS, and FAILURE
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
RESPONSES

Param	Description
amount	Deposit amount
currency	Currency
isInner	Internal deposit or not
walletTxId	Wallet Txid
createAt	Creation time of the database record
status	Status

Withdrawals

Get Withdrawals List

HTTP REQUEST

GET /api/v1/withdrawals

Example

GET /api/v1/withdrawals

{
  "code": "200000",
  "data": {
    "currentPage": 1,
    "pageSize": 50,
    "totalNum": 1,
    "totalPage": 1,
    "items": [
      {
        "id": "63564dbbd17bef00019371fb",
        "currency": "XRP",
        "chain": "xrp",
        "status": "SUCCESS",
        "address": "rNFugeoj3ZN8Wv6xhuLegUBBPXKCyWLRkB",
        "memo": "1919537769",
        "isInner": false,
        "amount": "20.50000000",
        "fee": "0.50000000",
        "walletTxId": "2C24A6D5B3E7D5B6AA6534025B9B107AC910309A98825BF5581E25BEC94AD83B",
        "createdAt": 1666600379000,
        "updatedAt": 1666600511000,
        "remark": "test"
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency
status	String	No	Status. Available value:PROCESSING, WALLET_PROCESSING, SUCCESS, FAILURE
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
RESPONSES

Param	Description
id	Unique identity
address	Withdrawal address
memo	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
currency	Currency
chain	The chain of currency
amount	Withdrawal amount
fee	Withdrawal fee
walletTxId	Wallet Txid
isInner	Internal withdrawal or not
status	status
remark	remark
createdAt	Creation time
updatedAt	Update time

Get V1 Historical Withdrawals List

List of KuCoin V1 historical withdrawals. The return value is the data after Pagination, sorted in descending order according to time.

TIP
Default query for one month of data.

HTTP REQUEST

GET /api/v1/hist-withdrawals

Example

GET /api/v1/hist-withdrawals

{
  "currentPage": 1,
  "pageSize": 1,
  "totalNum": 2,
  "totalPage": 2,
  "items": [
    {
      "currency": "BTC",
      "createAt": 1526723468,
      "amount": "0.534",
      "address": "33xW37ZSW4tQvg443Pc7NLCAs167Yc2XUV",
      "walletTxId": "aeacea864c020acf58e51606169240e96774838dcd4f7ce48acf38e3651323f4",
      "isInner": false,
      "status": "SUCCESS"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
currency	String	No	Currency
status	String	No	Status. Available value: PROCESSING, SUCCESS, FAILURE
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
RESPONSES

Param	Description
amount	Withdrawal amount
currency	Currency
isInner	Internal deposit or not
walletTxId	Wallet Txid
createAt	Creation time of the database record
status	Status

Get Withdrawal Quotas

HTTP REQUEST

GET /api/v1/withdrawals/quotas

Example

GET /api/v1/withdrawals/quotas?currency=BTC

{
  "data": {
    "limitBTCAmount": "37.83993375",
    "quotaCurrency": "USDT",
    "chain": "BTC",
    "remainAmount": "37.83993375",
    "innerWithdrawMinFee": "0",
    "usedBTCAmount": "0.00000000",
    "limitQuotaCurrencyAmount": "1000000.00000000",
    "withdrawMinSize": "0.0008",
    "withdrawMinFee": "0.0005",
    "precision": 8,
    "reason": null,
    "usedQuotaCurrencyAmount": "0",
    "currency": "BTC",
    "availableAmount": "0",
    "isWithdrawEnabled": true
  },
  "code": "200000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
chain	String	No	The chain of currency. This only apply for multi-chain currency, and there is no need for single chain currency; you can query the chainId through the response of the GET /api/v3/currencies/{currency} interface.
RESPONSES

Param	Description
availableAmount	Current available withdrawal amount
remainAmount	Remaining amount available to withdraw the current day
withdrawMinSize	Minimum withdrawal amount
limitBTCAmount	24-hour total withdrawal limit, equivalent to BTC
innerWithdrawMinFee	Fees for internal withdrawal
usedBTCAmount	The estimated BTC amount (based on the daily fiat limit) that can be withdrawn within the current day
isWithdrawEnabled	Is the withdraw function enabled or not
withdrawMinFee	Minimum withdrawal fee
precision	Floating point precision.
chain	The chain name of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20, default is ERC20.
quotaCurrency	withdrawal limit currency
limitQuotaCurrencyAmount	The intraday available withdrawal amount(withdrawal limit currency)
usedQuotaCurrencyAmount	The intraday cumulative withdrawal amount(withdrawal limit currency)
lockedAmount	Total locked amount (including the amount locked into USDT for each currency)

Apply Withdraw

HTTP REQUEST

POST /api/v1/withdrawals

Notice This interface has been abandoned. Please use the v3 version to apply withdrawal.

TIP
On the WEB end, you can open the switch of specified favorite addresses for withdrawal, and when it is turned on, it will verify whether your withdrawal address(including chain) is a favorite address(it is case sensitive); if it fails validation, it will respond with the error message {"msg":"Already set withdraw whitelist, this address is not favorite address","code":"260325"}.

API KEY PERMISSIONS

This endpoint requires the Transfer permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
address	String	Yes	Withdrawal address
amount	number	Yes	Withdrawal amount, a positive number which is a multiple of the amount precision (fees excluded)
memo	String	No	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
isInner	boolean	No	Internal withdrawal or not. Default : false
remark	String	No	Remark
chain	String	No	The chain of currency. For a currency with multiple chains, it is recommended to specify chain parameter instead of using the default chain; you can query the chainId through the response of the GET /api/v3/currencies/{currency} interface.
feeDeductType	String	No	Withdrawal fee deduction type: INTERNAL or EXTERNAL or not specified

1. INTERNAL- deduct the transaction fees from your withdrawal amount
2. EXTERNAL- deduct the transaction fees from your main account
3. If you don't specify the feeDeductType parameter, when the balance in your main account is sufficient to support the withdrawal, the system will initially deduct the transaction fees from your main account. But if the balance in your main account is not sufficient to support the withdrawal, the system will deduct the fees from your withdrawal amount. For example: Suppose you are going to withdraw 1 BTC from the KuCoin platform (transaction fee: 0.0001BTC), if the balance in your main account is insufficient, the system will deduct the transaction fees from your withdrawal amount. In this case, you will be receiving 0.9999BTC.
RESPONSES

Param	Description
withdrawalId	Withdrawal id, a unique ID for a withdrawal

Apply Withdraw(V3)

HTTP REQUEST

POST /api/v3/withdrawals

TIP
On the WEB end, you can open the switch of specified favorite addresses for withdrawal, and when it is turned on, it will verify whether your withdrawal address(including chain) is a favorite address(it is case sensitive); if it fails validation, it will respond with the error message {"msg":"Already set withdraw whitelist, this address is not favorite address","code":"260325"}.

API KEY PERMISSIONS

This endpoint requires the Transfer permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：5

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
toAddress	String	Yes	Withdrawal address, ADDRESS (withdrawal address), UID, MAIL (email), PHONE (mobile phone number).
amount	number	Yes	Withdrawal amount, a positive number which is a multiple of the amount precision (fees excluded)
memo	String	No	Address remark. If there’s no remark, it is empty. When you withdraw from other platforms to the KuCoin, you need to fill in memo(tag). If you do not fill memo (tag), your deposit may not be available, please be cautious.
isInner	boolean	No	Internal withdrawal or not. Default : false
remark	String	No	Remark
chain	String	No	The chain of currency. For a currency with multiple chains, it is recommended to specify chain parameter instead of using the default chain; you can query the chainId through the response of the GET /api/v3/currencies/{currency} interface.
feeDeductType	String	No	Withdrawal fee deduction type: INTERNAL or EXTERNAL or not specified

1. INTERNAL- deduct the transaction fees from your withdrawal amount
2. EXTERNAL- deduct the transaction fees from your main account
3. If you don't specify the feeDeductType parameter, when the balance in your main account is sufficient to support the withdrawal, the system will initially deduct the transaction fees from your main account. But if the balance in your main account is not sufficient to support the withdrawal, the system will deduct the fees from your withdrawal amount. For example: Suppose you are going to withdraw 1 BTC from the KuCoin platform (transaction fee: 0.0001BTC), if the balance in your main account is insufficient, the system will deduct the transaction fees from your withdrawal amount. In this case, you will be receiving 0.9999BTC.
4. Lightning Network can only deduct internally
withdrawType	String	Yes	Withdrawal type, ADDRESS (withdrawal address), UID, MAIL (email), PHONE (mobile phone number). Note: If you withdraw by uid/mail/phone, there will have rate limited: 3 times/10 seconds, 50 times/24 hours (calculated on a rolling basis based on the first request time)
RESPONSES

Param	Description
withdrawalId	Withdrawal id, a unique ID for a withdrawal

Cancel Withdrawal

Only withdrawals requests of PROCESSING status could be canceled.

HTTP REQUEST

DELETE /api/v1/withdrawals/{withdrawalId}

Example

DELETE /api/v1/withdrawals/5bffb63303aa675e8bbe18f9

{
  "withdrawalId": "5bffb63303aa675e8bbe18f9"
}
API KEY PERMISSIONS

This endpoint requires the Transfer permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
withdrawalId	String	Yes	Path parameter, a unique ID for a withdrawalId


Transfer

Get the Transferable

This endpoint returns the transferable balance of a specified account.

HTTP REQUEST

GET /api/v1/accounts/transferable

Example

GET /api/v1/accounts/transferable?currency=BTC&type=MAIN

{
  "currency": "KCS",
  "balance": "0",
  "available": "0",
  "holds": "0",
  "transferable": "0"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Currency
type	String	Yes	The account type:MAIN、TRADE、MARGIN、ISOLATED、OPTION
tag	String	No	Trading pair, required when the account type is ISOLATED; other types are not passed, e.g.: BTC-USDT
RESPONSES

Param	Description
currency	Currency
balance	Total funds in an account.
available	Funds available to withdraw or trade.
holds	Funds on hold (not available for use).
transferable	Funds available to transfer.

FlexTransfer

HTTP REQUEST

POST /api/v3/accounts/universal-transfer

Example

POST /api/v3/accounts/universal-transfer

//internal transfer
{
  "clientOid": "64ccc0f164781800010d8c09",
  "type": "INTERNAL",
  "currency": "BTC",
  "amount": 1,
  "fromAccountType": "TRADE",
  "toAccountType": "CONTRACT"
}
//master-sub transfer - transfer from master-uid to sub-uid
{
  "clientOid": "64ccc0f164781800010d8c09",
  "type": "PARENT_TO_SUB",
  "currency": "BTC",
  "amount": 1,
  "fromAccountType": "TRADE",
  "toUserId": "62f5f5d4d72aaf000122707e",
  "toAccountType": "CONTRACT"
}
//master-sub transfer - transfer from sub-uid to master-uid
{
  "clientOid": "64ccc0f164781800010d8c09",
  "type": "SUB_TO_PARENT",
  "currency": "BTC",
  "amount": 1,
  "fromUserId": "62f5f5d4d72aaf000122707e",
  "fromAccountType": "TRADE",
  "toAccountType": "CONTRACT"
}
API KEY PERMISSIONS

This endpoint requires the FlexTransfers permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：4

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders, e.g. UUID, with a maximum length of 128 bits
currency	String	No	Currency
amount	String	Yes	Transfer amount, the amount is a positive integer multiple of the currency precision.
fromUserId	String	No	Transfer out UserId， This is required when transferring sub-account to master-account. It is optional for internal transfers.
fromAccountType	String	Yes	Account type：MAIN、TRADE、CONTRACT、MARGIN、ISOLATED、MARGIN_V2、ISOLATED_V2、OPTION
fromAccountTag	String	No	Symbol, required when the account type is ISOLATED or ISOLATED_V2, for example: BTC-USDT
type	String	Yes	Transfer type：INTERNAL(Transfer within account)、PARENT_TO_SUB(Transfer from master-account to sub-account)，SUB_TO_PARENT(Transfer from sub-account to master-account)
toUserId	String	No	Transfer in UserId， This is required when transferring master-account to sub-account. It is optional for internal transfers.
toAccountType	String	Yes	Account type：MAIN、TRADE、CONTRACT、MARGIN、ISOLATED、MARGIN_V2、ISOLATED_V2、OPTION
toAccountTag	String	No	Symbol, required when the account type is ISOLATED or ISOLATED_V2, for example: BTC-USDT
RESPONSES

Param	Description
orderId	Transfer order ID
Description

The API Key needs to have universal transfer permission when calling.
Support internal transfer,do not support transfers between sub-accounts.
Support transfer between master and sub accounts (only applicable to master account APIKey).
MARGIN_V2 only supports internal transfers between MARGIN and does not support transfers between master and sub accounts.
ISOLATED_V2 only supports internal transfers between ISOLATED and does not support transfers between master and sub accounts.

Transfer between Master Account and Sub-Account

Funds in the main account, trading account and margin account of a Master Account can be transferred to the main account, trading account, futures account and margin account of its Sub-Account. The futures account of both the Master Account and Sub-Account can only accept funds transferred in from the main account, trading account and margin account and cannot transfer out to these accounts.

HTTP REQUEST

POST /api/v2/accounts/sub-transfer

TIP
Recommended for use

Example

POST /api/v2/accounts/sub-transfer

{
  "orderId": "5cbd870fd9575a18e4438b9a"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：30

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders, e.g. UUID, with a maximum length of 128 bits.
currency	String	Yes	Currency
amount	String	Yes	Transfer amount, the amount is a positive integer multiple of the currency precision.
direction	String	Yes	OUT — the master user to sub user
IN — the sub user to the master user.
accountType	String	No	The account type of the master user: MAIN, TRADE, MARGIN, OPTION or CONTRACT, default is MAIN.
subAccountType	String	No	The account type of the sub user: MAIN, TRADE, MARGIN, OPTION or CONTRACT, default is MAIN.
subUserId	String	Yes	the user ID of a sub-account.
RESPONSES

Param	Description
orderId	The order ID of a master-sub assets transfer.

Inner Transfer

{
  "orderId": "5bd6e9286d99522a52e458de"
}
This API endpoint can be used to transfer funds between accounts internally. Users can transfer funds between their account free of charge. notice:

It is not supported to transfer funds from contract account to other accounts.
The margin_v2 account currently only supports mutual transfers with margin accounts, and cannot be directly transferred from other accounts to margin_v2
The isolated_v2 account currently only supports mutual transfer with the margin account, and cannot be directly transferred from other accounts to isolated_v2
HTTP REQUEST

POST /api/v2/accounts/inner-transfer

API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Manage weight：10

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	clientOid, the unique identifier created by the client, use of UUID, with a maximum length of 128 bits.
currency	String	Yes	Currency
from	String	Yes	Payment Account Type: main, trade, margin, isolated, margin_v2, isolated_v2, option
to	String	Yes	Receiving Account Type: main, trade, margin, isolated, margin_v2, isolated_v2, contract, option
amount	String	Yes	Transfer amount, the precision being a positive integer multiple of the Currency Precision
fromTag	String	No	Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
toTag	String	No	Trading pair, required when the payment account type is isolated, e.g.: BTC-USDT
RESPONSES

Param	Description
orderId	The order ID of a funds transfer

Transfer to Main or TRADE Account

The amount to be transferred will be deducted from the KuCoin Futures Account. Please ensure that you have sufficient funds in your KuCoin Futures Account, or the transfer will fail.

HTTP REQUEST

POST /api/v3/transfer-out

Example

POST /api/v3/transfer-out

{
  "applyId": "620a0bbefeaa6a000110e833", //Transfer-out request ID
  "bizNo": "620a0bbefeaa6a000110e832", //Business number
  "payAccountType": "CONTRACT", //Pay account type
  "payTag": "DEFAULT", //Pay account sub type
  "remark": "", //User remark
  "recAccountType": "MAIN", //Receive account type
  "recTag": "DEFAULT", //Receive account sub type
  "recRemark": "", //Receive account tx remark
  "recSystem": "KUCOIN", //Receive system
  "status": "PROCESSING", //Status
  "currency": "USDT", //Currency
  "amount": "0.001", //Transfer amout
  "fee": "0", //Transfer fee
  "sn": 889048787670001, //Serial number
  "reason": "", //Fail Reason
  "createdAt": 1644825534000, //Create time
  "updatedAt": 1644825534000 //Update time
}
API KEY PERMISSIONS

This endpoint requires the Futures Trading permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
amount	Number	Yes	Amount to be transfered out, the maximum cannot exceed 1000000000
currency	String	Yes	Currency, including XBT,USDT
recAccountType	String	Yes	Receive account type, including MAIN,TRADE
RESPONSES

Param	Description
applyId	Transfer-out request ID
bizNo	Business number
payAccountType	Pay account type
payTag	Pay account sub type
remark	User remark
recAccountType	Receive account type
recTag	Receive account sub type
recRemark	Receive account tx remark
recSystem	Receive system
status	Status:APPLY, PROCESSING, PENDING_APPROVAL, APPROVED, REJECTED, PENDING_CANCEL, CANCEL, SUCCESS
currency	Currency
amount	Transfer amout
fee	Transfer fee
sn	Serial number
reason	Fail Reason
createdAt	Create time
updatedAt	Update time

Transfer to Futures Account

The amount to be transferred will be deducted from the payAccount. Please ensure that you have sufficient funds in your payAccount Account, or the transfer will fail.

HTTP REQUEST

POST /api/v1/transfer-in

Example

POST /api/v1/transfer-in

{
  "code": "200", //If the code is 200, it means the transfer is successful, otherwise it means failure.
  "msg": "",
  "retry": true,
  "success": true
}
API KEY PERMISSIONS

This endpoint requires the Futures Trading permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
amount	Number	Yes	Amount to be transfered out
currency	String	Yes	Currency, including XBT,USDT
payAccountType	String	Yes	Payment account type, including MAIN,TRADE
If the code is 200, it means the transfer is successful, otherwise it means failure.

Get Futures Transfer-Out Request Records

The data of the first page will be queried by default.

HTTP REQUEST

GET /api/v1/transfer-list

Example

GET /api/v1/transfer-list?currentPage=1&pageSize=50&status=PROCESSING?currency=XBT

{
  "currentPage": 1,
  "pageSize": 50,
  "totalNum": 1,
  "totalPage": 1,
  "items": [
    {
      "applyId": "620a0bbefeaa6a000110e833", //Transfer-out request ID
      "currency": "USDT", //Currency
      "recRemark": "", //Receive account tx remark
      "recSystem": "KUCOIN", //Receive system
      "status": "SUCCESS", //Status  PROCESSING, SUCCESS, FAILURE
      "amount": "0.001", //Transaction amount
      "reason": "", //Reason caused the failure
      "offset": 889048787670001, //Offset
      "createdAt": 1644825534000, //Request application time
      "remark": "" //User remark
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Manage weight：20

PARAMETERS

Param	Type	Mandatory	Description
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
status	String	No	Status PROCESSING, SUCCESS, FAILURE
queryStatus	List	No	Status List PROCESSING, SUCCESS, FAILURE
currency	String	No	Currency, including XBT,USDT
currentPage	long	No	Current request page, The default currentPage is 1
pageSize	long	No	pageSize, The default pageSize is 50
TIP
Supplementary instructions for startAt and endAt: startAt must be less than endAt; and the interval cannot exceed 1 day; only one field is allowed, and if only one field is passed, another field will be automatically added or subtracted by the system 1 day to complete

RESPONSES

Param	Description
applyId	Transfer-out request ID
currency	Currency
recRemark	Receive account tx remark
recSystem	Receive system
status	Status PROCESSING, SUCCESS, FAILURE
amount	Transaction amount
reason	Reason caused the failure
offset	Offset
createdAt	Request application time
remark	User remark

Trade Fee

Basic user fee - Spot/Margin/trade_hf

This interface is for the basic fee rate of users

HTTP REQUEST

GET /api/v1/base-fee

Example

GET /api/v1/base-fee
GET /api/v1/base-fee?currencyType=1

{
  "code": "200000",
  "data": {
    "takerFeeRate": "0.001",
    "makerFeeRate": "0.001"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
currencyType	String	No	Currency type: 0-crypto currency, 1-fiat currency. default is 0-crypto currency
RESPONSES

Param	Description
takerFeeRate	Base taker fee rate
makerFeeRate	Base maker fee rate

Trading pair actual fee - Spot/Margin/trade_hf

This interface is for the actual fee rate of the trading pair. You can inquire about fee rates of 10 trading pairs each time at most. The fee rate of your sub-account is the same as that of the master account.

HTTP REQUEST

GET /api/v1/trade-fees

Example

GET /api/v1/trade-fees?symbols=BTC-USDT,KCS-USDT

{
  "code": "200000",
  "data": [
    {
      "symbol": "BTC-USDT",
      "takerFeeRate": "0.001",
      "makerFeeRate": "0.001"
    },
    {
      "symbol": "KCS-USDT",
      "takerFeeRate": "0.002",
      "makerFeeRate": "0.0005"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbols	String	Yes	Trading pair (optional, you can inquire fee rates of 10 trading pairs each time at most)
RESPONSES

Param	Description
symbol	The unique identity of the trading pair and will not change even if the trading pair is renamed
takerFeeRate	Actual taker fee rate of the trading pair
makerFeeRate	Actual maker fee rate of the trading pair

Trading pair actual fee - Futures

This interface is for the actual fee rate of the trading pair. The fee rate of your sub-account is the same as that of the master account.

REQUEST URL

GET /api/v1/trade-fees

Example

GET /api/v1/trade-fees?symbol=ETHUSDTM

{
  "code": "200000",
  "data": {
    "symbol": "XBTUSDTM",
    "takerFeeRate": "0.0006",
    "makerFeeRate": "0.0002"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Futures URL

REQUEST RATE LIMIT

Futures weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Trading pair
RESPONSES

Param	Description
symbol	The unique identity of the trading pair and will not change even if the trading pair is renamed
takerFeeRate	Actual taker fee rate of the trading pair
makerFeeRate	Actual maker fee rate of the trading pair

Get Currency List

Request via this endpoint to get the currency list.

TIP
Not all currencies currently can be used for trading.

HTTP REQUEST

GET /api/v3/currencies

Example

GET /api/v3/currencies

{
  "code": "200000",
  "data": [
    {
      "currency": "BTC",
      "name": "BTC",
      "fullName": "Bitcoin",
      "precision": 8,
      "confirms": null,
      "contractAddress": null,
      "isMarginEnabled": true,
      "isDebitEnabled": true,
      "chains": [
        {
          "chainName" : "BTC",
          "withdrawalMinFee" : "0.001",
          "withdrawalMinSize" : "0.0012",
          "withdrawFeeRate" : "0",
          "depositMinSize" : "0.0002",
          "isWithdrawEnabled" : true,
          "isDepositEnabled" : true,
          "preConfirms" : 1,
          "contractAddress" : "",
          "chainId" : "btc",
          "confirms" : 3
        },
        {
          "chainName" : "KCC",
          "withdrawalMinFee" : "0.00002",
          "withdrawalMinSize" : "0.0008",
          "withdrawFeeRate" : "0",
          "depositMinSize" : null,
          "isWithdrawEnabled" : true,
          "isDepositEnabled" : true,
          "preConfirms" : 20,
          "contractAddress" : "0xfa93c12cd345c658bc4644d1d4e1b9615952258c",
          "chainId" : "kcc",
          "confirms" : 20
        },
        {
          "chainName" : "BTC-Segwit",
          "withdrawalMinFee" : "0.0005",
          "withdrawalMinSize" : "0.0008",
          "withdrawFeeRate" : "0",
          "depositMinSize" : "0.0002",
          "isWithdrawEnabled" : false,
          "isDepositEnabled" : true,
          "preConfirms" : 2,
          "contractAddress" : "",
          "chainId" : "bech32",
          "confirms" : 2
        }
      ]
    }
  ]
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

RESPONSES

Param	Description
currency	A unique currency code that will never change
name	Currency name, will change after renaming
fullName	Full name of a currency, will change after renaming
precision	Currency precision
confirms	Number of block confirmations
contractAddress	Contract address
isMarginEnabled	Support margin or not
isDebitEnabled	Support debit or not
chains	chain list
chainId	chain of currency
chainName	chain name of currency
depositMinSize	Minimum deposit amount
depositFeeRate	deposit fee rate (some currencies have this param, the default is empty)
withdrawalMinSize	Minimum withdrawal amount
withdrawalMinFee	Minimum fees charged for withdrawal
isWithdrawEnabled	Support withdrawal or not
isDepositEnabled	Support deposit or not
confirms	Number of block confirmations
preConfirms	The number of blocks (confirmations) for advance on-chain verification
withdrawFeeRate	withdraw fee rate
withdrawMaxFee	withdraw max fee(some currencies have this param, the default is empty)
withdrawPrecision	Withdrawal precision bit, indicating the maximum supported length after the decimal point of the withdrawal amount
needTag	whether memo/tag is needed
maxWithdraw	Maximum amount of single withdrawal
maxDeposit	Maximum amount of single deposit (only applicable to Lightning Network)
CURRENCY CODES

Currency codes will conform to the ISO 4217 standard where possible. Currencies which have or had no representation in ISO 4217 may use a custom code.

Code	Description
BTC	Bitcoin
ETH	Ethereum
KCS	Kucoin Shares
For a coin, the "currency" is a fixed value and works as the only recognized identity of the coin. As the "name", "fullnane" and "precision" of a coin are modifiable values, when the "name" of a coin is changed, you should use "currency" to get the coin.

For example: The "currency" of XRB is "XRB", if the "name" of XRB is changed into "Nano", you should use "XRB" (the currency of XRB) to search the coin.

Get Currency Detail

Request via this endpoint to get the currency details of a specified currency

HTTP REQUEST

GET /api/v3/currencies/{currency}

Example

GET /api/v3/currencies/BTC

{
  "data" : {
    "isMarginEnabled" : true,
    "chains" : [
      {
        "chainName" : "BTC",
        "withdrawalMinFee" : "0.001",
        "withdrawalMinSize" : "0.0012",
        "withdrawFeeRate" : "0",
        "depositMinSize" : "0.0002",
        "isWithdrawEnabled" : true,
        "isDepositEnabled" : true,
        "preConfirms" : 1,
        "contractAddress" : "",
        "chainId" : "btc",
        "confirms" : 3
      },
      {
        "chainName" : "KCC",
        "withdrawalMinFee" : "0.00002",
        "withdrawalMinSize" : "0.0008",
        "withdrawFeeRate" : "0",
        "depositMinSize" : null,
        "isWithdrawEnabled" : true,
        "isDepositEnabled" : true,
        "preConfirms" : 20,
        "contractAddress" : "0xfa93c12cd345c658bc4644d1d4e1b9615952258c",
        "chainId" : "kcc",
        "confirms" : 20
      },
      {
        "chainName" : "BTC-Segwit",
        "withdrawalMinFee" : "0.0005",
        "withdrawalMinSize" : "0.0008",
        "withdrawFeeRate" : "0",
        "depositMinSize" : "0.0002",
        "isWithdrawEnabled" : false,
        "isDepositEnabled" : true,
        "preConfirms" : 2,
        "contractAddress" : "",
        "chainId" : "bech32",
        "confirms" : 2
      }
    ],
    "contractAddress" : null,
    "isDebitEnabled" : true,
    "fullName" : "Bitcoin",
    "precision" : 8,
    "currency" : "BTC",
    "name" : "BTC",
    "confirms" : null
  },
  "code" : "200000"
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

PARAMETERS

Param	Type	Mandatory	Description
currency	String	Yes	Path parameter, Currency
chain	String	No	Support for querying the chain of currency, e.g. The available value for USDT are OMNI, ERC20, TRC20. This only apply for multi-chain currency, and there is no need for single chain currency.
RESPONSES

Param	Description
currency	A unique currency code that will never change
name	Currency name, will change after renaming
fullName	Full name of a currency, will change after renaming
precision	Currency precision
confirms	Number of block confirmations
contractAddress	Contract address
isMarginEnabled	Support margin or not
isDebitEnabled	Support debit or not
chains	chain list
chainId	chain of currency
chainName	chain name of currency
depositMinSize	Minimum deposit amount
depositFeeRate	deposit fee rate (some currencies have this param, the default is empty)
withdrawalMinSize	Minimum withdrawal amount
withdrawalMinFee	Minimum fees charged for withdrawal
isWithdrawEnabled	Support withdrawal or not
isDepositEnabled	Support deposit or not
confirms	Number of block confirmations
preConfirms	The number of blocks (confirmations) for advance on-chain verification
withdrawFeeRate	withdraw fee rate
withdrawMaxFee	withdraw max fee(some currencies have this param, the default is empty)
withdrawPrecision	Withdrawal precision bit, indicating the maximum supported length after the decimal point of the withdrawal amount
needTag	whether memo/tag is needed
maxWithdraw	Maximum amount of single withdrawal
maxDeposit	Maximum amount of single deposit (only applicable to Lightning Network)

Get Symbols List

Request via this endpoint to get a list of available currency pairs for trading. If you want to get the market information of the trading symbol, please use Get All Tickers.

HTTP REQUEST

GET /api/v2/symbols

Example

GET /api/v2/symbols

[
  {
    "symbol": "XLM-USDT",
    "name": "XLM-USDT",
    "baseCurrency": "XLM",
    "quoteCurrency": "USDT",
    "feeCurrency": "USDT",
    "market": "USDS",
    "baseMinSize": "0.1",
    "quoteMinSize": "0.01",
    "baseMaxSize": "10000000000",
    "quoteMaxSize": "99999999",
    "baseIncrement": "0.0001",
    "quoteIncrement": "0.000001",
    "priceIncrement": "0.000001",
    "priceLimitRate": "0.1",
    "minFunds": "0.1",
    "isMarginEnabled": true,
    "enableTrading": true
  },
  {
    "symbol": "VET-USDT",
    "name": "VET-USDT",
    "baseCurrency": "VET",
    "quoteCurrency": "USDT",
    "feeCurrency": "USDT",
    "market": "USDS",
    "baseMinSize": "10",
    "quoteMinSize": "0.01",
    "baseMaxSize": "10000000000",
    "quoteMaxSize": "99999999",
    "baseIncrement": "0.0001",
    "quoteIncrement": "0.000001",
    "priceIncrement": "0.0000001",
    "priceLimitRate": "0.1",
    "minFunds": "0.1",
    "isMarginEnabled": true,
    "enableTrading": true
  }
]
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：4

PARAMETERS

Param	Type	Mandatory	Description
market	String	No	The trading market.
RESPONSES

Param	Description
symbol	unique code of a symbol, it would not change after renaming
name	Name of trading pairs, it would change after renaming
baseCurrency	Base currency,e.g. BTC.
quoteCurrency	Quote currency,e.g. USDT.
market	The trading market.
baseMinSize	The minimum order quantity requried to place an order.
quoteMinSize	The minimum order funds required to place a market order.
baseMaxSize	The maximum order size required to place an order.
quoteMaxSize	The maximum order funds required to place a market order.
baseIncrement	Quantity increment: The quantity for an order must be a positive integer multiple of this increment. Here, the size refers to the quantity of the base currency for the order. For example, for the ETH-USDT trading pair, if the baseIncrement is 0.0000001, the order quantity can be 1.0000001 but not 1.00000001.
quoteIncrement	Quote increment: The funds for a market order must be a positive integer multiple of this increment. The funds refer to the quote currency amount. For example, for the ETH-USDT trading pair, if the quoteIncrement is 0.000001, the amount of USDT for the order can be 3000.000001 but not 3000.0000001.
priceIncrement	Price increment: The price of an order must be a positive integer multiple of this increment. For example, for the ETH-USDT trading pair, if the priceIncrement is 0.01, the order price can be 3000.01 but not 3000.001.
feeCurrency	The currency of charged fees.
enableTrading	Available for transaction or not.
isMarginEnabled	Available for margin or not.
priceLimitRate	Threshold for price portection
minFunds	the minimum spot and margin trading amounts
The baseMinSize and baseMaxSize fields define the min and max order size.
The priceIncrement field specifies the min order price as well as the price increment.This also applies to quote currency.
The order price must be a positive integer multiple of this priceIncrement (i.e. if the increment is 0.01, the 0.001 and 0.021 order prices would be rejected).

priceIncrement and quoteIncrement may be adjusted in the future. We will notify you by email and site notifications before adjustment.

Order Type	Follow the rules of minFunds
Limit Buy	[Order Amount * Order Price] >= minFunds
Limit Sell	[Order Amount * Order Price] >= minFunds
Market Buy	Order Value >= minFunds
Market Sell	[Order Amount * Last Price of Base Currency] >= minFunds
Note:

API market buy orders (by amount) valued at [Order Amount * Last Price of Base Currency] <minFunds will be rejected.
API market sell orders (by value) valued at <minFunds will be rejected.
Take profit and stop loss orders at market or limit prices will be rejected when triggered.

Get Symbol Detail

Request via this endpoint to get detail currency pairs for trading. If you want to get the market information of the trading symbol, please use Get All Tickers.

HTTP REQUEST

GET /api/v2/symbols/{symbol}

Example

GET /api/v2/symbols/BTC-USDT

{
  "data" : {
    "quoteMinSize" : "0.1",
    "quoteCurrency" : "USDT",
    "feeCurrency" : "USDT",
    "symbol" : "BTC-USDT",
    "market" : "USDS",
    "baseMaxSize" : "10000000000",
    "baseIncrement" : "0.00000001",
    "quoteIncrement" : "0.000001",
    "priceIncrement" : "0.1",
    "priceLimitRate" : "0.1",
    "minFunds" : "0.1",
    "isMarginEnabled" : true,
    "enableTrading" : true,
    "baseCurrency" : "BTC",
    "baseMinSize" : "0.00001",
    "name" : "BTC-USDT",
    "quoteMaxSize" : "99999999"
  },
  "code" : "200000"
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：4

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	No	Path parameter, Symbol
RESPONSES

Param	Description
symbol	unique code of a symbol, it would not change after renaming
name	Name of trading pairs, it would change after renaming
baseCurrency	Base currency,e.g. BTC.
quoteCurrency	Quote currency,e.g. USDT.
market	The trading market.
baseMinSize	The minimum order quantity requried to place an order.
quoteMinSize	The minimum order funds required to place a market order.
baseMaxSize	The maximum order size required to place an order.
quoteMaxSize	The maximum order funds required to place a market order.
baseIncrement	Quantity increment: The quantity for an order must be a positive integer multiple of this increment. Here, the size refers to the quantity of the base currency for the order. For example, for the ETH-USDT trading pair, if the baseIncrement is 0.0000001, the order quantity can be 1.0000001 but not 1.00000001.
quoteIncrement	Quote increment: The funds for a market order must be a positive integer multiple of this increment. The funds refer to the quote currency amount. For example, for the ETH-USDT trading pair, if the quoteIncrement is 0.000001, the amount of USDT for the order can be 3000.000001 but not 3000.0000001.
priceIncrement	Price increment: The price of an order must be a positive integer multiple of this increment. For example, for the ETH-USDT trading pair, if the priceIncrement is 0.01, the order price can be 3000.01 but not 3000.001.
feeCurrency	The currency of charged fees.
enableTrading	Available for transaction or not.
isMarginEnabled	Available for margin or not.
priceLimitRate	Threshold for price portection
minFunds	the minimum spot and margin trading amounts
The baseMinSize and baseMaxSize fields define the min and max order size.
The priceIncrement field specifies the min order price as well as the price increment.This also applies to quote currency.
The order price must be a positive integer multiple of this priceIncrement (i.e. if the increment is 0.01, the 0.001 and 0.021 order prices would be rejected).

priceIncrement and quoteIncrement may be adjusted in the future. We will notify you by email and site notifications before adjustment.

Order Type	Follow the rules of minFunds
Limit Buy	[Order Amount * Order Price] >= minFunds
Limit Sell	[Order Amount * Order Price] >= minFunds
Market Buy	Order Value >= minFunds
Market Sell	[Order Amount * Last Price of Base Currency] >= minFunds
Note:

API market buy orders (by amount) valued at [Order Amount * Last Price of Base Currency] <minFunds will be rejected.
API market sell orders (by value) valued at <minFunds will be rejected.
Take profit and stop loss orders at market or limit prices will be rejected when triggered.

Get Ticker

Request via this endpoint to get Level 1 Market Data. The returned value includes the best bid price and size, the best ask price and size as well as the last traded price and the last traded size.

HTTP REQUEST

GET /api/v1/market/orderbook/level1

Example

GET /api/v1/market/orderbook/level1?symbol=BTC-USDT

//Get Ticker
{
  "sequence": "1550467636704",
  "price": "0.03715005",
  "size": "0.17",
  "bestAsk": "0.03715004",
  "bestAskSize": "1.788",
  "bestBid": "0.03710768",
  "bestBidSize": "3.803",
  "time": 1550653727731
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：2

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
RESPONSES

Param	Description
sequence	Sequence
bestAsk	Best ask price
size	Last traded size
price	Last traded price
bestBidSize	Best bid size
bestBid	Best bid price
bestAskSize	Best ask size
time	timestamp

Get All Tickers

Request market tickers for all the trading pairs in the market (including 24h volume), takes a snapshot every 2 seconds.

On the rare occasion that we will change the currency name, if you still want the changed symbol name, you can use the symbolName field instead of the symbol field via “Get all tickers” endpoint.

HTTP REQUEST

GET /api/v1/market/allTickers

Example

GET /api/v1/market/allTickers

{
  "time": 1602832092060,
  "ticker": [
    {
      "symbol": "BTC-USDT", // symbol
      "symbolName": "BTC-USDT", // Name of trading pairs, it would change after renaming
      "buy": "11328.9", // bestAsk
      "sell": "11329", // bestBid
	  "bestBidSize": "0.1", 
	  "bestAskSize": "1",
      "changeRate": "-0.0055", // 24h change rate
      "changePrice": "-63.6", // 24h change price
      "high": "11610", // 24h highest price
      "low": "11200", // 24h lowest price
      "vol": "2282.70993217", // 24h volume，the aggregated trading volume in BTC
      "volValue": "25984946.157790431", // 24h total, the trading volume in quote currency of last 24 hours
      "last": "11328.9", // last price
      "averagePrice": "11360.66065903", // 24h average transaction price yesterday
      "takerFeeRate": "0.001", // Basic Taker Fee
      "makerFeeRate": "0.001", // Basic Maker Fee
      "takerCoefficient": "1", // Taker Fee Coefficient
      "makerCoefficient": "1" // Maker Fee Coefficient
    }
  ]
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：15

RESPONSES

Param	Description
time	timestamp
symbol	Symbol
symbolName	Name of trading pairs, it would change after renaming
buy	Best bid price
sell	Best ask price
bestBidSize	Best bid size
bestAskSize	Best ask size
changeRate	24h change rate
changePrice	24h change price
high	Highest price in 24h
low	Lowest price in 24h
vol	24h volume, executed based on base currency
volValue	24h traded amount
last	Last traded price
averagePrice	Average trading price in the last 24 hours
takerFeeRate	Basic Taker Fee
makerFeeRate	Basic Maker Fee
takerCoefficient	The taker fee coefficient. The actual fee needs to be multiplied by this coefficient to get the final fee. Most currencies have a coefficient of 1. If set to 0, it means no fee
makerCoefficient	The maker fee coefficient. The actual fee needs to be multiplied by this coefficient to get the final fee. Most currencies have a coefficient of 1. If set to 0, it means no fee

Get 24hr Stats

Request via this endpoint to get the statistics of the specified ticker in the last 24 hours.

HTTP REQUEST

GET /api/v1/market/stats

Example

GET /api/v1/market/stats?symbol=BTC-USDT

//Get 24hr Stats
{
  "time": 1602832092060, // time
  "symbol": "BTC-USDT", // symbol
  "buy": "11328.9", // bestAsk
  "sell": "11329", // bestBid
  "changeRate": "-0.0055", // 24h change rate
  "changePrice": "-63.6", // 24h change price
  "high": "11610", // 24h highest price
  "low": "11200", // 24h lowest price
  "vol": "2282.70993217", // 24h volume，the aggregated trading volume in BTC
  "volValue": "25984946.157790431", // 24h total, the trading volume in quote currency of last 24 hours
  "last": "11328.9", // last price
  "averagePrice": "11360.66065903", // 24h average transaction price yesterday
  "takerFeeRate": "0.001", // Basic Taker Fee
  "makerFeeRate": "0.001", // Basic Maker Fee
  "takerCoefficient": "1", // Taker Fee Coefficient
  "makerCoefficient": "1" // Maker Fee Coefficient
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：15

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
RESPONSES

Param	Description
time	timestamp
symbol	Symbol
buy	Best bid price
sell	Best ask price
changeRate	24h change rate
changePrice	24h change price
high	Highest price in 24h
low	Lowest price in 24h
vol	24h volume, executed based on base currency
volValue	24h traded amount
last	Last traded price
averagePrice	Average trading price in the last 24 hours
takerFeeRate	Basic Taker Fee
makerFeeRate	Basic Maker Fee
takerCoefficient	Taker Fee Coefficient
makerCoefficient	Maker Fee Coefficient

Get Market List

Request via this endpoint to get the transaction currency for the entire trading market.

TIP
SC has been changed to USDS, but you can still use SC as a query parameter

TIP
The three markets of ETH, NEO and TRX are merged into the ALTS market. You can query the trading pairs of the ETH, NEO and TRX markets through the ALTS trading area.

HTTP REQUEST

GET /api/v1/markets

Example

GET /api/v1/markets

//Get Market List
{
  "data": [
    "USDS", //SC has been changed to USDS
    "BTC",
    "KCS",
    "ALTS", //ALTS market includes ETH, NEO, TRX
    "NFT-ETF",
    "FIAT",
    "DeFi",
    "NFT",
    "Metaverse",
    "Polkadot",
    "ETF"
  ],
  "code": "200000"
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

Get Part Order Book(aggregated)

Request via this endpoint to get a list of open orders for a symbol.

Level-2 order book includes all bids and asks (aggregated by price), this level returns only one size for each active price (as if there was only a single order for that price).

Query via this endpoint and the system will return only part of the order book to you. If you request level2_20, the system will return you 20 pieces of data (ask and bid data) on the order book. If you request level_100, the system will return 100 pieces of data (ask and bid data) on the order book to you. You are recommended to request via this endpoint as the system reponse would be faster and cosume less traffic.

To maintain up-to-date Order Book, please use Websocket incremental feed after retrieving the Level 2 snapshot.

HTTP REQUEST

GET /api/v1/market/orderbook/level2_20
GET /api/v1/market/orderbook/level2_100

Example

GET /api/v1/market/orderbook/level2_20?symbol=BTC-USDT
GET /api/v1/market/orderbook/level2_100?symbol=BTC-USDT

{
  "sequence": "3262786978",
  "time": 1550653727731,
  "bids": [
    ["6500.12", "0.45054140"],
    ["6500.11", "0.45054140"]
  ], //[price，size]
  "asks": [
    ["6500.16", "0.57753524"],
    ["6500.15", "0.57753524"]
  ]
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：depth20 2, depth100 4

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
RESPONSES

Param	Description
sequence	Sequence number
time	Timestamp
bids	bids
asks	asks
Data Sort

Asks: Sort price from low to high

Bids: Sort price from high to low

Get Full Order Book(aggregated)

Request via this endpoint to get the order book of the specified symbol.

Level 2 order book includes all bids and asks (aggregated by price). This level returns only one aggregated size for each price (as if there was only one single order for that price).

This API will return data with full depth.

It is generally used by professional traders because it uses more server resources and traffic, and we have strict access frequency control.

To maintain up-to-date Order Book, please use Websocket incremental feed after retrieving the Level 2 snapshot.

HTTP REQUEST

GET /api/v3/market/orderbook/level2

Example

GET /api/v3/market/orderbook/level2?symbol=BTC-USDT

{
  "sequence": "3262786978",
  "time": 1550653727731,
  "bids": [
    ["6500.12", "0.45054140"],
    ["6500.11", "0.45054140"]
  ], //[price，size]
  "asks": [
    ["6500.16", "0.57753524"],
    ["6500.15", "0.57753524"]
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
RESPONSES

Param	Description
sequence	Sequence number
time	Timestamp
bids	bids
asks	asks
Data Sort

Asks: Sort price from low to high

Bids: Sort price from high to low

Get Trade Histories

Request via this endpoint to get the trade history of the specified symbol, the returned quantity is the last 100 transaction records.

HTTP REQUEST

GET /api/v1/market/histories

Example

GET /api/v1/market/histories?symbol=BTC-USDT

[
  {
    "sequence": "1545896668571",
    "price": "0.07", //Filled price
    "size": "0.004", //Filled amount
    "side": "buy", //Filled side. The filled side is set to the taker by default.
    "time": 1545904567062140823 //Transaction time
  },
  {
    "sequence": "1545896668578",
    "price": "0.054",
    "size": "0.066",
    "side": "buy",
    "time": 1545904581619888405
  }
]
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
RESPONSES

Param	Description
sequence	Sequence number
time	Transaction time
price	Filled price
size	Filled amount
side	Filled side. The filled side is set to the taker by default
SIDE

The trade side indicates the taker order side. A taker order is the order that was matched with orders opened on the order book.

Get Klines

Request via this endpoint to get the kline of the specified symbol. Data are returned in grouped buckets based on requested type.

TIP
Klines data may be incomplete. No data is published for intervals where there are no ticks.

TIP
Klines should not be polled frequently. If you need real-time information, use the trade and book endpoints along with the websocket feed.

HTTP REQUEST

GET /api/v1/market/candles

Example

GET /api/v1/market/candles?type=1min&symbol=BTC-USDT&startAt=1566703297&endAt=1566789757

[
  [
    "1545904980", //Start time of the candle cycle
    "0.058", //opening price
    "0.049", //closing price
    "0.058", //highest price
    "0.049", //lowest price
    "0.018", //Transaction volume
    "0.000945" //Transaction amount
  ],
  ["1545904920", "0.058", "0.072", "0.072", "0.058", "0.103", "0.006986"]
]
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
startAt	long	No	Start time (second), default is 0
endAt	long	No	End time (second), default is 0
type	String	Yes	Type of candlestick patterns: 1min, 3min, 5min, 15min, 30min, 1hour, 2hour, 4hour, 6hour, 8hour, 12hour, 1day, 1week, 1month
TIP
For each query, the system would return at most 1500 pieces of data. To obtain more data, please page the data by time.

RESPONSES

Param	Description
time	Start time of the candle cycle
open	Opening price
close	Closing price
high	Highest price
low	Lowest price
volume	Transaction volume(One-sided transaction volume)
turnover	Transaction amount(One-sided transaction amount)

Get Fiat Price

Request via this endpoint to get the fiat price of the currencies for the available trading pairs.

HTTP REQUEST

GET /api/v1/prices

Example

GET /api/v1/prices

{
  "code": "200000",
  "data": {
    "BTC": "3911.28000000",
    "ETH": "144.55492453",
    "LTC": "48.45888179",
    "KCS": "0.45546856"
  }
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

PARAMETERS

Param	Type	Mandatory	Description
base	String	No	Ticker symbol of a base currency,eg.USD,EUR. Default is USD
currencies	String	No	Comma-separated cryptocurrencies to be converted into fiat, e.g.: BTC,ETH, etc. Default to return the fiat price of all currencies.

Get Server Time

Get the server time.

HTTP REQUEST

GET /api/v1/timestamp

Example

GET /api/v1/timestamp

{
  "code": "200000",
  "msg": "success",
  "data": 1546837113087
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

Get Service Status

Get the service status

HTTP REQUEST

GET /api/v1/status

Example

GET /api/v1/status

{
  "code": "200000",
  "data": {
    "status": "open", //open:normal transaction, close:Stop Trading/Maintenance, cancelonly:can only cancel the order but not place order
    "msg": "upgrade match engine" //remark for operation
  }
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：3

RESPONSES

Param	Description
status	Status of service: open：normal transaction, close：Stop Trading/Maintenance, cancelonly：can only cancel the order but not place order
msg	Remark for operation

Get Announcements

This interface can obtain the latest news announcements, and the default page search is for announcements within a month.

HTTP REQUEST

GET /api/v3/announcements

Example

GET /api/v3/announcements?annType=latest-announcements

{
  "code": "200000",
  "data": {
    "totalNum": 8684,
    "items": [
      {
        "annId": 127637,
        "annTitle": "CHO GemSlot Campaign: Finish Easy Tasks to Win and Share a 1.3 Million CHO Prize Pool!",
        "annType": [
          "latest-announcements"
        ],
        "annDesc": "To celebrate the launch of GemSlot, we are delighted to invite the CHO Protocol (CHO) project to participate in our product launch celebration.",
        "cTime": 1728974572000,
        "language": "en_US",
        "annUrl": "https://www.kucoin.com/announcement/en-cho-gemslot-campaign-finish-easy-tasks-to-win-and-share-a-1300000-cho-prize-pool-20241015?lang=en_US"
      }
    ],
    "currentPage": 1,
    "pageSize": 3,
    "totalPage": 2895
  }
}
REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Public weight：20

PARAMETERS

Param	Type	Mandatory	Description
currentPage	Int	No	page number
pageSize	Int	No	page Size
annType	String	No	Announcement types: latest-announcements , activities (latest activities), new-listings (new currency online), product-updates (product updates), vip (institutions and VIPs), maintenance-updates (system maintenance), product -updates (product news), delistings (currency offline), others, api-campaigns (API user activities), default : latest-announcements
lang	String	No	Language type, the default is en_US, the specific value parameters are as follows
startTime	Long	No	Announcement online start time (milliseconds)
endTime	Long	No	Announcement online end time (milliseconds)
Language type enum

lang	Language
zh_HK	Chinese (Hong Kong)
ja_JP	Japanese (Japan)
ko_KR	Korean (Korea)
en_US	English
pl_PL	Polish (Poland)
es_ES	Spanish (Spain)
fr_FR	French (France)
ar_AE	Arabic (Egypt)
it_IT	Italian (Italy)
id_ID	Indonesian (Indonesia)
nl_NL	Dutch (Netherlands)
pt_PT	Portuguese (Brazil)
vi_VN	Vietnamese (Vietnam)
de_DE	German (Germany)
tr_TR	Turkish (Turkey)
ms_MY	Malay (Malaysia)
ru_RU	Russian (Russia)
th_TH	Thai (Thailand)
hi_IN	Hindi (India)
bn_BD	Bengali (Bangladesh)
fil_PH	Filipino (Philippines)
ur_PK	Urdu (Pakistan)
RESPONSES

Param	Description
annId	Announcement ID
annTitle	Announcement title
annType	Announcement type
annDesc	Announcement description
cTime	Announcement release time, Unix millisecond timestamp format
language	language type
annUrl	Announcement link

Spot HF Trade - Pro Account

Get User Type

This interface determines whether the current user is a spot high-frequency user or a spot low-frequency user.

Notice This interface is a compatibility interface left over from the old version upgrade. Only some old users need to use it (high frequency will be opened before 2024 and trade_hf has been used). Most user do not need to use this interface. When the return is true, you need to use trade_hf to transfer assets and query assets When the return is false, you need to use trade to transfer assets and query assets.

HTTP REQUEST

GET /api/v1/hf/accounts/opened

Example

GET /api/v1/hf/accounts/opened

{
    'code': '200000',
    'data': True
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：30

RESPONSES

Param	Description
data	Current user type. True means the current user is a high-frequency spot user, False means the current user is a low-frequency spot user

Place HF order

There are two types of orders: (limit) order: set price and quantity for the transaction. (market) order : set amount or quantity for the transaction.

Before placing an order, make sure there are enough funds in your high-frequency trading account. Once the order is successfully placed, the amount of funds required for the order will be frozen. The amount frozen will depend on the type of order placed as well as the request parameters set.

Please note that once your order enters the order book, the system will freeze the handling fees for the order ahead of time.

Before placing orders, please be sure to fully understand the meaning of the parameters for each trading pair.

Place Order Limit

The maximum number of active orders per account is 2000, with a maximum of 200 active orders per trading pair.

HTTP REQUEST

POST /api/v1/hf/orders

Example

POST /api/v1/hf/orders

// response
{
  "code": "200000",
  "data": {
    "orderId": "5bd6e9286d99522a52e458de",
	"clientOid": "11223344"
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Public order placement request parameters

Param	Type	Mandatory	Description
clientOid	String	No	Client Order Id，unique identifier created by the user, the use of UUID is recommended
symbol	String	Yes	symbol, such as, ETH-BTC
type	String	Yes	Order type limit and market
side	String	Yes	buy or sell
stp	String	No	self trade prevention is divided into four strategies: CN, CO, CB , and DC
tags	String	No	Order tag, length cannot exceed 20 characters (ASCII)
remark	String	No	Order placement remarks, length cannot exceed 20 characters (ASCII)
Additional Request Parameters Required by limit Orders

Param	Type	Mandatory	Description
price	String	Yes	Specify price for currency
size	String	Yes	Specify quantity for currency
timeInForce	String	No	Order timing strategy GTC, GTT, IOC, FOK (The default is GTC)
cancelAfter	long	No	Cancel after n seconds，the order timing strategy is GTT
postOnly	boolean	No	passive order labels, this is disabled when the order timing strategy is IOC or FOK
hidden	boolean	No	Hidden or not (not shown in order book)
iceberg	boolean	No	Whether or not only visible portions of orders are shown in iceberg orders
visibleSize	String	No	Maximum visible quantity in iceberg orders
Additional request parameters required by market orders

Param	Type	Mandatory	Description
size	String	No	(Select one out of two: size or funds)
funds	String	No	(Select one out of two: size or funds)
RESPONSES

Param	Description
orderId	An order Id is returned once an order is successfully placed.
clientOid	client order id
Terms

Trading pair (Symbol)

The symbol must match a valid trading symbol.

Client Order Id(clientOid)

The ClientOid field is a unique ID created by the user（we recommend using a UUID）, and can only contain numbers, letters, underscores （_）, and hyphens （-）. This field is returned when order information is obtained. You can use clientOid to tag your orders. ClientOid is different from the order ID created by the service provider. Please do not initiate requests using the same clientOid. The maximum length for the ClientOid is 40 characters.

Please remember the orderId created by the service provider, it used to check for updates in order status.

Order Type (type):

The type of order you specify when you place your order determines whether or not you need to request other parameters and also affects the execution of the matching engine.

When placing a limit order, you must specify a price and size. The system will try to match the order according to market price or a price better than market price. If the order cannot be immediately matched, it will stay in the order book until it is matched or the user cancels.

Unlike limit orders, the price for market orders fluctuates with market prices. When placing a market order, you do not need to specify a price, you only need to specify a quantity. Market orders are filled immediately and will not enter the order book. All market orders are takers and a taker fee will be charged.

Trade Type (tradeType)

The platform currently supports spot （TRADE） asset trading orders, the system will default to freezing funds in your trading account according to spot trading rules.

Price (Price)

When placing a limit order, the price must be based on priceIncrement for the trading pair. The price increment (priceIncrement) is the price precision for the trading pair. For example, for the BTC-USDT trading pair, the priceIncrement is 0.00001000. So the price for your orders cannot be less than 0.00001000 and must be a multiple of priceIncrement. Otherwise, the order will return an invalid priceIncrement error.

Size (Size)

When placing a limit order, size refers to the amount of trading targets (the asset name written in front) for the trading pair. Teh Size must be based on the baseIncrement of the trading pair. The baseIncrement represents the precision for the trading pair. The size of an order must be a positive-integer multiple of baseIncrement and must be between baseMinSize and baseMaxSize.

Funds (Funds)

When placing a market order, the funds field refers to the funds for the priced asset (the asset name written latter) of the trading pair. The funds must be based on the quoteIncrement of the trading pair. The quoteIncrement represents the precision of the trading pair. The funds value for an order must be a multiple of quoteIncrement and must be between quoteMinSize and quoteMaxSize.

Time In Force (TimeInForce)

Time in force is a special strategy used during trading. It is used to specify how long an order shall remain active before being executed or expiring. There are four types of TimeInForce:

Abbreviation	Full name	Description
GTC	Good Till Canceled	Expires only when cancelled
GTT	Good Till Time	Expires at a specified time
IOC	Immediate Or Cancel	Execute the portions that can be executed immediately and cancel the rest; this does not enter the order book.
FOK	Fill Or Kill	Cancel if the order cannot be completely filled.
Note: order fills include self-fills. Market order does not support the TimeInForce strategy
Post Only (PostOnly)

PostOnly is just a label. If an order can be immediately filled, then it is cancelled.

When the user places a postOnly order, if the order encounters an iceberg order or hidden order after entering the matching engine, the order can be filled immediately. The postOnly order will charge maker fees and the iceberg order and hidden order will charge taker fees.
Hidden Orders and Iceberg Orders (Hidden & Iceberg)

Hidden orders and iceberg orders can be set in advanced settings (iceberg orders are a special type of hidden orders). When placing limit orders or stop limit orders, you can choose to execute according to hidden orders or iceberg orders.

Hidden orders are not shown in order books.

Unlike hidden orders, iceberg orders are divided into visible and hidden portions. When engaging in iceberg orders, visible order sizes must be set. The minimum visible size for an iceberg order is 1/20 of the total order size.

When matching, the visible portions of iceberg orders are matched first. Once the visible portions are fully matched, hidden portions will emerge. This will continue until the order is fully filled.

Note:

The system will charge taker fees for hidden orders and iceberg orders.
If you simultaneously set iceberg orders and hidden orders, your order will default to an iceberg order for execution.
Hold (Hold)

For limit price purchase orders, we will hold the amount of funds (price * size) required for your purchase order. Similarly, for limit price sell orders, we will also hold you sell order assets. When the transaction is executed, the service fees will be calculated. If you cancel a portion of a filled or unfilled order, then the remaining funds or amounts will be released and returned to your account. For market price buy/sell orders that require specific funds, we will hold the required funds in from your account. If only the size is specified, we may freeze (usually for a very short amount of time) all of the funds in your account prior to the order being filled or cancelled.

Self Trade Prevention (SelfTradePrevention)

Self trade prevention can be set in advanced settings, which will prevent self trades from occurring in your orders. If you do not set STP when placing an order, your order could be filled with another one of your orders. Market orders currently do not support DC strategies.

Market orders currently do not support DC. When timeInForce is FOK, stp will specify CN.

Abbreviation	Full name	Description
DC	Decrease and Cancel	Cancel the order with smaller size and change the order with larger size to the difference between old and new.
CO	Cancel old	Cancel the old order.
CN	Cancel new	Cancel the new order.
CB	Cancel both	Cancel both sides
Order Lifecycle (ORDER LIFECYCLE)

When an order placement request is successful (the matching engine receives the order) or denied (due to there being insufficient funds or illegal parameter values, etc.), the system will respond to the HTTP request. When an order is successfully placed, the order ID is returned. The order will be matched, which could result in it being fully or partially filled. When an order is fully or partially filled, the remaining portions of the order will be in an active state awaiting to be matched (this does not include IOC orders). Orders that are fully or partially filled(already cancelled) will be put into the “done” state.

Users that have subscribed to the Market Data Channel can use the order ID （orderId） and client ID （clientOid） to identify messages.

Price Protection Mechanisms

Price protection mechanisms ae enabled for order placements. Rules are detailed below:

If the spot trading market order/limit order placed by the user can be directly matched with an order in the current order book, the system will judge whether deviation between the price corresponding to the transaction depth and the spread exceeds the threshold value （the threshold value can be obtained using the symbol API endpoint）；
If it is exceeded, for limit orders, the order will be directly cancelled;
If it is a market order, then the system will partially execute the order. The execution limit will be the order size within the price range corresponding to the threshold value. The remaining orders will not be filled.
For example: if the threshold value is 10%, when a user places a market price purchase order in the KCS/USDT trading market for 10,000 USDT (the selling price is currently 1.20000), the system will determine that after the order is completely filled, the final price will be 1.40000. (1.40000-1.20000)/1.20000=16.7%>10%. The threshold value is 1.32000. The user’s market price purchase order will be filled only to a maximum of 1.32000. The remaining order portions will not be matched with orders in the order book. Note: this feature may not be able to determine depth with complete accuracy. If your order is not completely filled, it may be because the portion exceeding the threshold value was not filled.

Place HF order Test

Order test endpoint, the request parameters and return parameters of this endpoint are exactly the same as the order endpoint, and can be used to verify whether the signature is correct and other operations. After placing an order, the order will not enter the matching system, and the order cannot be queried.

HTTP REQUEST

POST /api/v1/hf/orders/test

Example

POST /api/v1/hf/orders/test

API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

Sync Place HF order

The request parameters of this interface are the same as those of the "Place HF order" interface

The difference between this interface and "Place HF order" is that this interface will synchronously return the order information after the order matching is completed.

For higher latency requirements, please select the "Place HF order" interface. If there is a requirement for returning data integrity, please select this interface

HTTP REQUEST

POST /api/v1/hf/orders/sync

Example

POST /api/v1/hf/orders/sync

{
  "code": "200000",
  "data": {
    "orderId": "6d539dc614db3",
	"clientOid": "11223344",
    "orderTime": "1507725176595", //order time
    "originSize": "10.01",
    "dealSize": "2.01",
    "remainSize": "8",
    "canceledSize": "0",
    "status": "open", //open: the order is active: the order has been completed
    "matchTime": "1507725176595" //begin match time
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

The request parameters of this interface are the same as those of the "Place HF order" interface

RESPONSES

Param	Description
orderId	An order Id is returned once an order is successfully placed.
clientOid	client order id
orderTime	order time
originSize	original order size
originFunds	Order original funds - market order
dealSize	deal size
dealFunds	deal funds - market order
remainSize	remain size
remainFunds	remain funds - market order
canceledSize	Cumulative number of cancellations
canceledFunds	Cumulative funds of cancellations - market order
status	Order Status. open：order is active; done：order has been completed
matchTime	matching time

Place Multiple Orders

This endpoint supports sequential batch order placement from a single endpoint. A maximum of 5orders can be placed simultaneously. The order types must be limit orders of the same trading pair （this endpoint currently only supports spot trading and does not support margin trading）.

This endpoint only supports order placement requests. To obtain the results of the order placement, you will need to check the order status or subscribe to websocket to obtain information about he order.

HTTP REQUEST

POST /api/v1/hf/orders/multi

Example

POST /api/v1/hf/orders/multi

//request
{
  "orderList": [
    {
      "clientOid": "3d07008668054da6b3cb12e432c2b13a",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "1",
      "symbol": "ETH-USDT"
    },
    {
      "clientOid": "37245dbe6e134b5c97732bfb36cd4a9d",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "1",
      "symbol": "ETH-USDT"
    }
  ]
}
//response
{
  "success": true,
  "code": "200",
  "msg": "success",
  "retry": false,
  "data": [
    {
      "orderId": "641d669c9ca34800017a2a3c",
	  "clientOid": "3d07008668054da6b3cb12e432c2b13a",
      "success": true
    },
    {
      "orderId": "641d669c9ca34800017a2a45",
	  "clientOid": "37245dbe6e134b5c97732bfb36cd4a9d",
      "success": true
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	No	Client Order Id，unique identifier created by the user, the use of UUID is recommended
symbol	String	Yes	symbol, such as, ETH-BTC
type	String	Yes	Order type limit and market
timeInForce	String	No	GTC, GTT, IOC, or FOK (default is GTC).
stp	String	No	self trade prevention, is divided into CN, CO, CB , and DC strategies
side	String	Yes	buy（buy） or sell（sell）
price	String	Yes	Specify price for currency
size	String	Yes	Specify quantity for currency
cancelAfter	long	No	Cancels in n seconds, with GTT as the time in force strategy
postOnly	boolean	No	Post only identifier, invalid when the time in force strategy is IOC or FOK
hidden	boolean	No	Hidden or not (not shown in order book)
iceberg	boolean	No	Whether or not only visible portions of orders are shown in iceberg orders
visibleSize	String	No	Maximum visible quantity in iceberg orders
tags	String	No	The order identifier length cannot exceed 20 characters（ASCII）
remark	String	No	Order placement remarks, length cannot exceed 20 characters (ASCII)
RESPONSES

Param	Description
status	Order creation results (success, fail)
failMsg	Reason of failure

Sync Place Multiple HF orders

The request parameters of this interface are the same as those of the "Place Multiple Orders" interface

The difference between this interface and "Place Multiple Orders" is that this interface will synchronously return the order information after the order matching is completed.

For higher latency requirements, please select the "Place Multiple Orders" interface. If there is a requirement for returning data integrity, please select this interface

HTTP REQUEST

POST /api/v1/hf/orders/multi/sync

Example

POST /api/v1/hf/orders/multi/sync

//request
{
  "orderList": [
    {
      "clientOid": "3d07008668054da6b3cb12e432c2b13a",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "1",
      "symbol": "ETH-USDT"
    },
    {
      "clientOid": "37245dbe6e134b5c97732bfb36cd4a9d",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "1",
      "symbol": "ETH-USDT"
    }
  ]
}
//response
{
  "success": true,
  "code": "200",
  "msg": "success",
  "retry": false,
  "data": [
    {
      "orderId": "641d67ea162d47000160bfb8",
	  "clientOid": "3d07008668054da6b3cb12e432c2b13a",
      "orderTime": 1679648746796,
      "originSize": "1",
      "dealSize": "0",
      "remainSize": "1",
      "canceledSize": "0",
      "status": "open",
      "matchTime": 1679648746443,
      "success": true
    },
    {
      "orderId": "641d67eb162d47000160bfc0",
	  "clientOid": "37245dbe6e134b5c97732bfb36cd4a9d",
      "orderTime": 1679648747369,
      "originSize": "1",
      "dealSize": "0",
      "remainSize": "1",
      "canceledSize": "0",
      "status": "open",
      "matchTime": 1679648746644,
      "success": true
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

The request parameters of this interface are the same as those of the "Place Multiple Orders" interface, Maximum support for 20 orders

RESPONSES

Param	Description
orderId	order Id is returned once an order is successfully placed.
clientOid	client order id
orderTime	order time
originSize	original order size
dealSize	deal size
remainSize	remain size
canceledSize	Cumulative number of cancellations
status	Order Status. open：order is active; done：order has been completed
matchTime	matching time
success	Whether the order was placed successfully.

Modify HF order

This interface can modify the price and quantity of the order according to orderId or clientOid.

The implementation of this interface is: cancel the order and place a new order on the same trading pair, and return the modification result to the client synchronously

When the quantity of the new order updated by the user is less than the filled quantity of this order, the order will be considered as completed, and the order will be cancelled, and no new order will be placed

HTTP REQUEST

POST /api/v1/hf/orders/alter

Example

POST /api/v1/hf/orders/alter

{
  "code": "200000",
  "data": {
    "newOrderId": "6d539dc614db3",
	"clientOid": "11223344"
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol
clientOid	String	No	clientOid
orderId	String	No	other id
newPrice	String	No	The modified price of the new order
newSize	String	No	The modified size of the new order
orderId and clientOid must choose one

newPrice and newSize must choose one

RESPONSES

Param	Description
newOrderId	The order id of the new order
clientOid	original client order id

Cancel HF order by orderId

This endpoint can be used to cancel a high-frequency order by orderId.

HTTP REQUEST

DELETE /api/v1/hf/orders/{orderId}?symbol={symbol}

Example

DELETE /api/v1/hf/orders/5bd6e9286d99522a52e458de?symbol=ETH-BTC

// response
{
  "code": "200000",
  "data": {
    "orderId": "630625dbd9180300014c8d52"
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
symbol	String	Yes	Trading pair, such as, ETH-BTC
TIP
The input parameter orderId is a unique identifier of the order created by the server and is different from the clientOId created by the user.

TIP
If an order cannot be cancelled （if it has already been filled or cancelled），an error message will be returned, and you can judge what the reason was based on the returned msg.

RESPONSES

Param	Description
orderId	Order id of the cancelled order

Sync Cancel HF order by orderId

The request parameters of this interface are the same as those of the "Cancel HF order by orderId" interface

The difference between this interface and "Cancel HF order by orderId" is that this interface will synchronously return the order information after the order canceling is completed.

For higher latency requirements, please select the "Cancel HF order by orderId" interface. If there is a requirement for returning data integrity, please select this interface

HTTP REQUEST

DELETE /api/v1/hf/orders/sync/{orderId}

Example

DELETE /api/v1/hf/orders/sync/{orderId}

{
  "orderId": "641d67ea162d47000160bfb8",
  "originSize": "1",
  "dealSize": "0",
  "remainSize": "1",
  "canceledSize": "0",
  "status": "done"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Trading pair, such as ETH-BTC
orderId	String	Yes	Path parameter，Order Id unique identifier
RESPONSES

Param	Description
orderId	order Id
originSize	original order size
originFunds	Order original funds - market order
dealSize	deal size
remainSize	remain size
canceledSize	Cumulative number of cancellations
status	Order Status. open：order is active; done：order has been completed

Cancel HF order by clientOid

This endpoint sends out a request to cancel a high-frequency order using clientOid.

HTTP REQUEST

DELETE /api/v1/hf/orders/client-order/{clientOid}?symbol={symbol}

Example

DELETE /api/v1/hf/orders/client-order/6d539dc614db3?symbol=ETH-BTC

// response
{
  "code": "200000",
  "data": {
    "clientOid": "6d539dc614db3"
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Path parameter, an identifier created by the client
symbol	String	Yes	symbol, such as, ETH-BTC
RESPONSES

Param	Description
clientOid	Identifier created by the client

Sync Cancel HF order by clientOid

The request parameters of this interface are the same as those of the "Cancel HF order by clientOid" interface

The difference between this interface and "Cancel HF order by clientOid" is that this interface will synchronously return the order information after the order canceling is completed.

For higher latency requirements, please select the "Cancel HF order by clientOid" interface. If there is a requirement for returning data integrity, please select this interface

HTTP REQUEST

DELETE /api/v1/hf/orders/sync/client-order/{clientOid}

Example

DELETE /api/v1/hf/orders/sync/client-order/{clientOid}

{
  "orderId": "641d67ea162d47000160bfb8",
  "originSize": "1",
  "dealSize": "0",
  "remainSize": "1",
  "canceledSize": "0",
  "status": "done"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：1

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Trading pair such as ETH-BTC
clientOid	String	Yes	Path parameter，an identifier created by the Client
RESPONSES

Param	Description
orderId	order Id
originSize	original order size
originFunds	Order original funds - market order
dealSize	deal size
remainSize	remain size
canceledSize	Cumulative number of cancellations
status	Order Status. open：order is active; done：order has been completed

Cancel Specified number HF orders by orderId

This interface can cancel the specified quantity of the order according to the orderId.

HTTP REQUEST

DELETE /api/v1/hf/orders/cancel/{orderId}

Example

DELETE /api/v1/hf/orders/cancel/1?symbol=BTC-USDT&cancelSize=10.01

{
  "code": "200000",
  "data": {
    "orderId": "6d539dc614db3",
    "cancelSize": "10.01"
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Order id of the cancelled order
symbol	String	Yes	symbol
cancelSize	String	Yes	canceled size
RESPONSES

Param	Description
orderId	Canceled orderId
cancelSize	canceled size

Cancel all HF orders by symbol

This interface can cancel all open high-frequency orders (orders created through /api/v1/hf/orders).

This endpoint only sends cancellation requests. The results of the requests must be obtained by checking the order status or subscribing to websocket.

HTTP REQUEST

DELETE /api/v1/hf/orders?symbol={symbol}

Example

DELETE /api/v1/hf/orders?symbol=ETH-BTC

// response
{
  "code": "200000",
  "data": "success"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Cancel open orders pertaining to the specified trading pair
RESPONSES

Since this interface is a batch cancellation, the http status of the interface is 200, which means that the cancellation request has been submitted successfully, so no return value is required. The actual cancellation result can be obtained by query order status through API or subscribing to websocket to get the order status.

Cancel all HF orders

This endpoint can cancel all HF orders for all symbol.

HTTP REQUEST

DELETE /api/v1/hf/orders/cancelAll

Example

DELETE /api/v1/hf/orders/cancelAll

{
  "succeedSymbols": [
    "BTC-USDT",
    "ETH-USDT"
  ],
  "failedSymbols": [
    {
        "symbol": "BTC-USDT",
        "error": "can't cancel, system timeout"
    }
  ],
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：30

RESPONSES

Param	Description
succeedSymbols	Cancel order successful symbol
failedSymbols	Cancel order failed symbol

Get Active HF Orders List

This interface is to obtain all active order lists, and the return value of the active order interface is the paged data of all uncompleted order lists. The returned data is sorted in descending order according to the latest update time of the order.

After the user successfully places an order, the order is in Active state, and the user can use inOrderBook to determine whether the order has entered the order. Canceled or fully filled orders are marked as completed Done status.

There is no time limit for querying orders in the "active" state.

HTTP REQUEST

GET /api/v1/hf/orders/active

Example

GET /api/v1/hf/orders/active?symbol=BTC-ETH

// response
{
    "code" : "200000",
    "data" : [
        "id": "5c35c02703aa673ceec2a168",
        "symbol": "BTC-USDT",
        "opType": "DEAL",
        "type": "limit",
        "side": "buy",
        "price": "10",
        "size": "2",
        "funds": "0",
        "dealFunds": "0.166",
        "dealSize": "2",
        "fee": "0",
        "feeCurrency": "USDT",
        "stp": "",
        "timeInForce": "GTC",
        "postOnly": false,
        "hidden": false,
        "iceberg": false,
        "visibleSize": "0",
        "cancelAfter": 0,
        "channel": "IOS",
        "clientOid": "",
        "remark": "",
        "tags": "",
        "active": true,
        "inOrderBook": true,
        "cancelExist": false,
        "createdAt": 1547026471000,
        "lastUpdatedAt": 1547026471001,
        "tradeType": "TRADE",
        "cancelledSize": "0",
        "cancelledFunds": "0",
        "remainSize": "0",
        "remainFunds": "0"
        }        
    ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Only returns order information for the specified trading pair
RESPONSES

Param	Description
id	Order id，a unique identifier pertaining to the order
symbol	Trading pair
opType	Operation type: DEAL
type	Order type
side	Buy or sell
price	Order price
size	Order size
dealSize	Number of filled transactions
cancelledSize	Number of canceled transactions
remainSize	Number of remain transactions
funds	Order amount
dealFunds	Number of filled funds
cancelledFunds	Number of canceled funds
remainFunds	Number of remain funds
fee	Service fee
feeCurrency	currency used to calculate fees
stp	Self trade protection
timeInForce	Time in force
postOnly	Is it post only?
hidden	Is it a hidden order?
iceberg	Is it an iceberg order?
visibleSize	Visible size of iceberg order in order book.
cancelAfter	A GTT timeInForce that expires in n seconds
channel	Source of orders
clientOid	Identifier created by the client
remark	Order description
tags	Order identifier
active	Order status: true-The status of the order isactive; false-The status of the order isdone
inOrderBook	Whether to enter the orderbook: true: enter the orderbook; false: not enter the orderbook
cancelExist	Are there any cancellation records pertaining to the order?
createdAt	order creation time
lastUpdatedAt	Last update time of order
tradeType	Trade type: TRADE (Spot Trading)
Order Polling

For high-frequency trading users, we recommend locally caching, maintaining your own order records, and using market data streams to update your order information in real time.

Get symbol with active HF orders List

This interface can query all trading pairs that the user has active orders

HTTP REQUEST

GET /api/v1/hf/orders/active/symbols

Example

GET /api/v1/hf/orders/active/symbols

{
  "success": true,
  "code": "200",
  "msg": "success",
  "retry": false,
  "data": {
    "symbols": ["BTC-USDT"]
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

N/A

RESPONSES

Param	Description
symbols	List of trading pairs with active orders

Get HF Completed order list

This endpoint obtains a list of filled HF orders and returns paginated data. The returned data is sorted in descending order based on the latest order update times.

After the user successfully places an order, the order is in Active state, and the user can use inOrderBook to determine whether the order has entered the order. Canceled or fully filled orders are marked as completed Done status.

If the order is not an active order, you can only get data within the time range of 3 _ 24 hours (ie: from the current time to 3 _ 24 hours ago). If the time range is exceeded, the system will query the data within the time range of 3 * 24 hours by default.

HTTP REQUEST

GET /api/v1/hf/orders/done

Example

GET /api/v1/hf/orders/done?symbol=BTC-ETH&type=limit&side=buy

// response
{
  "code": "200000",
  "data": {
    "lastId": 2682265600,
    "items": [
      {
        "id": "63074a5a27ecbe0001e1f3ba",
        "symbol": "CSP-USDT",
        "opType": "DEAL",
        "type": "limit",
        "side": "sell",
        "price": "0.1",
        "size": "0.1",
        "funds": "0.01",
        "dealSize": "0",
        "dealFunds": "0",
        "fee": "0",
        "feeCurrency": "USDT",
        "stp": "",
        "timeInForce": "GTC",
        "postOnly": false,
        "hidden": false,
        "iceberg": false,
        "visibleSize": "0",
        "cancelAfter": 0,
        "channel": "API",
        "clientOid": "",
        "remark": "",
        "tags": "",
        "cancelExist": true,
        "createdAt": 1661422170924,
        "lastUpdatedAt": 1661422196926,
        "tradeType": "TRADE",
        "inOrderBook": false,
        "active": false,
        "cancelledSize": "0",
        "cancelledFunds": "0",
        "remainSize": "0",
        "remainFunds": "0"
      }
    ]
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	Only returns order information for the specified trading pair
side	String	No	buy (Buy) orsell (Sell)
type	String	No	Order type: limit (limit order), market(market order)
startAt	long	No	Start time (ms)，last update(filled) time of the limit order
endAt	long	No	End time (ms)，last update(filled) time of limit order
lastId	long	No	The id of the last data item from the previous batch，defaults to obtaining the latest data
limit	int	No	Default20，maximum100
TIP
lastIdis used to filter data and paginate. If lastIdis not entered, the default is a maximum of 100 returned data items. The return results includelastId，which can be used as a query parameter to look up new data from the next page.

RESPONSES

Param	Description
id	Order id，a unique identifier of the order
symbol	Trading pair
opType	Operation type: DEAL
type	Order type
side	Buy or sell
price	Order price
size	Order size
dealSize	Number of filled transactions
cancelledSize	Number of canceled transactions
remainSize	Number of remain transactions
funds	Order amount
dealFunds	Number of filled funds
cancelledFunds	Number of canceled funds
remainFunds	Number of remain funds
fee	Service fee
feeCurrency	currency used to calculate fees
stp	Self trade protection
timeInForce	Time in force
postOnly	Is it post only?
hidden	Is it a hidden order?
iceberg	Is it an iceberg order?
visibleSize	Visible size of iceberg order in order book.
cancelAfter	A GTT timeInForce that expires in n seconds
channel	Source of orders
clientOid	Identifier created by the client
remark	Order description
tags	Order identifier
active	Order status: true-The status of the order isactive; false-The status of the order isdone
inOrderBook	Whether to enter the orderbook: true: enter the orderbook; false: not enter the orderbook
cancelExist	Are there any cancellation records pertaining to the order?
createdAt	order creation time
lastUpdatedAt	Last update time of order
tradeType	Trade type: TRADE (Spot Trading)

Get HF Order details by orderId

This endpoint can be used to obtain information for a single HF order using the order id.

If the order is not an active order, you can only get data within the time range of 3 _ 24 hours (ie: from the current time to 3 _ 24 hours ago). If the time range is exceeded, the system will query the data within the time range of 3 * 24 hours by default.

HTTP REQUEST

GET /api/v1/hf/orders/{orderId}?symbol={symbol}

Example

GET /api/v1/hf/orders/5c35c02703aa673ceec2a168?symbol=ETH-BTC

// response
{
  "code": "200000",
  "data": {
    "id": "5f3113a1c9b6d539dc614dc6",
    "symbol": "KCS-BTC",
    "opType": "DEAL",
    "type": "limit",
    "side": "buy",
    "price": "0.00001",
    "size": "1",
    "funds": "0",
    "dealFunds": "0",
    "dealSize": "0",
    "fee": "0",
    "feeCurrency": "BTC",
    "stp": "",
    "timeInForce": "GTC",
    "postOnly": false,
    "hidden": false,
    "iceberg": false,
    "visibleSize": "0",
    "cancelAfter": 0,
    "channel": "API",
    "clientOid": "6d539dc614db312",
    "remark": "",
    "tags": "",
    "active": true,
    "inOrderBook": false,
    "cancelExist": false,
    "createdAt": 1547026471000,
    "lastUpdatedAt": 1547026471001,
    "tradeType": "TRADE",
    "cancelledSize": "0",
    "cancelledFunds": "0",
    "remainSize": "0",
    "remainFunds": "0"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
symbol	String	Yes	Trading pair, such as, ETH-BTC
RESPONSES

Param	Description
id	Order id，a unique identifier of the order
symbol	Trading pair
opType	Operation type: DEAL
type	Order type
side	Buy or sell
price	Order price
size	Order size
dealSize	Number of filled transactions
cancelledSize	Number of canceled transactions
remainSize	Number of remain transactions
funds	Order amount
dealFunds	Number of filled funds
cancelledFunds	Number of canceled funds
remainFunds	Number of remain funds
fee	Service fee
feeCurrency	currency used to calculate fees
stp	Self trade protection
timeInForce	Time in force
postOnly	Is it post only?
hidden	Is it a hidden order?
iceberg	Is it an iceberg order?
visibleSize	Visible size of iceberg order in order book.
cancelAfter	A GTT timeInForce that expires in n seconds
channel	Source of orders
clientOid	Identifier created by the client
remark	Order description
tags	Order identifier
active	Order status: true-The status of the order isactive; false-The status of the order isdone
inOrderBook	Whether to enter the orderbook: true: enter the orderbook; false: not enter the orderbook
cancelExist	Are there any cancellation records pertaining to the order?
createdAt	order creation time
lastUpdatedAt	Last update time of order
tradeType	Trade type: TRADE (Spot Trading)

Get HF order details by clientOid

The endpoint can be used to obtain information about a single order using clientOid. If the order does not exist, then there will be a prompt saying that the order does not exist.

If the order is not an active order, you can only get data within the time range of 3 _ 24 hours (ie: from the current time to 3 _ 24 hours ago). If the time range is exceeded, the system will query the data within the time range of 3 * 24 hours by default.

HTTP REQUEST

GET /api/v1/hf/orders/client-order/{clientOid}?symbol={symbol}

Example

GET /api/v1/hf/orders/client-order/6d539dc614db312?symbol=ETH-BTC

// response
{
  "code": "200000",
  "data": {
    "id": "5f3113a1c9b6d539dc614dc6",
    "symbol": "KCS-BTC",
    "opType": "DEAL",
    "type": "limit",
    "side": "buy",
    "price": "0.00001",
    "size": "1",
    "funds": "0",
    "dealFunds": "0",
    "dealSize": "0",
    "fee": "0",
    "feeCurrency": "BTC",
    "stp": "",
    "timeInForce": "GTC",
    "postOnly": false,
    "hidden": false,
    "iceberg": false,
    "visibleSize": "0",
    "cancelAfter": 0,
    "channel": "API",
    "clientOid": "6d539dc614db312",
    "remark": "",
    "tags": "",
    "active": true,
    "inOrderBook": false,
    "cancelExist": false,
    "createdAt": 1547026471000,
    "lastUpdatedAt": 1547026471001,
    "tradeType": "TRADE",
    "cancelledSize": "0",
    "cancelledFunds": "0",
    "remainSize": "0",
    "remainFunds": "0"
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Path parameter，an identifier created by the client
symbol	String	Yes	symbol, such as, ETH-BTC
TIP
If the order is not an active order, you can only get data within the time frame of 3 _ 24 hours (ie: from the current time to 3 _ 24 hours ago)

RESPONSES

Param	Description
id	Order id，a unique identifier of the order
symbol	Trading pair
opType	Operation type: DEAL
type	Order type
side	Buy or sell
price	Order price
size	Order size
dealSize	Number of filled transactions
cancelledSize	Number of canceled transactions
remainSize	Number of remain transactions
funds	Order amount
dealFunds	Number of filled funds
cancelledFunds	Number of canceled funds
remainFunds	Number of remain funds
fee	Service fee
feeCurrency	currency used to calculate fees
stp	Self trade protection
timeInForce	Time in force
postOnly	Is it post only?
hidden	Is it a hidden order?
iceberg	Is it an iceberg order?
visibleSize	Visible size of iceberg order in order book.
cancelAfter	A GTT timeInForce that expires in n seconds
channel	Source of orders
clientOid	Identifier created by the client
remark	Order description
tags	Order identifier
active	Order status: true-The status of the order isactive; false-The status of the order isdone
inOrderBook	Whether to enter the orderbook: true: enter the orderbook; false: not enter the orderbook
cancelExist	Are there any cancellation records pertaining to the order?
createdAt	order creation time
lastUpdatedAt	Last update time of order
tradeType	Trade type: TRADE (Spot Trading)

Auto Cancel HF order setting

Call this interface to automatically cancel all orders of the set trading pair after the specified time. If this interface is not called again for renewal or cancellation before the set time, the system will help the user to cancel the order of the corresponding trading pair. Otherwise it will not.

Note: The order cancellation delay is between 0 and 10 seconds, and the order will not be canceled in real time. When the system cancels the order, if the transaction pair status is no longer operable to cancel the order, it will not cancel the order

HTTP REQUEST

POST /api/v1/hf/orders/dead-cancel-all

Example

POST /api/v1/hf/orders/dead-cancel-all

{
  "code": "200000",
  "data": {
    "currentTime": 1682010526,
    "triggerTime": 1682010531
  }
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
timeout	Integer	Yes	Auto cancel order trigger setting time, the unit is second. range: timeout=-1 (meaning unset) or 5 <= timeout <= 86400. For example, timeout=5 means that the order will be automatically canceled if no user request is received for more than 5 seconds. When this parameter is changed, the previous setting will be overwritten.
symbols	String	No	List of trading pairs. When this parameter is not empty, separate it with commas and support up to 50 trading pairs. Empty means all trading pairs. When this parameter is changed, the previous setting will be overwritten.
RESPONSES

Param	Description
currentTime	System current time (in seconds)
triggerTime	Trigger cancellation time (in seconds)

Auto Cancel HF order setting query

Through this interface, you can query the settings of automatic order cancellation

HTTP REQUEST

GET /api/v1/hf/orders/dead-cancel-all/query

Example

GET /api/v1/hf/orders/dead-cancel-all/query

{
  "timeout": 5,
  "symbols": "BTC-USDT",
  "currentTime": 1682010526,
  "triggerTime": 1682010531
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

N/A

RESPONSES

Param	Description
timeout	Auto cancel order trigger setting time, the unit is second. range: timeout=-1 (meaning unset) or 5 <= timeout <= 86400
symbols	List of trading pairs. Separated by commas, empty means all trading pairs
currentTime	System current time (in seconds)
triggerTime	Trigger cancellation time (in seconds)

Get HF Filled List

This endpoint can be used to obtain a list of the latest HF transaction details. The returned results are paginated. The data is sorted in descending order according to time.

HTTP REQUEST

GET /api/v1/hf/fills

Example

GET /api/v1/hf/fills?symbol=BTC-USDT

// response
{
  "code": "200000",
  "data": {
    "items": [
      {
        "id": 2678765568,
        "symbol": "BTC-ETC",
        "tradeId": 616179312641,
        "orderId": "6306cf6e27ecbe0001e1e03a",
        "counterOrderId": "6306cf4027ecbe0001e1df4d",
        "side": "buy",
        "liquidity": "taker",
        "forceTaker": false,
        "price": "1",
        "size": "1",
        "funds": "1",
        "fee": "0.00021",
        "feeRate": "0.00021",
        "feeCurrency": "USDT",
        "stop": "",
        "tradeType": "TRADE",
        "type": "limit",
        "createdAt": 1661390702919
      }
    ],
    "lastId": 2678765568
  }
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	No	Look up the transaction details pertaining to the order id（IforderId is specified，please ignore the other query parameters）
symbol	String	Yes	Only returns order information for the specified trading pair
side	String	No	buy（Buy） or sell（Sell）
type	String	No	Order type: limit（limit order）, market(market order)
startAt	long	No	Start time（ms），puts a restriction on the transaction(creation) time for the transaction records
endAt	long	No	End time（ms），puts a restriction on the transaction(creation) time of the transaction records
lastId	long	No	The id of the last data item from the previous batch, defaults to obtaining the latest data
limit	int	No	Default100，maximum 100
TIP
lastIdis used to filter data and paginate. If lastIdis not entered, the default is a maximum of 100 returned data items. The return results includelastId，which can be used as a query parameter to look up new data from the next page.

RESPONSES

Param	Description
id	Id of transaction detail
symbol	Trading pair
tradeId	Trade Id (numeric type, symbol latitude increment)
orderId	Order Id
counterOrderId	Counterparty order Id
side	Buy or sell
liquidity	Liquidity type: taker or maker
forceTaker	Whether or not to forcefully process as taker
price	Order price
size	Order size
funds	Turnover
fee	Service fee
feeRate	Fee rate
feeCurrency	currency used to calculate fees
type	Order type: limit or market
stop	Take Profit and Stop Loss type, currently HFT does not support the Take Profit and Stop Loss type, so it is empty
createdAt	Transaction(Creation) time
tradeType	Trade type: TRADE(Spot Trading)
Show time range

You can only obtain data from within a 3 * 24 hour time range（i.e., from now up to 3 * 24 hours ago）. If the time range limit is exceeded, the system will default to looking up data from within the 3 * 24 hour time range.

Settlement

Settlement is divided into two parts: transaction settlement and fee settlement. When matching is complete, the data is immediately updated into our data storage and the system initiates the settlement to deduct funds from the funds that are on hold.

Handling fees

Orders on the KuCoin platform are divided into two types: Taker and Maker. Taker orders can be filled with existing orders in the order book. On the contrary, Maker orders will stay in the order book and await matching. Taker orders decrease market liquidity and therefore charge a taker fee. Maker orders increase market liquidity and therefore only charge a lower handling fee or may even pay out rewards. Note: market orders, iceberg orders, and hidden orders all charge taker fees.

When an order is placed, the system puts a hold on a portion of the funds in your account for paying the taker fee. Parameter values in the liquidity field determine whether taker fees or maker fees will be charged for the order.

If your order is a limit order, when the order is placed it will immediately be matched in the matching engine and we will charge a taker fee. If your order is not immediately matched or is only partially matched, the remaining portions will enter the order book. Maker fees will be charged for orders that have entered the order book before they are cancelled or filled.

After entering the matching stage, matching will be conducted with counterparty orders. When the remaining amount for the order is 0，the transaction is complete. If the remaining funds are not enough to purchase the minimum amount（0.00000001）, the order is cancelled.

If your order is filled as a maker, we will refund the remaining amount of withheld taker fees.

Please note:

When you create a hidden/iceberg order, even if it is not immediately matched by the matching engine and is filled as post only, a taker fee will still be charged.
Maker fees will be charged for post only orders. If the order is immediately matched with existing orders (with the exception of iceberg/hidden orders) on the market after order placement, then the order will be cancelled. If a post only order is immediately filled with iceberg/hidden orders, a maker fee will be charged for the post only order.
For Example:

Using BTC/USDT as an example, if you want to 1BTC at market price，the handling fee would be 0.1%，with the market order book data as follows：

Price(USDT)	Size(BTC)	Side
4200.00	0.18412309	sell
4015.60	0.56849308	sell
4011.32	0.24738383	sell
3995.64	0.84738383	buy
3988.60	0.20484000	buy
3983.85	1.37584908	buy
When you place a buy market order, it will be filled immediately, and the transaction detailed will show 3 transactions, as shown below:

Price(USDT)	Size(BTC)	Fee(BTC)
4011.32	0.24738383	0.00024738
4015.60	0.56849308	0.00056849
4200.00	0.18312409	0.00018312

Orders

Place Order

There are two types of orders: Limit order (limit): Specify the price and quantity to trade. Market order (market): Specify funds or quantity to trade.

Orders can only be placed if your Spot/Margin Account has sufficient funds. Once an order is placed, your account funds will be put on hold for the duration of the order. Holds are put on hold depends on the order type and parameters specified. See the Holds details below.

TIP
Placing an order will enable price protection. When the price of the limit order is outside the threshold range, the price protection mechanism will be triggered, causing the order to fail.

Please note that the system will frozen the fees from the orders that entered the order book in advance. Read List Fills to learn more.

Before placing an order, please read Get Symbol List to understand the requirements for the quantity parameters for each trading pair.

Do not include extra spaces in JSON strings.

Place Order Limit

For a single account, the maximum number of active orders is 2000, with a maximum of 200 active orders per trading pair (including stop orders).

HTTP REQUEST

POST /api/v1/orders

Example

POST /api/v1/orders

{
  "orderId": "5bd6e9286d99522a52e458de"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：limit 2, market 2

PARAMETERS

Public order placement request parameters

Param	Type	Mandatory	Description
clientOid	String	Yes	clientOid, the unique identifier created by the client, use of UUID, with a maximum length of 128 bits.
side	String	Yes	buy or sell
symbol	String	Yes	symbol, e.g. ETH-BTC
type	String	No	limit or market (default is limit)
remark	String	No	remark, length cannot exceed 50 characters (ASCII)
stp	String	No	self trade prevention, CN, CO, CB or DC
tradeType	String	No	The type of trading : TRADE（Spot Trade）, MARGIN_TRADE (Margin Trade). Default is TRADE. Note: To improve the system performance and to accelerate order placing and processing, KuCoin has added a new interface for order placing of margin. For traders still using the current interface, please move to the new one as soon as possible. The current one will no longer accept margin orders by May 1st, 2021 (UTC). At the time, KuCoin will notify users via the announcement, please pay attention to it.
Additional Request Parameters Required by limit Orders

Param	Type	Mandatory	Description
price	String	Yes	Specify price for currency
size	String	Yes	Specify quantity for currency
timeInForce	String	No	Order timing strategy GTC, GTT, IOC, FOK (The default is GTC)
cancelAfter	long	No	Cancel after n seconds，the order timing strategy is GTT
postOnly	boolean	No	passive order labels, this is disabled when the order timing strategy is IOC or FOK
hidden	boolean	No	Hidden or not (not shown in order book)
iceberg	boolean	No	Whether or not only visible portions of orders are shown in iceberg orders
visibleSize	String	No	Maximum visible quantity in iceberg orders
Additional request parameters required by market orders

Param	Type	Mandatory	Description
size	String	No	(Select one out of two: size or funds)
funds	String	No	(Select one out of two: size or funds)
When placing a market order, the size or funds must be set.
RESPONSES

Param	Description
orderId	An order Id is returned once an order is successfully placed.
Terms

Trading pair (Symbol)

The symbol must match a valid trading symbol.

Client Order Id(clientOid)

The ClientOid field is a unique ID created by the user（we recommend using a UUID）, and can only contain numbers, letters, underscores （_）, and hyphens （-）. This field is returned when order information is obtained. You can use clientOid to tag your orders. ClientOid is different from the order ID created by the service provider. Please do not initiate requests using the same clientOid. The maximum length for the ClientOid is 40 characters.

Please remember the orderId created by the service provider, it used to check for updates in order status.

Order Type (type):

The type of order you specify when you place your order determines whether or not you need to request other parameters and also affects the execution of the matching engine.

When placing a limit order, you must specify a price and size. The system will try to match the order according to market price or a price better than market price. If the order cannot be immediately matched, it will stay in the order book until it is matched or the user cancels.

Unlike limit orders, the price for market orders fluctuates with market prices. When placing a market order, you do not need to specify a price, you only need to specify a quantity. Market orders are filled immediately and will not enter the order book. All market orders are takers and a taker fee will be charged.

Trade Type (tradeType)

The platform currently supports spot （TRADE） asset trading orders, the system will default to freezing funds in your trading account according to spot trading rules.

Price (Price)

When placing a limit order, the price must be based on priceIncrement for the trading pair. The price increment (priceIncrement) is the price precision for the trading pair. For example, for the BTC-USDT trading pair, the priceIncrement is 0.00001000. So the price for your orders cannot be less than 0.00001000 and must be a multiple of priceIncrement. Otherwise, the order will return an invalid priceIncrement error.

Size (Size)

When placing a limit order, size refers to the amount of trading targets (the asset name written in front) for the trading pair. Teh Size must be based on the baseIncrement of the trading pair. The baseIncrement represents the precision for the trading pair. The size of an order must be a positive-integer multiple of baseIncrement and must be between baseMinSize and baseMaxSize.

Funds (Funds)

When placing a market order, the funds field refers to the funds for the priced asset (the asset name written latter) of the trading pair. The funds must be based on the quoteIncrement of the trading pair. The quoteIncrement represents the precision of the trading pair. The funds value for an order must be a multiple of quoteIncrement and must be between quoteMinSize and quoteMaxSize.

Time In Force (TimeInForce)

Time in force is a special strategy used during trading. It is used to specify how long an order shall remain active before being executed or expiring. There are four types of TimeInForce:

Abbreviation	Full name	Description
GTC	Good Till Canceled	Expires only when cancelled
GTT	Good Till Time	Expires at a specified time
IOC	Immediate Or Cancel	Execute the portions that can be executed immediately and cancel the rest; this does not enter the order book.
FOK	Fill Or Kill	Cancel if the order cannot be completely filled.
Note: order fills include self-fills. Market order does not support the TimeInForce strategy
Post Only (PostOnly)

PostOnly is just a label. If an order can be immediately filled, then it is cancelled.

When the user places a postOnly order, if the order encounters an iceberg order or hidden order after entering the matching engine, the order can be filled immediately. The postOnly order will charge maker fees and the iceberg order and hidden order will charge taker fees.
Hidden Orders and Iceberg Orders (Hidden & Iceberg)

Hidden orders and iceberg orders can be set in advanced settings (iceberg orders are a special type of hidden orders). When placing limit orders or stop limit orders, you can choose to execute according to hidden orders or iceberg orders.

Hidden orders are not shown in order books.

Unlike hidden orders, iceberg orders are divided into visible and hidden portions. When engaging in iceberg orders, visible order sizes must be set. The minimum visible size for an iceberg order is 1/20 of the total order size.

When matching, the visible portions of iceberg orders are matched first. Once the visible portions are fully matched, hidden portions will emerge. This will continue until the order is fully filled.

Note:

The system will charge taker fees for hidden orders and iceberg orders.
If you simultaneously set iceberg orders and hidden orders, your order will default to an iceberg order for execution.
Hold (Hold)

For limit price purchase orders, we will hold the amount of funds (price * size) required for your purchase order. Similarly, for limit price sell orders, we will also hold you sell order assets. When the transaction is executed, the service fees will be calculated. If you cancel a portion of a filled or unfilled order, then the remaining funds or amounts will be released and returned to your account. For market price buy/sell orders that require specific funds, we will hold the required funds in from your account. If only the size is specified, we may freeze (usually for a very short amount of time) all of the funds in your account prior to the order being filled or cancelled.

Self Trade Prevention (SelfTradePrevention)

Self trade prevention can be set in advanced settings, which will prevent self trades from occurring in your orders. If you do not set STP when placing an order, your order could be filled with another one of your orders. Market orders currently do not support DC strategies.

Market orders currently do not support DC. When timeInForce is FOK, stp will specify CN.

Abbreviation	Full name	Description
DC	Decrease and Cancel	Cancel the order with smaller size and change the order with larger size to the difference between old and new.
CO	Cancel old	Cancel the old order.
CN	Cancel new	Cancel the new order.
CB	Cancel both	Cancel both sides
Order Lifecycle (ORDER LIFECYCLE)

When an order placement request is successful (the matching engine receives the order) or denied (due to there being insufficient funds or illegal parameter values, etc.), the system will respond to the HTTP request. When an order is successfully placed, the order ID is returned. The order will be matched, which could result in it being fully or partially filled. When an order is fully or partially filled, the remaining portions of the order will be in an active state awaiting to be matched (this does not include IOC orders). Orders that are fully or partially filled(already cancelled) will be put into the “done” state.

Users that have subscribed to the Market Data Channel can use the order ID （orderId） and client ID （clientOid） to identify messages.

Price Protection Mechanisms

Price protection mechanisms ae enabled for order placements. Rules are detailed below:

If the spot trading market order/limit order placed by the user can be directly matched with an order in the current order book, the system will judge whether deviation between the price corresponding to the transaction depth and the spread exceeds the threshold value （the threshold value can be obtained using the symbol API endpoint）；
If it is exceeded, for limit orders, the order will be directly cancelled;
If it is a market order, then the system will partially execute the order. The execution limit will be the order size within the price range corresponding to the threshold value. The remaining orders will not be filled.
For example: if the threshold value is 10%, when a user places a market price purchase order in the KCS/USDT trading market for 10,000 USDT (the selling price is currently 1.20000), the system will determine that after the order is completely filled, the final price will be 1.40000. (1.40000-1.20000)/1.20000=16.7%>10%. The threshold value is 1.32000. The user’s market price purchase order will be filled only to a maximum of 1.32000. The remaining order portions will not be matched with orders in the order book. Note: this feature may not be able to determine depth with complete accuracy. If your order is not completely filled, it may be because the portion exceeding the threshold value was not filled.

Place Order Test

Order test endpoint, the request parameters and return parameters of this endpoint are exactly the same as the order endpoint, and can be used to verify whether the signature is correct and other operations. After placing an order, the order will not enter the matching system, and the order cannot be queried.

HTTP REQUEST

POST /api/v1/orders/test

Example

POST /api/v1/orders/test

API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：limit 2, market 2

Place Multiple Orders

Request via this endpoint to place 5 orders at the same time. The order type must be a limit order of the same symbol. The interface currently only supports spot trading

HTTP REQUEST

POST /api/v1/orders/multi

Example

POST /api/v1/orders/multi

//request
{
  "symbol": "KCS-USDT",
  "orderList": [
    {
      "clientOid": "3d07008668054da6b3cb12e432c2b13a",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "0.01"
    },
    {
      "clientOid": "37245dbe6e134b5c97732bfb36cd4a9d",
      "side": "buy",
      "type": "limit",
      "price": "0.01",
      "size": "0.01"
    }
  ]
}
//response
{
  "data": [
    {
      "symbol": "KCS-USDT",
      "type": "limit",
      "side": "buy",
      "price": "0.01",
      "size": "0.01",
      "funds": null,
      "stp": "",
      "stop": "",
      "stopPrice": null,
      "timeInForce": "GTC",
      "cancelAfter": 0,
      "postOnly": false,
      "hidden": false,
      "iceberge": false,
      "iceberg": false,
      "visibleSize": null,
      "channel": "API",
      "id": "611a6a309281bc000674d3c0",
      "status": "success",
      "failMsg": null,
      "clientOid": "552a8a0b7cb04354be8266f0e202e7e9"
    },
    {
      "symbol": "KCS-USDT",
      "type": "limit",
      "side": "buy",
      "price": "0.01",
      "size": "0.01",
      "funds": null,
      "stp": "",
      "stop": "",
      "stopPrice": null,
      "timeInForce": "GTC",
      "cancelAfter": 0,
      "postOnly": false,
      "hidden": false,
      "iceberge": false,
      "iceberg": false,
      "visibleSize": null,
      "channel": "API",
      "id": "611a6a309281bc000674d3c1",
      "status": "success",
      "failMsg": null,
      "clientOid": "bd1e95e705724f33b508ed270888a4a9"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Client Order Id，unique identifier created by the user, the use of UUID is recommended
side	String	Yes	buy or sell
symbol	String	Yes	symbol For Example，ETH-BTC
type	String	No	only limit (default is limit)
remark	String	No	remark for the order, length cannot exceed 100 utf8 characters
stop	String	No	Either loss or entry. Requires stopPrice to be defined
stopPrice	String	No	Need to be defined if stop is specified.
stp	String	No	self trade prevention, is divided into CN, CO, CB , and DC strategies
tradeType	String	No	Default is TRADE
price	String	Yes	price per base currency
size	String	Yes	amount of base currency to buy or sell
timeInForce	String	No	GTC, GTT, IOC, or FOK (default is GTC).
cancelAfter	long	No	Cancels in n seconds, with GTT as the time in force strategy
postOnly	boolean	No	Post only identifier, invalid when the time in force strategy is IOC or FOK
hidden	boolean	No	Hidden or not (not shown in order book)
iceberg	boolean	No	Whether or not only visible portions of orders are shown in iceberg orders
visibleSize	String	No	Maximum visible quantity in iceberg orders
RESPONSES

Param	Description
status	Order creation results (success, fail)
failMsg	Reason of failure

Cancel Order by orderId

Request via this endpoint to cancel a single order previously placed.

TIP
This interface is only for cancellation requests. The cancellation result needs to be obtained by querying the order status or subscribing to websocket. It is recommended that you DO NOT cancel the order until receiving the Open message, otherwise the order cannot be cancelled successfully.

HTTP REQUEST

DELETE /api/v1/orders/{orderId}

Example

DELETE /api/v1/orders/5bd6e9286d99522a52e458de

{
  "cancelledOrderIds": ["5bd6e9286d99522a52e458de"]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Order ID, unique ID of the order.
RESPONSES

Param	Description
cancelledOrderIds	Unique ID of the cancelled order
TIP
The order ID is the server-assigned order id and not the passed clientOid.

CANCEL REJECT

If the order could not be canceled (already filled or previously canceled, etc), then an error response will indicate the reason in the message field.

Cancel Order by clientOid

Request via this interface to cancel an order via the clientOid.

HTTP REQUEST

DELETE /api/v1/order/client-order/{clientOid}

Example

DELETE /api/v1/order/client-order/6d539dc614db3

{
  "cancelledOrderId": "5f311183c9b6d539dc614db3",
  "clientOid": "6d539dc614db3"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：5

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders
RESPONSES

Param	Description
cancelledOrderId	Unique ID of the cancelled order
clientOid	Unique order id created by users to identify their orders

Cancel all orders

Request via this endpoint to cancel all open orders. The response is a list of ids of the canceled orders.

HTTP REQUEST

DELETE /api/v1/orders

Example

DELETE /api/v1/orders?symbol=ETH-BTC&tradeType=TRADE
DELETE /api/v1/orders?symbol=ETH-BTC&tradeType=MARGIN_ISOLATED_TRADE

{
  "cancelledOrderIds": [
    "5c52e11203aa677f33e493fb",
    "5c52e12103aa677f33e493fe",
    "5c52e12a03aa677f33e49401",
    "5c52e1be03aa677f33e49404",
    "5c52e21003aa677f33e49407",
    "5c6243cb03aa67580f20bf2f",
    "5c62443703aa67580f20bf32",
    "5c6265c503aa676fee84129c",
    "5c6269e503aa676fee84129f",
    "5c626b0803aa676fee8412a2"
  ]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：20

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	No	cancel the orders for the specified symbol.
tradeType	String	No	the type of trading :TRADE(Spot Trading), MARGIN_TRADE(Cross Margin Trading), MARGIN_ISOLATED_TRADE(Isolated Margin Trading), and the default is TRADE to cancel the spot trading orders.
RESPONSES

Param	Description
cancelledOrderIds	Unique ID of the cancelled order

Get Order List

Request via this endpoint to get your current order list. The return value is the data after Pagination, sorted in descending order according to time.

HTTP REQUEST

GET /api/v1/orders

Example

GET /api/v1/orders?status=active
GET /api/v1/orders?status=active?tradeType=MARGIN_ISOLATED_TRADE

{
  "currentPage": 1,
  "pageSize": 1,
  "totalNum": 153408,
  "totalPage": 153408,
  "items": [
    {
      "id": "5c35c02703aa673ceec2a168",
      "symbol": "BTC-USDT",
      "opType": "DEAL",
      "type": "limit",
      "side": "buy",
      "price": "10",
      "size": "2",
      "funds": "0",
      "dealFunds": "0.166",
      "dealSize": "2",
      "fee": "0",
      "feeCurrency": "USDT",
      "stp": "",
      "stop": "",
      "stopTriggered": false,
      "stopPrice": "0",
      "timeInForce": "GTC",
      "postOnly": false,
      "hidden": false,
      "iceberg": false,
      "visibleSize": "0",
      "cancelAfter": 0,
      "channel": "IOS",
      "clientOid": "",
      "remark": "",
      "tags": "",
      "isActive": false,
      "cancelExist": false,
      "createdAt": 1547026471000,
      "tradeType": "TRADE"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
status	String	No	active or done(done as default), Only list orders with a specific status .
symbol	String	No	Only list orders for a specific symbol
side	String	No	buy or sell
type	String	No	limit, market, limit_stop or market_stop
tradeType	String	No	The type of trading:TRADE - Spot Trading(TRADE as default), MARGIN_TRADE - Cross Margin Trading, MARGIN_ISOLATED_TRADE - Isolated Margin Trading.
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
RESPONSES

Param	Description
id	Order ID, the ID of an order.
symbol	symbol
opType	Operation type: DEAL
type	order type
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
dealFunds	executed size of funds
dealSize	executed quantity
fee	fee
feeCurrency	charge fee currency
stp	self trade prevention,include CN,CO,DC,CB
stop	stop type, include entry and loss
stopTriggered	stop order is triggered or not
stopPrice	stop price
timeInForce	time InForce,include GTC,GTT,IOC,FOK
postOnly	postOnly
hidden	hidden order
iceberg	iceberg order
visibleSize	displayed quantity for iceberg order
cancelAfter	cancel orders time，requires timeInForce to be GTT
channel	order source
clientOid	user-entered order unique mark
remark	remark
tags	tag order source
isActive	order status, true and false. If true, the order is active, if false, the order is fillled or cancelled
cancelExist	order cancellation transaction record
createdAt	create time
tradeType	The type of trading
ORDER STATUS AND SETTLEMENT

Any order on the exchange order book is in active status. Orders removed from the order book will be marked with done status. After an order becomes done, there may be a few milliseconds latency before it’s fully settled.

You can check the orders in any status. If the status parameter is not specified, orders of done status will be returned by default.

When you query orders in active status, there is no time limit. However, when you query orders in done status, the start and end time range cannot exceed 7* 24 hours. An error will occur if the specified time window exceeds the range. If you specify the end time only, the system will automatically calculate the start time as end time minus 7*24 hours, and vice versa.

The history for cancelled orders is only kept for one month. The history for Filled orders is only kept for six month.

POLLING

For high-volume trading, it is highly recommended that you maintain your own list of open orders and use one of the streaming market data feeds to keep it updated. You should poll the open orders endpoint to obtain the current state of any open order.

Get Recent Orders List

Request via this endpoint to get 1000 orders in the last 24 hours. The return value is the data after Pagination, sorted in descending order according to time.

HTTP REQUEST

GET /api/v1/limit/orders

Example

GET /api/v1/limit/orders

{
  "code": "200000",
  "msg": "",
  "data": [
    {
      "id": "demoData",
      "symbol": "demoData",
      "opType": "demoData",
      "type": "demoData",
      "side": "demoData",
      "price": 1,
      "size": 1,
      "funds": 1,
      "dealFunds": 1,
      "dealSize": 1,
      "fee": 1,
      "feeCurrency": "demoData",
      "stp": "demoData",
      "stop": "demoData",
      "stopTriggered": true,
      "stopPrice": 1,
      "timeInForce": "demoData",
      "postOnly": true,
      "hidden": true,
      "iceberg": true,
      "visibleSize": 1,
      "cancelAfter": 1,
      "channel": "demoData",
      "clientOid": "demoData",
      "remark": "demoData",
      "tags": "demoData",
      "isActive": true,
      "cancelExist": true,
      "createdAt": "2023-06-20 12:22:56",
      "tradeType": "demoData"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

RESPONSES

Param	Description
orderId	Order ID, unique identifier of an order.
symbol	symbol
opType	Operation type: DEAL
type	order type, e.g. limit, market, stop_limit
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
dealFunds	deal funds
dealSize	deal quantity
fee	fee
feeCurrency	charge fee currency
stp	self trade prevention,include CN,CO,DC,CB
stop	stop type, include entry and loss
stopTriggered	stop order is triggered
stopPrice	stop price
timeInForce	time InForce,include GTC,GTT,IOC,FOK
postOnly	postOnly
hidden	hidden order
iceberg	iceberg order
visibleSize	display quantity for iceberg order
cancelAfter	cancel orders time，requires timeInForce to be GTT
channel	order source
clientOid	user-entered order unique mark
remark	remark
tags	tag order source
isActive	order status, true and false. If true, the order is active, if false, the order is fillled or cancelled
cancelExist	order cancellation transaction record
createdAt	create time
tradeType	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading).

Get Order Details by orderId

Request via this endpoint to get a single order info by order ID.

HTTP REQUEST

GET /api/v1/orders/{orderId}

Example

GET /api/v1/orders/5c35c02703aa673ceec2a168

{
  "id": "5c35c02703aa673ceec2a168",
  "symbol": "BTC-USDT",
  "opType": "DEAL",
  "type": "limit",
  "side": "buy",
  "price": "10",
  "size": "2",
  "funds": "0",
  "dealFunds": "0.166",
  "dealSize": "2",
  "fee": "0",
  "feeCurrency": "USDT",
  "stp": "",
  "stop": "",
  "stopTriggered": false,
  "stopPrice": "0",
  "timeInForce": "GTC",
  "postOnly": false,
  "hidden": false,
  "iceberg": false,
  "visibleSize": "0",
  "cancelAfter": 0,
  "channel": "IOS",
  "clientOid": "",
  "remark": "",
  "tags": "",
  "isActive": false,
  "cancelExist": false,
  "createdAt": 1547026471000,
  "tradeType": "TRADE"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Description
orderId	String	Order ID, unique ID of the order.
RESPONSES

Param	Description
orderId	Order ID, the ID of an order
symbol	symbol
opType	operation type,deal is pending order,cancel is cancel order
type	order type,e.g. limit,market,stop_limit.
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
dealFunds	deal funds
dealSize	deal quantity
fee	fee
feeCurrency	charge fee currency
stp	self trade prevention,include CN,CO,DC,CB
stop	stop type, include entry and loss
stopTriggered	stop order is triggered
stopPrice	stop price
timeInForce	time InForce,include GTC,GTT,IOC,FOK
postOnly	postOnly
hidden	hidden order
iceberg	iceberg order
visibleSize	display quantity for iceberg order
cancelAfter	cancel orders time，requires timeInForce to be GTT
channel	order source
clientOid	user-entered order unique mark
remark	remark
tags	tag order source
isActive	order status, true and false. If true, the order is active, if false, the order is fillled or cancelled
cancelExist	order cancellation transaction record
createdAt	create time
tradeType	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading).

Get Order Details by clientOid

Request via this interface to check the information of a single active order via clientOid. The system will prompt that the order does not exists if the order does not exist or has been settled.

HTTP REQUEST

GET /api/v1/order/client-order/{clientOid}

Example

GET /api/v1/order/client-order/6d539dc614db312

{
  "id": "5f3113a1c9b6d539dc614dc6",
  "symbol": "KCS-BTC",
  "opType": "DEAL",
  "type": "limit",
  "side": "buy",
  "price": "0.00001",
  "size": "1",
  "funds": "0",
  "dealFunds": "0",
  "dealSize": "0",
  "fee": "0",
  "feeCurrency": "BTC",
  "stp": "",
  "stop": "",
  "stopTriggered": false,
  "stopPrice": "0",
  "timeInForce": "GTC",
  "postOnly": false,
  "hidden": false,
  "iceberg": false,
  "visibleSize": "0",
  "cancelAfter": 0,
  "channel": "API",
  "clientOid": "6d539dc614db312",
  "remark": "",
  "tags": "",
  "isActive": true,
  "cancelExist": false,
  "createdAt": 1597051810000,
  "tradeType": "TRADE"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders
RESPONSES

Param	Description
id	Order ID, the ID of an order
symbol	symbol
opType	operation type,deal is pending order,cancel is cancel order
type	order type,e.g. limit,market,stop_limit.
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
dealFunds	deal funds
dealSize	deal quantity
fee	fee
feeCurrency	charge fee currency
stp	self trade prevention,include CN,CO,DC,CB
stop	stop type, include entry and loss
stopTriggered	stop order is triggered
stopPrice	stop price
timeInForce	time InForce,include GTC,GTT,IOC,FOK
postOnly	postOnly
hidden	hidden order
iceberg	iceberg order
visibleSize	display quantity for iceberg order
cancelAfter	cancel orders time，requires timeInForce to be GTT
channel	order source
clientOid	user-entered order unique mark
remark	remark
tags	tag order source
isActive	order status, true and false. If true, the order is active, if false, the order is fillled or cancelled
cancelExist	order cancellation transaction record
createdAt	create time
tradeType	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading).

Fills

Get Filled List

Request via this endpoint to get the recent fills.

The return value is the data after Pagination, sorted in descending order according to time.

HTTP REQUEST

GET /api/v1/fills

Example

GET /api/v1/fills

{
  "currentPage": 1,
  "pageSize": 1,
  "totalNum": 251915,
  "totalPage": 251915,
  "items": [
    {
      "symbol": "BTC-USDT",
      "tradeId": "5c35c02709e4f67d5266954e",
      "orderId": "5c35c02703aa673ceec2a168",
      "counterOrderId": "5c1ab46003aa676e487fa8e3",
      "side": "buy",
      "liquidity": "taker",
      "forceTaker": true,
      "price": "0.083",
      "size": "0.8424304",
      "funds": "0.0699217232",
      "fee": "0",
      "feeRate": "0",
      "feeCurrency": "USDT",
      "stop": "",
      "type": "limit",
      "createdAt": 1547026472000,
      "tradeType": "TRADE"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：10

TIP
This request is paginated

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	No	Limit the list of fills to this orderId （If you specify orderId, ignore other conditions）
symbol	String	No	Limit the list of fills to this symbol
side	String	No	buy or sell
type	String	No	limit, market, limit_stop or market_stop
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
tradeType	String	Yes	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading), MARGIN_ISOLATED_TRADE (Isolated Margin Trading), TRADE as default.
RESPONSES

Param	Description
symbol	symbol.
tradeId	trade id, it is generated by Matching engine.
orderId	Order ID, unique identifier of an order.
counterOrderId	counter order id.
side	transaction direction,include buy and sell.
price	order price
size	order quantity
funds	order funds
type	order type,e.g. limit,market,stop_limit.
fee	fee
feeCurrency	charge fee currency
stop	stop type, include entry and loss
liquidity	include taker and maker
forceTaker	forced to become taker, include true and false
createdAt	create time
tradeType	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading).
Data time range The system allows you to retrieve data up to one week (start from the last day by default). If the time period of the queried data exceeds one week (time range from the start time to end time exceeded 7*24 hours), the system will prompt to remind you that you have exceeded the time limit. If you only specified the start time, the system will automatically calculate the end time (end time = start time + 7 * 24 hours). On the contrary, if you only specified the end time, the system will calculate the start time (start time= end time - 7 * 24 hours) the same way.

TIP
The total number of items retrieved cannot exceed 50,000. If it is exceeded, please shorten the query time range.

Settlement

The settlement contains two parts:

Transactional settlement
Fee settlement After an order is matched, the transactional and fee settlement data will be updated in the data store. Once the data is updated, the system would enable the settlement process and will deduct the fees from your pre-frozen assets. After that, the currency will be transferred to the account of the user.
Fees

Orders on KuCoin platform are classified into two types， taker and maker. A taker order matches other resting orders on the exchange order book, and gets executed immediately after order entry. A maker order, on the contrary, stays on the exchange order book and awaits to be matched. Taker orders will be charged taker fees, while maker orders will receive maker rebates. Please note that market orders, iceberg orders and hidden orders are always charged taker fees.

The system will pre-freeze a predicted taker fee when you place an order.The liquidity field indicates if the fill was charged taker or maker fees.

With the leading matching engine system in the market, users placing orders on KuCoin platform are classified into two types: taker and maker. Takers, as the taker in the market, would be charged with taker fees; while makers as the maker in the market, would be charged with less fees than the taker, or even get maker fees from KuCoin （The exchange platform would compensate the transaction fees for you）.

After placing orders on the KuCoin platform, to ensure the execution of these orders, the system would pre-freeze your assets based on the taker fee charges (because the system could not predict the order types you may choose). Please be noted that the system would deduct the fees from the orders entered the orderbook in advance.

If your order is market order, the system would charge taker fees from you.

If your order is limit order and is immediately matched and executed, the system would charge taker fees from you. On the contrary, if the order or part or your order is not executed immediately and enters into the order book, the system would charge maker fees from you if it is executed before being cancelled

After the order is executed and when the left order funds is 0, the transaction is completed. If the remaining funds is not sufficient to support the minimum product (min.: 0.00000001), then the left part in the order would be cancelled.

If your order is a maker order, the system would return the left pre-frozen taker fees to you.

Notice:

For a hidden/iceberg order, if it is not executed immediately and becomes a maker order, the system would still charge taker fees from you.
Post Only order will charge you maker fees. If a post only order would get executed immediately against the existing orders (except iceberg and hidden orders) in the market, the order will be cancelled. If the post only order will execute against an iceberg/hidden order immediately, you will get the maker fees.
For example:

Take BTC/USDT as the trading pair, if you plan to buy 1 BTC in market price, suppose the fee charge is 0.1% and the data on the order book is as follows:

Price（USDT）	Size（BTC）	Side
4200.00	0.18412309	sell
4015.60	0.56849308	sell
4011.32	0.24738383	sell
3995.64	0.84738383	buy
3988.60	0.20484000	buy
3983.85	1.37584908	buy
When you placed a buy order in market price, the order would be executed immediately. The transaction detail is as follows:

Price（USDT）	Size（BTC）	Fee（BTC）
4011.32	0.24738383	0.00024738
4015.60	0.56849308	0.00056849
4200.00	0.18312409	0.00018312

Get Recent Filled List

Request via this endpoint to get a list of 1000 fills in the last 24 hours. The return value is the data after Pagination, sorted in descending order according to time.

HTTP REQUEST

GET /api/v1/limit/fills

Example

GET /api/v1/limit/fills

{
  "code": "200000",
  "data": [
    {
      "counterOrderId": "5db7ee769797cf0008e3beea",
      "createdAt": 1572335233000,
      "fee": "0.946357371456",
      "feeCurrency": "USDT",
      "feeRate": "0.001",
      "forceTaker": true,
      "funds": "946.357371456",
      "liquidity": "taker",
      "orderId": "5db7ee805d53620008dce1ba",
      "price": "9466.8",
      "side": "buy",
      "size": "0.09996592",
      "stop": "",
      "symbol": "BTC-USDT",
      "tradeId": "5db7ee8054c05c0008069e21",
      "tradeType": "MARGIN_TRADE",
      "type": "market"
    },
    {
      "counterOrderId": "5db7ee4b5d53620008dcde8e",
      "createdAt": 1572335207000,
      "fee": "0.94625",
      "feeCurrency": "USDT",
      "feeRate": "0.001",
      "forceTaker": true,
      "funds": "946.25",
      "liquidity": "taker",
      "orderId": "5db7ee675d53620008dce01e",
      "price": "9462.5",
      "side": "sell",
      "size": "0.1",
      "stop": "",
      "symbol": "BTC-USDT",
      "tradeId": "5db7ee6754c05c0008069e03",
      "tradeType": "MARGIN_TRADE",
      "type": "market"
    },
    {
      "counterOrderId": "5db69aa4688933000aab8114",
      "createdAt": 1572248229000,
      "fee": "1.882148318525",
      "feeCurrency": "USDT",
      "feeRate": "0.001",
      "forceTaker": false,
      "funds": "1882.148318525",
      "liquidity": "maker",
      "orderId": "5db69a9c4e6d020008f03275",
      "price": "9354.5",
      "side": "sell",
      "size": "0.20120245",
      "stop": "",
      "symbol": "BTC-USDT",
      "tradeId": "5db69aa477d8de0008c1efac",
      "tradeType": "MARGIN_TRADE",
      "type": "limit"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：20

RESPONSES

Param	Description
symbol	symbol
tradeId	trade id, it is generated by Matching engine.
orderId	Order ID, unique identifier of an order.
counterOrderId	counter order id.
side	transaction direction,include buy and sell.
price	order price
size	order quantity
funds	order funds
type	order type,e.g. limit,market,stop_limit.
fee	fee
feeCurrency	charge fee currency
stop	stop type, include entry and loss
liquidity	include taker and maker
forceTaker	forced to become taker, include true and false
createdAt	create time
tradeType	The type of trading : TRADE（Spot Trading）, MARGIN_TRADE (Margin Trading).

Stop Order

Introduction

A stop order is an order to buy or sell the specified amount of cryptos at the last traded price or pre-specified limit price once the order has traded at or through a pre-specified stopPrice. The order will be executed by the highest price first. For orders of the same price, the order will be executed in time priority.

stop: 'loss': Triggers when the last trade price changes to a value at or below the stopPrice.

stop: 'entry': Triggers when the last trade price changes to a value at or above the stopPrice.

The last trade can be found in the latest Match Execution Data. Note that not all match messages may be received due to dropped messages.

The last trade price is the last price at which an order was filled. This price can be found in the latest match message. Note that not all match messages may be received due to dropped messages.

Note that when triggered, stop orders execute as either market or limit orders, depending on the type.

When placing a stop loss order, the system will not pre-freeze the assets in your account for the order. When you are going to place a stop market order, we recommend you to specify the funds for the order when trading.

Place Order

Do not include extra spaces in JSON strings in request body.

Limitation

The maximum untriggered stop orders for a single trading pair in one account is 20.

HTTP REQUEST

POST /api/v1/stop-order

Example

POST /api/v1/stop-order

{
  "orderId": "vs8hoo8kpkmklv4m0038lql0"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Public order placement request parameters

Param	Type	Mandatory	Description
clientOid	String	Yes	Client Order Id，unique identifier created by the user, the use of UUID is recommended, e.g. UUID, with a maximum length of 128 bits.
side	String	Yes	buy or sell
symbol	String	Yes	symbol, such as, ETH-BTC
type	String	No	Order type limit and market, The default is limit
remark	String	No	Order placement remarks, length cannot exceed 100 characters (UTF-8)
stop	String	No	Either loss or entry, the default is loss. Requires stopPrice to be defined.
stopPrice	String	Yes	trigger price.
stp	String	No	self trade prevention is divided into four strategies: CN, CO, CB , and DC, When type is limit (limit order), DC strategy is not supported
tradeType	String	No	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin). Default is TRADE
Additional Request Parameters Required by limit Orders

Param	Type	Mandatory	Description
price	String	Yes	Specify price for currency
size	String	Yes	Specify quantity for currency
timeInForce	String	No	Order timing strategy GTC, GTT, IOC, FOK (The default is GTC)
cancelAfter	long	No	Cancel after n seconds，the order timing strategy is GTT
postOnly	boolean	No	passive order labels, this is disabled when the order timing strategy is IOC or FOK
hidden	boolean	No	Hidden or not (not shown in order book)
iceberg	boolean	No	Whether or not only visible portions of orders are shown in iceberg orders
visibleSize	String	No	Maximum visible quantity in iceberg orders
Additional request parameters required by market orders

Param	Type	Mandatory	Description
size	String	No	(Select one out of two: size or funds)
funds	String	No	(Select one out of two: size or funds)
When placing a market order, the size or funds must be set.
RESPONSES

Param	Description
orderId	An order Id is returned once an order is successfully placed.

Cancel Order by orderId

Request via this endpoint to cancel a single stop order previously placed.

You will receive cancelledOrderIds field once the system has received the cancellation request. The cancellation request will be processed by the matching engine in sequence. To know if the request is processed (successfully or not), you may check the order status or the update message from the pushes.

HTTP REQUEST

DELETE /api/v1/stop-order/{orderId}

Example

DELETE /api/v1/stop-order/5bd6e9286d99522a52e458de

{
  "cancelledOrderIds": ["611477889281bc0006d68aea"]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
RESPONSES

Param	Description
cancelledOrderIds	Unique ID of the cancelled order
The orderId is the server-assigned order id and not the passed clientOid.

CANCEL REJECT

If the order could not be canceled (already filled or previously canceled, etc), then an error response will indicate the reason in the message field.

Cancel Order by clientOid

Request via this interface to cancel a stop order via the clientOid.

HTTP REQUEST

DELETE /api/v1/stop-order/cancelOrderByClientOid

Example

DELETE /api/v1/stop-order/cancelOrderByClientOid?symbol=BTC-USDT&clientOid=9823jnfda923a

{
  "cancelledOrderId": "vs8hoo8ksc8mario0035a74n",
  "clientOid": "689ff597f4414061aa819cc414836abd"
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：5

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders
symbol	String	No	symbol
RESPONSES

Param	Description
cancelledOrderId	Unique ID of the cancelled order
clientOid	Unique order id created by users to identify their orders

Cancel Stop Orders

Request via this interface to cancel a batch of stop orders.

HTTP REQUEST

DELETE /api/v1/stop-order/cancel

Example

DELETE /api/v1/stop-order/cancel?symbol=ETH-BTC&tradeType=TRADE&orderIds=5bd6e9286d99522a52e458de,5bd6e9286d99522a52e458df

{
  "cancelledOrderIds": [
    "vs8hoo8m4751f5np0032t7gk",
    "vs8hoo8m4758qjjp0037mslk",
    "vs8hoo8prp98qjjp0037q9gb",
    "vs8hoo8prp91f5np00330k6p"
  ]
}
API KEY PERMISSIONS

This endpoint requires the Spot Trading or Margin Trading permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	No	Cancel the open order for the specified symbol
tradeType	String	No	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin). Default is TRADE
orderIds	String	No	Comma seperated order IDs.
RESPONSES

Param	Description
cancelledOrderIds	Unique ID of the cancelled order

Get Stop Orders List

Request via this endpoint to get your current untriggered stop order list. Items are paginated and sorted to show the latest first. See the Pagination section for retrieving additional entries after the first page.

HTTP REQUEST

GET /api/v1/stop-order

Example

GET /api/v1/stop-order

{
  "currentPage": 1,
  "pageSize": 50,
  "totalNum": 1,
  "totalPage": 1,
  "items": [
    {
      "id": "vs8hoo8kqjnklv4m0038lrfq",
      "symbol": "KCS-USDT",
      "userId": "60fe4956c43cbc0006562c2c",
      "status": "NEW",
      "type": "limit",
      "side": "buy",
      "price": "0.01000000000000000000",
      "size": "0.01000000000000000000",
      "funds": null,
      "stp": null,
      "timeInForce": "GTC",
      "cancelAfter": -1,
      "postOnly": false,
      "hidden": false,
      "iceberg": false,
      "visibleSize": null,
      "channel": "API",
      "clientOid": "404814a0fb4311eb9098acde48001122",
      "remark": null,
      "tags": null,
      "orderTime": 1628755183702150167,
      "domainId": "kucoin",
      "tradeSource": "USER",
      "tradeType": "TRADE",
      "feeCurrency": "USDT",
      "takerFeeRate": "0.00200000000000000000",
      "makerFeeRate": "0.00200000000000000000",
      "createdAt": 1628755183704,
      "stop": "loss",
      "stopTriggerTime": null,
      "stopPrice": "10.00000000000000000000"
    }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：8

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	No	Only list orders for a specific symbol.
side	String	No	buy or sell
type	String	No	limit, market, limit_stop or market_stop
tradeType	String	No	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin). Default is TRADE
startAt	long	No	Start time (milisecond)
endAt	long	No	End time (milisecond)
currentPage	Int	No	current page
orderIds	String	No	comma seperated order ID list
pageSize	Int	No	page size
stop	Int	No	Order type: stop: stop loss order, oco: oco order
RESPONSES

Param	Description
id	Order ID, the ID of an order.
symbol	Symbol
userId	User ID
status	Order status, include NEW, TRIGGERED
type	Order type
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
stp	self trade prevention
timeInForce	time InForce,include GTC,GTT,IOC,FOK
cancelAfter	cancel orders after n seconds，requires timeInForce to be GTT
postOnly	postOnly
hidden	hidden order
iceberg	Iceberg order
visibleSize	displayed quantity for iceberg order
channel	order source
clientOid	user-entered order unique mark
remark	Remarks
tags	tag order source
orderTime	Time of place a stop order, accurate to nanoseconds
domainId	domainId, e.g: kucoin
tradeSource	trade source: USER（Order by user）, MARGIN_SYSTEM（Order by margin system）
tradeType	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin).
feeCurrency	The currency of the fee
takerFeeRate	Fee Rate of taker
makerFeeRate	Fee Rate of maker
createdAt	order creation time
stop	Stop order type, include loss and entry
stopTriggerTime	The trigger time of the stop order
stopPrice	stop price

Get Order Details by orderId

Request via this interface to get a stop order information via the order ID.

HTTP REQUEST

GET /api/v1/stop-order/{orderId}

Example

GET /api/v1/stop-order/5c35c02703aa673ceec2a168

{
  "id": "vs8hoo8q2ceshiue003b67c0",
  "symbol": "KCS-USDT",
  "userId": "60fe4956c43cbc0006562c2c",
  "status": "NEW",
  "type": "limit",
  "side": "buy",
  "price": "0.01000000000000000000",
  "size": "0.01000000000000000000",
  "funds": null,
  "stp": null,
  "timeInForce": "GTC",
  "cancelAfter": -1,
  "postOnly": false,
  "hidden": false,
  "iceberg": false,
  "visibleSize": null,
  "channel": "API",
  "clientOid": "40e0eb9efe6311eb8e58acde48001122",
  "remark": null,
  "tags": null,
  "orderTime": 1629098781127530345,
  "domainId": "kucoin",
  "tradeSource": "USER",
  "tradeType": "TRADE",
  "feeCurrency": "USDT",
  "takerFeeRate": "0.00200000000000000000",
  "makerFeeRate": "0.00200000000000000000",
  "createdAt": 1629098781128,
  "stop": "loss",
  "stopTriggerTime": null,
  "stopPrice": "10.00000000000000000000"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order ID
RESPONSES

Param	Description
id	Order ID, the ID of an order.
symbol	Symbol
userId	User ID
status	Order status, include NEW, TRIGGERED
type	Order type
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
stp	self trade prevention
timeInForce	time InForce,include GTC,GTT,IOC,FOK
cancelAfter	cancel orders after n seconds，requires timeInForce to be GTT
postOnly	postOnly
hidden	hidden order
iceberg	Iceberg order
visibleSize	displayed quantity for iceberg order
channel	order source
clientOid	user-entered order unique mark
remark	Remarks
tags	tag order source
orderTime	Time of place a stop order, accurate to nanoseconds
domainId	domainId, e.g: kucoin
tradeSource	trade source: USER（Order by user）, MARGIN_SYSTEM（Order by margin system）
tradeType	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin).
feeCurrency	The currency of the fee
takerFeeRate	Fee Rate of taker
makerFeeRate	Fee Rate of maker
createdAt	order creation time
stop	Stop order type, include loss and entry
stopTriggerTime	The trigger time of the stop order
stopPrice	stop price

Get Order Details by clientOid

Request via this interface to get a stop order information via the clientOid.

HTTP REQUEST

GET /api/v1/stop-order/queryOrderByClientOid

Example

GET /api/v1/stop-order/queryOrderByClientOid?symbol=BTC-USDT&clientOid=9823jnfda923a

[
  {
    "id": "vs8hoo8os561f5np0032vngj",
    "symbol": "KCS-USDT",
    "userId": "60fe4956c43cbc0006562c2c",
    "status": "NEW",
    "type": "limit",
    "side": "buy",
    "price": "0.01000000000000000000",
    "size": "0.01000000000000000000",
    "funds": null,
    "stp": null,
    "timeInForce": "GTC",
    "cancelAfter": -1,
    "postOnly": false,
    "hidden": false,
    "iceberg": false,
    "visibleSize": null,
    "channel": "API",
    "clientOid": "2b700942b5db41cebe578cff48960e09",
    "remark": null,
    "tags": null,
    "orderTime": 1629020492834532568,
    "domainId": "kucoin",
    "tradeSource": "USER",
    "tradeType": "TRADE",
    "feeCurrency": "USDT",
    "takerFeeRate": "0.00200000000000000000",
    "makerFeeRate": "0.00200000000000000000",
    "createdAt": 1629020492837,
    "stop": "loss",
    "stopTriggerTime": null,
    "stopPrice": "1.00000000000000000000"
  }
]
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support Spot URL

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Unique order id created by users to identify their orders
symbol	String	No	Only list orders for a specific symbol.
RESPONSES

Param	Description
id	Order ID, the ID of an order.
symbol	Symbol
userId	User ID
status	Order status, include NEW, TRIGGERED
type	Order type
side	transaction direction,include buy and sell
price	order price
size	order quantity
funds	order funds
stp	self trade prevention
timeInForce	time InForce,include GTC,GTT,IOC,FOK
cancelAfter	cancel orders after n seconds，requires timeInForce to be GTT
postOnly	postOnly
hidden	hidden order
iceberg	Iceberg order
visibleSize	displayed quantity for iceberg order
channel	order source
clientOid	user-entered order unique mark
remark	Remarks
tags	tag order source
orderTime	Time of place a stop order, accurate to nanoseconds
domainId	domainId, e.g: kucoin
tradeSource	trade source: USER（Order by user）, MARGIN_SYSTEM（Order by margin system）
tradeType	The type of trading : TRADE（Spot）, MARGIN_TRADE (Cross Margin), MARGIN_ISOLATED_TRADE (Isolated Margin).
feeCurrency	The currency of the fee
takerFeeRate	Fee Rate of taker
makerFeeRate	Fee Rate of maker
createdAt	order creation time
stop	Stop order type, include loss and entry
stopTriggerTime	The trigger time of the stop order
stopPrice	stop price

OCO Order

Place Order

Do not include extra spaces in JSON strings in request body.

Limitation

The maximum untriggered stop orders for a single trading pair in one account is 20.

HTTP REQUEST

POST /api/v3/oco/order

Example

POST /api/v3/oco/order

{
    "orderId": "6572fdd65723280007deb5e0"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
symbol	String	Yes	symbol, such as, ETH-BTC
side	String	Yes	buy or sell
price	String	Yes	Specify price for currency
size	String	Yes	Specify quantity for currency
stopPrice	String	Yes	trigger price.
limitPrice	String	Yes	The limit order price after take-profit and stop-loss are triggered.
tradeType	String	No	Transaction Type, currently only supports TRADE (spot transactions), the default is TRADE
clientOid	String	Yes	Client Order Id，unique identifier created by the user, the use of UUID is recommended, e.g. UUID, with a maximum length of 128 bits.
remark	String	No	Order placement remarks, length cannot exceed 100 characters (UTF-8)
RESPONSES

Param	Description
orderId	An order Id is returned once an order is successfully placed.

Cancel Order by orderId

Request via this endpoint to cancel a single oco order previously placed.

You will receive cancelledOrderIds field once the system has received the cancellation request. The cancellation request will be processed by the matching engine in sequence. To know if the request is processed (successfully or not), you may check the order status or the update message from the pushes.

HTTP REQUEST

DELETE /api/v3/oco/order/{orderId}

Example

DELETE /api/v3/oco/order/5bd6e9286d99522a52e458de

{
    "cancelledOrderIds": [
        "vs9hqpbivnbpkfdj003ql1kj",
        "vs9hqpbivnbpkfdj003ql1kk"
    ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
RESPONSES

Param	Description
cancelledOrderIds	List of two order IDs related to the canceled OCO order
The orderId is the server-assigned order id and not the passed clientOid.

CANCEL REJECT

If the order could not be canceled (already filled or previously canceled, etc), then an error response will indicate the reason in the message field.

Cancel Order by clientOid

Request via this interface to cancel a stop order via the clientOid.

HTTP REQUEST

DELETE /api/v3/oco/client-order/{clientOid}

Example

DELETE /api/v3/oco/client-order/9823jnfda923a

{
    "cancelledOrderIds": [
        "vs9hqpbivnb5e8p8003ttdf1",
        "vs9hqpbivnb5e8p8003ttdf2"
    ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Path parameter，Unique order id created by users to identify their orders
RESPONSES

Param	Description
cancelledOrderId	List of two order IDs related to the canceled OCO order

Cancel Multiple Orders

This interface can batch cancel OCO orders through orderIds.

HTTP REQUEST

DELETE /api/v3/oco/orders

Example

DELETE /api/v3/oco/orders?symbol=FRM-USDT&orderIds=6572fdd7ed87a6000767c8cc,6572fdd65723280007deb5e0

{
  "cancelledOrderIds": [
      "vs9hqpbivcq5dcu2003o19ta",
      "vs9hqpbivcq5dcu2003o19tb",
      "vs9hqpbive99kfdj003ql1j2",
      "vs9hqpbive99kfdj003ql1j3"
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：3

PARAMETERS

Param	Type	Mandatory	Description
orderIds	String	No	Specify the order number, there can be multiple orders, separated by commas. If not passed, all oco orders will be canceled by default.
symbol	String	No	trading pair. If not passed, the oco orders of all symbols will be canceled by default.
RESPONSES

Param	Description
cancelledOrderIds	Canceled order id list

Get Order Info by orderId

Request via this interface to get a oco order information via the order ID.

HTTP REQUEST

GET /api/v3/oco/order/{orderId}

Example

GET /api/v3/oco/order/5c35c02703aa673ceec2a168

{
  "orderId": "6572fdd65723280007deb5e0",
  "symbol": "FRM-USDT",
  "clientOid": "9a05f706a39eff673045b89foco1",
  "orderTime": 1702034902724,
  "status": "NEW"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
RESPONSES

Param	Description
orderId	order id，Unique order id created by users to identify their orders
symbol	symbol, such as, ETH-BTC
clientOid	client order id
orderTime	Order placement time, milliseconds
status	Order status: NEW: New, DONE: Completed, TRIGGERED: Triggered, CANCELLED: Cancelled

Get Order Details by orderId

Request via this interface to get a oco order detail via the order ID.

HTTP REQUEST

GET /api/v3/oco/order/details/{orderId}

Example

GET /api/v3/oco/order/details/6572fdd65723280007deb5e0

{
    "orderId": "6572fdd65723280007deb5e0",
    "symbol": "FRM-USDT",
    "clientOid": "9a05f706a39eff673045b89foco1",
    "orderTime": 1702034902724,
    "status": "NEW",
    "orders": [
        {
            "id": "vs9hqpbivnb5e8p8003ttdf1",
            "symbol": "FRM-USDT",
            "side": "sell",
            "price": "1.00000000000000000000",
            "stopPrice": "1.00000000000000000000",
            "size": "25.00000000000000000000",
            "status": "NEW"
        },
        {
            "id": "vs9hqpbivnb5e8p8003ttdf2",
            "symbol": "FRM-USDT",
            "side": "sell",
            "price": "3.00000000000000000000",
            "stopPrice": "0.06000000000000000000",
            "size": "25.00000000000000000000",
            "status": "NEW"
        }
    ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
orderId	String	Yes	Path parameter, Order Id unique identifier
RESPONSES

Param	Description
orderId	order id，Unique order id created by users to identify their orders
symbol	symbol, such as, ETH-BTC
clientOid	client order id
orderTime	Order placement time, milliseconds
status	Order status: NEW: New, DONE: Completed, TRIGGERED: Triggered, CANCELLED: Cancelled
orders	Sub-order information

Get Order Info by clientOid

Request via this interface to get a oco order information via the client order ID.

HTTP REQUEST

GET /api/v3/oco/client-order/{clientOid}

Example

GET /api/v3/oco/client-order/9a05f706a39eff673045b89foco1

{
  "orderId": "6572fdd65723280007deb5e0",
  "symbol": "FRM-USDT",
  "clientOid": "9a05f706a39eff673045b89foco1",
  "orderTime": 1702034902724,
  "status": "NEW"
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
clientOid	String	Yes	Path parameter，Unique order id created by users to identify their orders
RESPONSES

Param	Description
orderId	order id，Unique order id created by users to identify their orders
symbol	symbol, such as, ETH-BTC
clientOid	client order id
orderTime	Order placement time, milliseconds
status	Order status: NEW: New, DONE: Completed, TRIGGERED: Triggered, CANCELLED: Cancelled

Get Order List

Request via this endpoint to get your current OCO order list. Items are paginated and sorted to show the latest first. See the Pagination section for retrieving additional entries after the first page.

HTTP REQUEST

GET /api/v3/oco/orders

Example

GET /api/v3/oco/orders?symbol=FRM-USDT&startAt=1701719853540&endAt=1702035882916&pageSize=10&currentPage=1&orderIds=6572fdd65723280007deb5e0,6572fbbea24eca0007c8aaa9

{
  "currentPage": 1,
  "pageSize": 10,
  "totalNum": 4,
  "totalPage": 1,
  "items": [
      {
          "orderId": "6572fdd65723280007deb5e0",
          "symbol": "FRM-USDT",
          "clientOid": "9a05f706a39eff673045b89foco1",
          "orderTime": 1702034902724,
          "status": "NEW"
      },
      {
          "orderId": "6572fbbea24eca0007c8aaa9",
          "symbol": "FRM-USDT",
          "clientOid": "afe2d9deeba49f5ffee1792aoco1",
          "orderTime": 1702034366305,
          "status": "NEW"
      }
  ]
}
API KEY PERMISSIONS

This endpoint requires the General permission.

REQUEST URL

This endpoint support `Spot URL``

REQUEST RATE LIMIT

Spot weight：2

PARAMETERS

Param	Type	Mandatory	Description
pageSize	String	Yes	Size per page, minimum value 10, maximum value 500
currentPage	String	Yes	Page number, minimum value 1
symbol	String	No	Only order information for the specified Symbol is returned
startAt	long	No	Start time (milliseconds)
endAt	long	No	End time (milliseconds)
orderIds	String	No	Specify orderId collection, up to 500 orders
RESPONSES

Param	Description
orderId	order id，Unique order id created by users to identify their orders
symbol	symbol, such as, ETH-BTC
clientOid	client order id
orderTime	Order placement time, milliseconds
status	Order status: NEW: New, DONE: Completed, TRIGGERED: Triggered, CANCELLED: Cancelled

Websocket

Introduction

While there is a strict access frequency control for REST API, we highly recommend that API users utilize Websocket to get the real-time data.

TIP
The recommended way is to just create a websocket connection and subscribe to multiple channels.