% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_account_and_funding.R
\name{get_account_summary_info_impl}
\alias{get_account_summary_info_impl}
\title{Retrieve Account Summary Information (Implementation)}
\usage{
get_account_summary_info_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{base_url}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\value{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{level} (integer): User's VIP level.
\item \code{subQuantity} (integer): Total number of sub-accounts.
\item \code{spotSubQuantity} (integer): Number of spot trading sub-accounts.
\item \code{marginSubQuantity} (integer): Number of margin trading sub-accounts.
\item \code{futuresSubQuantity} (integer): Number of futures trading sub-accounts.
\item \code{optionSubQuantity} (integer): Number of option trading sub-accounts.
\item \code{maxSubQuantity} (integer): Maximum allowed sub-accounts (sum of \code{maxDefaultSubQuantity} and \code{maxSpotSubQuantity}).
\item \code{maxDefaultSubQuantity} (integer): Maximum default sub-accounts based on VIP level.
\item \code{maxSpotSubQuantity} (integer): Maximum additional spot sub-accounts.
\item \code{maxMarginSubQuantity} (integer): Maximum additional margin sub-accounts.
\item \code{maxFuturesSubQuantity} (integer): Maximum additional futures sub-accounts.
\item \code{maxOptionSubQuantity} (integer): Maximum additional option sub-accounts.
}
}
\description{
Retrieves account summary information from the KuCoin API asynchronously. This internal function is designed for use within an R6 class and is not intended for direct end-user consumption. It fetches details such as VIP level, sub-account counts, and limits.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL Construction}: Combines the base URL (from \code{get_base_url()} or provided \code{base_url}) with the endpoint \verb{/api/v2/user-info}.
\item \strong{Header Preparation}: Constructs authentication headers using \code{build_headers()} with the HTTP method, endpoint, and an empty request body.
\item \strong{API Request}: Sends a GET request to the KuCoin API with a 3-second timeout via \code{httr::GET()}.
\item \strong{Response Processing}: Processes the response with \code{process_kucoin_response()} and converts the \code{"data"} field into a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/user-info}
}

\subsection{Usage}{

Utilised internally by the \code{KucoinAccountAndFunding} class to provide account summary data.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-summary-info}{KuCoin Get Account Summary Info}
}
}
\examples{
\dontrun{
keys <- get_api_keys()
base_url <- "https://api.kucoin.com"
main_async <- coro::async(function() {
  dt <- await(get_account_summary_info_impl(keys = keys, base_url = base_url))
  print(dt)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
