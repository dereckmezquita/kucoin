% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_api.R
\name{build_headers}
\alias{build_headers}
\title{Build Request Headers for KuCoin API}
\usage{
build_headers(
  method,
  endpoint,
  body,
  keys,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{method}{A character string specifying the HTTP method (e.g., "GET", "POST").}

\item{endpoint}{A character string representing the API endpoint (e.g., "/api/v1/orders").}

\item{body}{A character string containing the JSON-formatted request body; use an empty string (\code{""}) if no payload is required.}

\item{keys}{A list of API credentials and configuration parameters.}
}
\description{
Asynchronously constructs the HTTP request headers required for making authenticated requests to the KuCoin API.
These headers include your API key, an HMAC-SHA256 signature computed over a prehash string, a timestamp,
an encrypted passphrase, the API key version, and the content type. The headers ensure both the security and
integrity of API requests.
}
\details{
\subsection{Workflow Overview:}{
\enumerate{
\item \strong{Retrieve Server Time:}
Calls \code{get_server_time()} with the base URL (obtained via \code{get_base_url()}) to fetch the current
server timestamp in milliseconds.
\item \strong{Construct the Prehash String:}
Concatenates the timestamp, the uppercase HTTP method, the API endpoint, and the request body to form a string
that will be used for signing.
\item \strong{Generate the Signature:}
Computes an HMAC-SHA256 signature using your API secret and the prehash string. The raw signature is then
encoded in base64.
\item \strong{Encrypt the Passphrase:}
Signs your API passphrase with the API secret (also via HMAC-SHA256) and encodes the result in base64.
\item \strong{Assemble the Headers:}
Returns a list of headers (using \code{httr::add_headers()}) that includes:
\itemize{
\item \code{KC-API-KEY}
\item \code{KC-API-SIGN}
\item \code{KC-API-TIMESTAMP}
\item \code{KC-API-PASSPHRASE}
\item \code{KC-API-KEY-VERSION}
\item \code{Content-Type}
}
}

\strong{Parameters:}
\itemize{
\item \strong{method:} A character string specifying the HTTP method (e.g., "GET", "POST").
\item \strong{endpoint:} A character string representing the API endpoint (e.g., "/api/v1/orders").
\item \strong{body:} A character string containing the JSON-formatted request body; use an empty string (\code{""}) if no payload is required.
\item \strong{keys:} A list of API credentials and configuration parameters. It must include:
\itemize{
\item \code{api_key}: Your KuCoin API key.
\item \code{api_secret}: Your KuCoin API secret.
\item \code{api_passphrase}: Your KuCoin API passphrase.
\item \code{key_version}: The API key version (e.g., "2").
Optionally, a \code{base_url} may be provided, though this function relies on \code{get_base_url()} to determine the base URL.
}
}

\strong{Return Value:}
Returns a list of HTTP headers created using \code{httr::add_headers()}.
}
}
\examples{
```r
# Example usage for building headers for a POST request with a JSON payload.
keys <- list(
    api_key = "your_api_key",
    api_secret = "your_api_secret",
    api_passphrase = "your_api_passphrase",
    key_version = "2"
    # Optionally, base_url can be provided; however, build_headers() uses get_base_url() internally.
)

# Build headers for a POST request.
headers <- coro::await(build_headers("POST", "/api/v1/orders", '{"size": 1}', keys))
print(headers)

# Build headers for a GET request with no payload.
headers <- coro::await(build_headers("GET", "/api/v1/orders", "", keys))
print(headers)
```

}
