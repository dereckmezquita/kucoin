% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_and_funding.R
\name{get_apikey_info_impl}
\alias{get_apikey_info_impl}
\title{Get API Key Information (Implementation)}
\usage{
get_apikey_info_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{A list containing API configuration parameters, as returned by \code{get_api_keys()}. The list must include:
\itemize{
\item \code{api_key}: Your KuCoin API key.
\item \code{api_secret}: Your KuCoin API secret.
\item \code{api_passphrase}: Your KuCoin API passphrase.
\item \code{key_version}: The version of the API key (e.g., "2").
}}

\item{base_url}{A character string representing the base URL for the API. If not provided, the function uses \code{get_base_url()} to determine the base URL.}
}
\value{
A promise that resolves to a \code{data.table} containing the API key information. The resulting data table is constructed
from the \code{"data"} field of the raw API response and includes the following columns:
\itemize{
\item \strong{uid} (integer): Account UID.
\item \strong{subName} (string, optional): Sub account name (if applicable; not provided for master accounts).
\item \strong{remark} (string): Remarks associated with the API key.
\item \strong{apiKey} (string): The API key.
\item \strong{apiVersion} (integer): API version.
\item \strong{permission} (string): A comma-separated list of permissions (e.g., "General, Spot, Margin, Futures, InnerTransfer, Transfer, Earn").
\item \strong{ipWhitelist} (string, optional): IP whitelist, if applicable.
\item \strong{isMaster} (boolean): Indicates whether the API key belongs to the master account.
\item \strong{createdAt} (integer): API key creation time in milliseconds.
}
}
\description{
This asynchronous function implements the logic for retrieving API key information from the KuCoin API.
It is designed for internal use as a method in an R6 class and is \strong{not} intended for direct consumption by end-users.
The function constructs the full API URL by calling \code{get_base_url()} (or using the user-supplied \code{base_url}),
builds the authentication headers, sends the \code{GET} request to the endpoint, and processes the response,
converting the \code{"data"} field into a \code{data.table}.
}
\details{
\strong{Endpoint:} \code{GET https://api.kucoin.com/api/v1/user/api-key}

\strong{Raw Response Schema:}
\itemize{
\item \code{code} (string): Status code, where "200000" indicates success.
\item \code{data} (object): Contains API key details as described above.
}

For additional details, please refer to the \href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-apikey-info}{KuCoin API Documentation}.
}
\examples{
\dontrun{
  # Retrieve API keys from the environment using get_api_keys()
  keys <- get_api_keys()

  # Optionally, specify a base URL; if not provided, defaults to the value from get_base_url()
  base_url <- "https://api.kucoin.com"

  # Execute the asynchronous request using coro::run:
  main_async <- coro::async(function() {
    dt <- await(get_apikey_info_impl(keys, base_url))
    print(dt)
  })

  main_async()
  while(!later::loop_empty()) {
    later::run_now()
  }
}

}
