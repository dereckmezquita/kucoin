% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_and_funding.R
\name{get_isolated_margin_account_impl}
\alias{get_isolated_margin_account_impl}
\title{Get Isolated Margin Account Implementation}
\usage{
get_isolated_margin_account_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  query = list(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{A list containing API configuration parameters, as returned by \code{get_api_keys()}. The list must include:
\describe{
\item{\code{api_key}}{Your KuCoin API key.}
\item{\code{api_secret}}{Your KuCoin API secret.}
\item{\code{api_passphrase}}{Your KuCoin API passphrase.}
\item{\code{key_version}}{The version of the API key (e.g., "2").}
}}

\item{base_url}{A character string representing the base URL for the API. If not provided, \code{get_base_url()} is used.}

\item{query}{A named list of query parameters to filter the isolated margin account information. Supported parameters include:
\describe{
\item{\code{symbol}}{(string, optional) For isolated trading pairs; if omitted, queries all pairs.}
\item{\code{quoteCurrency}}{(string, optional) The quote currency. Allowed values: "USDT", "KCS", "BTC". Defaults to "USDT".}
\item{\code{queryType}}{(string, optional) The type of account query. Allowed values: "ISOLATED", "ISOLATED_V2", "ALL". Defaults to "ISOLATED".}
}}
}
\value{
A promise that resolves to a named list with two elements:
\describe{
\item{\code{summary}}{
A data.table with the following columns:
\describe{
\item{\code{totalAssetOfQuoteCurrency}}{(string) Total assets in the quote currency.}
\item{\code{totalLiabilityOfQuoteCurrency}}{(string) Total liabilities in the quote currency.}
\item{\code{timestamp}}{(integer) The raw timestamp in milliseconds.}
\item{\code{datetime}}{(POSIXct) The converted date-time value (obtained via \code{time_convert_from_kucoin("ms")}).}
}
}
\item{\code{assets}}{
A data.table where each row represents one isolated margin account asset. The flattened columns include:
\describe{
\item{\code{symbol}}{(string) Trading pair symbol (e.g., "BTC-USDT").}
\item{\code{status}}{(string) Position status.}
\item{\code{debtRatio}}{(string) Debt ratio.}
\item{\code{base_currency}}{(string) Currency code from the base asset.}
\item{\code{base_borrowEnabled}}{(boolean) Whether borrowing is enabled for the base asset.}
\item{\code{base_transferInEnabled}}{(boolean) Whether transfers into the base asset account are enabled.}
\item{\code{base_liability}}{(string) Liability for the base asset.}
\item{\code{base_total}}{(string) Total base asset amount.}
\item{\code{base_available}}{(string) Available base asset amount.}
\item{\code{base_hold}}{(string) Base asset amount on hold.}
\item{\code{base_maxBorrowSize}}{(string) Maximum borrowable base asset amount.}
\item{\code{quote_currency}}{(string) Currency code from the quote asset.}
\item{\code{quote_borrowEnabled}}{(boolean) Whether borrowing is enabled for the quote asset.}
\item{\code{quote_transferInEnabled}}{(boolean) Whether transfers into the quote asset account are enabled.}
\item{\code{quote_liability}}{(string) Liability for the quote asset.}
\item{\code{quote_total}}{(string) Total quote asset amount.}
\item{\code{quote_available}}{(string) Available quote asset amount.}
\item{\code{quote_hold}}{(string) Quote asset amount on hold.}
\item{\code{quote_maxBorrowSize}}{(string) Maximum borrowable quote asset amount.}
}
}
}
}
\description{
This asynchronous function retrieves isolated margin account information from the KuCoin API.
It sends a \code{GET} request to the \verb{/api/v3/isolated/accounts} endpoint with optional query parameters
and returns the parsed response as a named list of two flat data.tables.
}
\details{
\enumerate{
\item \strong{URL Construction:} Constructs the full API URL by calling \code{get_base_url()} (or using the supplied \code{base_url})
and appending the endpoint and query string.
\item \strong{Header Preparation:} Builds the authentication headers using the provided API keys.
\item \strong{API Request:} Sends an asynchronous GET request to the endpoint.
\item \strong{Response Processing:} Processes the API response using a helper function and then:
\itemize{
\item Extracts overall summary fields into a data.table and adds a new column \code{datetime} by converting the raw \code{timestamp} using \code{time_convert_from_kucoin("ms")}.
\item Flattens the nested \code{baseAsset} and \code{quoteAsset} objects from each asset into separate columns with prefixes.
}
}

\strong{Endpoint:} \code{GET https://api.kucoin.com/api/v3/isolated/accounts}

For further details, please refer to the \href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-isolated-margin}{KuCoin API Documentation}.
}
\examples{
\dontrun{
  keys <- get_api_keys()
  base_url <- "https://api.kucoin.com"

  query <- list(quoteCurrency = "USDT", queryType = "ISOLATED")

  main_async <- coro::async(function() {
    result <- await(get_isolated_margin_account_impl(keys, base_url, query))
    # 'result' is a list with two data.tables: summary and assets.
    print(result$summary)
    print(result$assets)
  })

  main_async()
  while (!later::loop_empty()) {
    later::run_now()
  }
}

}
