% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limit-order.R
\name{post_kucoin_limit_order}
\alias{post_kucoin_limit_order}
\title{Post a limit order}
\usage{
post_kucoin_limit_order(
  symbol,
  side,
  base_size = NULL,
  quote_size = NULL,
  price = NULL,
  timeInForce = "GTC",
  cancelAfter = NULL,
  postOnly = NULL,
  hidden = NULL,
  iceberg = NULL,
  visibleSize = NULL
)
}
\arguments{
\item{symbol}{A \code{character} vector of one or more pair symbol.}

\item{side}{A \code{character} vector of one which specify the order side: \code{"buy"} or \code{"sell"}.}

\item{base_size}{A \code{numeric} vector of one determining the base size of the order; n units of the first currency in the pair.}

\item{quote_size}{A \code{numeric} vector which specify the base or quote currency size; n units of the second currency in the pair.}

\item{price}{A \code{numeric} vector of one which specify the price of the order.}

\item{timeInForce}{A \code{character} vector of one specifying the time in force policy: \code{"GTC"} (Good Till Canceled), \code{"GTT"} (Good Till Time), \code{"IOC"} (Immediate Or Cancel), or \code{"FOK"} (Fill Or Kill).}

\item{cancelAfter}{A \code{numeric} vector of one specifying the number of seconds to wait before cancelling the order.}

\item{postOnly}{A \code{logical} vector of one specifying whether the order is post only; invalid when \code{timeInForce} is \code{"IOC"} or \code{"FOK"}.}

\item{hidden}{A \code{logical} vector of one specifying whether the order is hidden.}

\item{iceberg}{A \code{logical} vector of one specifying whether the order is iceberg.}

\item{visibleSize}{A \code{numeric} vector of one specifying the visible size of the iceberg order.}
}
\value{
If success returns a \code{character} vector of one; order id
}
\description{
Post a limit order
}
\details{
For more information see the \href{https://docs.kucoin.com/#place-a-new-order}{KuCoin API documentation - new order}.

This API is restricted for each account, the request rate limit is 45 times/3s.

Currencies are traded in pairs. The first currency is called the base currency and the second currency is called the quote currency. So for example, BTC/USDT, means that the base currency is the BTC and the quote currency is the USDT.

Time in force policies provide guarantees about the lifetime of an order. There are four policies: Good Till Canceled GTC, Good Till Time GTT, Immediate Or Cancel IOC, and Fill Or Kill FOK.

GTC Good Till Canceled orders remain open on the book until canceled. This is the default behavior if no policy is specified.

GTT Good Till Time orders remain open on the book until canceled or the allotted cancelAfter is depleted on the matching engine. GTT orders are guaranteed to cancel before any other order is processed after the cancelAfter seconds placed in order book.

IOC Immediate Or Cancel orders instantly cancel the remaining size of the limit order instead of opening it on the book.

FOK Fill Or Kill orders are rejected if the entire size cannot be matched.

Note that self trades belong to match as well. For market orders, using the “TimeInForce” parameter has no effect.

The post-only flag ensures that the trader always pays the maker fee and provides liquidity to the order book. If any part of the order is going to pay taker fee, the order will be fully rejected.

If a post only order will get executed immediately against the existing orders (except iceberg and hidden orders) in the market, the order will be cancelled.

For post only orders, it will get executed immediately against the iceberg orders and hidden orders in the market. Users placing the post only order will be charged the maker fees and the iceberg and hidden orders will be charged the taker fees.
}
\examples{

\dontrun{

# to run this example, make sure
# you already setup the API key
# in a proper .Renviron file

# import library
library("kucoin")

# post a market order: buy 1 KCS
order_id <- post_kucoin_limit_order(
    symbol = "KCS/BTC",
    side = "buy",
    base_size = 1
)

# quick check
order_id

# post a market order: sell 1 KCS
order_id <- post_kucoin_limit_order(
    symbol = "KCS/BTC",
    side = "sell",
    base_size = 1
)

# quick check
order_id

# post a market order: buy KCS worth 0.0001 BTC
order_id <- post_kucoin_limit_order(
    symbol = "KCS/BTC",
    side = "buy",
    quote_size = 0.0001
)

# quick check
order_id

# post a market order: sell KCS worth 0.0001 BTC
order_id <- post_kucoin_limit_order(
    symbol = "KCS/BTC",
    side = "sell",
    quote_size = 0.0001
)

# quick check
order_id

}

}
