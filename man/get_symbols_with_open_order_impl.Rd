% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_orders_get_x.R
\name{get_symbols_with_open_order_impl}
\alias{get_symbols_with_open_order_impl}
\title{Get Symbols With Open Order (Implementation)}
\usage{
get_symbols_with_open_order_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List; API configuration parameters from \code{get_api_keys()}. Defaults to \code{get_api_keys()}.}

\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}
}
\value{
Promise resolving to a \code{data.table} with one column:
\itemize{
\item \code{symbols} (character): Vector of trading pair symbols with active orders.
}
}
\description{
Retrieves a list of spot trading symbols with active orders from the KuCoin Spot trading system asynchronously.
This function returns a \code{data.table} containing the symbols that currently have open orders.
}
\details{
\subsection{Description}{

This endpoint queries all trading pair symbols (e.g., "BTC-USDT", "ETH-USDT") that have active orders for the authenticated account.
An active order is one that is currently in the order book and has not been fully filled or canceled.
This is useful for monitoring which markets have ongoing trading activity for the user.
}

\subsection{Workflow}{
\enumerate{
\item \strong{Request Construction}: Builds the endpoint URL with no additional parameters since none are required.
\item \strong{Authentication}: Generates private API headers using \code{build_headers()} with the GET method and endpoint.
\item \strong{API Request}: Sends a GET request to the KuCoin API with a 3-second timeout.
\item \strong{Response Processing}: Parses the response and converts the \code{symbols} array within the \code{data} object to a \code{data.table}.
}
}

\subsection{API Details}{
\itemize{
\item \strong{Endpoint}: \verb{GET https://api.kucoin.com/api/v1/hf/orders/active/symbols}
\item \strong{Domain}: Spot
\item \strong{API Channel}: Private
\item \strong{API Permission}: Spot
\item \strong{Rate Limit Pool}: Spot
\item \strong{Rate Limit Weight}: 2
\item \strong{SDK Service}: Spot
\item \strong{SDK Sub-Service}: Order
\item \strong{SDK Method Name}: getSymbolsWithOpenOrder
\item \strong{Official Documentation}: \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-symbols-with-open-order}{KuCoin Get Symbols With Open Order}
}
}

\subsection{Request}{
\subsection{Path Parameters}{
\itemize{
\item None
}
}

\subsection{Query Parameters}{
\itemize{
\item None
}
}

\subsection{Example Request}{

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{curl --location --request GET 'https://api.kucoin.com/api/v1/hf/orders/active/symbols'
}\if{html}{\out{</div>}}
}

}

\subsection{Response}{
\subsection{HTTP Code: 200}{
\itemize{
\item \strong{Content Type}: \code{application/json}
}
}

\subsection{Data Schema}{
\itemize{
\item \code{code}: String (required) - Response code ("200000" indicates success).
\item \code{data}: Object (required) - Contains the following field:
\itemize{
\item \code{symbols}: Array\link{String} (required) - List of trading pair symbols with active orders (e.g., "ETH-USDT", "BTC-USDT").
}
}
}

\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "symbols": [
      "ETH-USDT",
      "BTC-USDT"
    ]
  \}
\}
}\if{html}{\out{</div>}}
}

}
}
\examples{
\dontrun{
library(coro)
library(data.table)

main_async <- coro::async(function() {
  # Retrieve symbols with open orders
  active_symbols <- await(get_symbols_with_open_order_impl())
  print(active_symbols)
})

# Run the async function
main_async()
while (!later::loop_empty()) later::run_now()
}

# Expected Output (example):
#    symbols
# 1: ETH-USDT
# 2: BTC-USDT
}
