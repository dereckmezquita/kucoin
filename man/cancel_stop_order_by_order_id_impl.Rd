% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_orders_stop.R
\name{cancel_stop_order_by_order_id_impl}
\alias{cancel_stop_order_by_order_id_impl}
\title{Cancel Stop Order By OrderId (Implementation)}
\usage{
cancel_stop_order_by_order_id_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  orderId,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List; API configuration parameters from \code{get_api_keys()}. Defaults to \code{get_api_keys()}.}

\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{orderId}{Character string; the unique order ID to cancel (e.g., "671124f9365ccb00073debd4"). Required.}
}
\value{
Promise resolving to a \code{data.table} with one row containing:
\itemize{
\item \code{cancelledOrderIds} (character): The ID of the cancelled order.
}
}
\description{
Cancels a stop order on the KuCoin Spot trading system using its system-generated order ID (\code{orderId}) asynchronously.
This function sends a cancellation request and returns a \code{data.table} with the cancelled order's details.
Note that this endpoint only initiates cancellation; the actual status must be verified via order status checks or WebSocket subscription.
}
\details{
\subsection{Description}{

This endpoint allows users to cancel a previously placed stop order identified by its \code{orderId}, which is the unique identifier assigned by the KuCoin system upon order creation. Stop orders are conditional orders that trigger when the market price reaches a specified \code{stopPrice}. The function sends a DELETE request to the KuCoin API and returns confirmation details upon successful initiation of the cancellation. The maximum number of untriggered stop orders per trading pair is 20, and this endpoint helps manage that limit by removing specific orders.
}

\subsection{Workflow}{
\enumerate{
\item \strong{Parameter Validation}: Ensures \code{orderId} is a non-empty string.
\item \strong{Request Construction}: Builds the endpoint URL with \code{orderId} as a path parameter.
\item \strong{Authentication}: Generates private API headers using \code{build_headers()} with the DELETE method and endpoint.
\item \strong{API Request}: Sends a DELETE request to the KuCoin API with a 3-second timeout.
\item \strong{Response Processing}: Parses the response, validates success, and returns a \code{data.table} with \code{cancelledOrderIds}.
}
}

\subsection{API Details}{
\itemize{
\item \strong{Endpoint}: \verb{DELETE https://api.kucoin.com/api/v1/stop-order/\{orderId\}}
\item \strong{Domain}: Spot
\item \strong{API Channel}: Private
\item \strong{API Permission}: Spot
\item \strong{Rate Limit Pool}: Spot
\item \strong{Rate Limit Weight}: 3
\item \strong{SDK Service}: Spot
\item \strong{SDK Sub-Service}: Order
\item \strong{SDK Method Name}: cancelStopOrderByOrderId
\item \strong{Official Documentation}: \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-stop-order-by-orderld}{KuCoin Cancel Stop Order By OrderId}
}
}

\subsection{Request}{
\subsection{Path Parameters}{
\itemize{
\item \code{orderId}: String (required) - The unique order ID generated by the trading system (e.g., "671124f9365ccb00073debd4").
}
}

\subsection{Example Request}{

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{curl --location --request DELETE 'https://api.kucoin.com/api/v1/stop-order/671124f9365ccb00073debd4'
}\if{html}{\out{</div>}}
}

}

\subsection{Response}{
\subsection{HTTP Code: 200}{
\itemize{
\item \strong{Content Type}: \code{application/json}
}
}

\subsection{Data Schema}{
\itemize{
\item \code{code}: String (required) - Response code ("200000" indicates success).
\item \code{data}: Object (required) - Contains:
\itemize{
\item \code{cancelledOrderIds}: Array\link{String} (required) - Array of order IDs that were cancelled (typically a single ID for this endpoint).
}
}
}

\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "cancelledOrderIds": [
      "671124f9365ccb00073debd4"
    ]
  \}
\}
}\if{html}{\out{</div>}}
}

}
}
\examples{
\dontrun{
library(coro)
library(data.table)

main_async <- coro::async(function() {
  # Cancel a stop order by orderId
  cancellation <- await(cancel_stop_order_by_order_id_impl(
    orderId = "671124f9365ccb00073debd4"
  ))
  print(cancellation)
})

# Run the async function
main_async()
while (!later::loop_empty()) later::run_now()

# Expected Output:
#    cancelledOrderIds
# 1: 671124f9365ccb00073debd4
}
}
