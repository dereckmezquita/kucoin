% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_market_data.R
\name{get_currency_impl}
\alias{get_currency_impl}
\title{Get Currency Details (Implementation)}
\usage{
get_currency_impl(
  base_url = get_base_url(),
  currency,
  chain = NULL,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{currency}{Character string; currency code (e.g., \code{"BTC"}, \code{"USDT"}).}

\item{chain}{Character string (optional); specific chain for multi-chain currencies (e.g., \code{"ERC20"}, \code{"TRC20"}).}
}
\value{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{currency} (character): Unique currency code.
\item \code{name} (character): Short name of the currency.
\item \code{fullName} (character): Full name of the currency.
\item \code{precision} (integer): Decimal places for the currency.
\item \code{confirms} (integer or NULL): Block confirmations required.
\item \code{contractAddress} (character or NULL): Contract address for tokenized currencies.
\item \code{isMarginEnabled} (logical): Margin trading enabled status.
\item \code{isDebitEnabled} (logical): Debit enabled status.
\item Chain-specific fields (e.g., \code{chainName}, \code{withdrawalMinSize}) from the \code{chains} list.
}
}
\description{
Retrieves detailed information for a specified currency from the KuCoin API asynchronously, including chain-specific details for multi-chain currencies.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query Construction}: Builds a query string with the optional \code{chain} parameter using \code{build_query()}.
\item \strong{URL Assembly}: Combines \code{base_url}, \verb{/api/v3/currencies/}, the \code{currency} code, and the query string.
\item \strong{HTTP Request}: Sends a GET request with a 10-second timeout via \code{httr::GET()}.
\item \strong{Response Processing}: Validates the response with \code{process_kucoin_response()} and extracts the \code{"data"} field.
\item \strong{Data Conversion}: Splits \code{"data"} into summary fields and \code{chains} data, combining them into a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/currencies/\{currency\}}
}

\subsection{Usage}{

Utilised to obtain metadata (e.g., precision, chain support) for a specific currency on KuCoin.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/market-data/get-currency}{KuCoin Get Currency}
}
}
\examples{
\dontrun{
main_async <- coro::async(function() {
  # Bitcoin details
  btc <- await(get_currency_impl(currency = "BTC"))
  print(btc)
  # USDT on ERC20 chain
  usdt_erc20 <- await(get_currency_impl(currency = "USDT", chain = "ERC20"))
  print(usdt_erc20)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
