% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_sub_account.R
\name{get_subaccount_detail_balance_impl}
\alias{get_subaccount_detail_balance_impl}
\title{Retrieve Sub-Account Balance Details (Implementation)}
\usage{
get_subaccount_detail_balance_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  subUserId,
  includeBaseAmount = FALSE,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{base_url}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}

\item{subUserId}{Character string representing the sub-account user ID for which balance details are retrieved.}

\item{includeBaseAmount}{Logical flag indicating whether to include currencies with a zero balance in the response. Defaults to \code{FALSE}.}
}
\value{
Promise resolving to a \code{data.table} containing detailed balance information for the specified sub-account, with columns including:
\itemize{
\item \code{subUserId} (character): Sub-account user ID.
\item \code{subName} (character): Sub-account name.
\item \code{currency} (character): Currency code.
\item \code{balance} (numeric): Total balance.
\item \code{available} (numeric): Amount available for trading or withdrawal.
\item \code{holds} (numeric): Amount locked or held.
\item \code{baseCurrency} (character): Base currency code.
\item \code{baseCurrencyPrice} (numeric): Price of the base currency.
\item \code{baseAmount} (numeric): Amount in the base currency.
\item \code{tag} (character): Tag associated with the account.
\item \code{accountType} (character): Source account type (e.g., \code{"mainAccounts"}, \code{"tradeAccounts"}, \code{"marginAccounts"}, \code{"tradeHFAccounts"}).
}
}
\description{
Retrieves balance details for a specific sub-account from KuCoin asynchronously, aggregating account types into a single \code{data.table}. This internal function is designed for use within an R6 class and is not intended for direct end-user consumption.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL and Query String Construction}: Constructs the endpoint URL by appending \code{subUserId} to \verb{/api/v1/sub-accounts/} and adding the \code{includeBaseAmount} query parameter (defaulting to \code{FALSE}).
\item \strong{Header Generation}: Generates authentication headers asynchronously via \code{build_headers()}.
\item \strong{HTTP Request}: Sends a GET request to the constructed URL with a 3-second timeout using \code{httr::GET()}.
\item \strong{Response Processing}: Parses the JSON response with \code{process_kucoin_response()}, converting each non-empty account type array (\code{mainAccounts}, \code{tradeAccounts}, \code{marginAccounts}, \code{tradeHFAccounts}) into a \code{data.table} with an added \code{accountType} column.
\item \strong{Aggregation and Metadata Addition}: Aggregates all non-empty \code{data.table}s into a single \code{data.table} using \code{data.table::rbindlist()}, appending \code{subUserId} and \code{subName} to each row.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/sub-accounts/\{subUserId\}?includeBaseAmount=\{includeBaseAmount\}}
}

\subsection{Usage}{

Utilised internally to provide detailed balance information across various account categories for a specified sub-account.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-detail-balance}{KuCoin Get Sub-Account Detail Balance}

\strong{Raw Response Schema}:
\itemize{
\item \code{code} (string): Status code, where \code{"200000"} indicates success.
\item \code{data} (object): Contains \code{subUserId}, \code{subName}, and arrays for \code{mainAccounts}, \code{tradeAccounts}, \code{marginAccounts}, and \code{tradeHFAccounts}.
}

KuCoin's API docs list this as the return data schema:

\if{html}{\out{<div class="sourceCode">}}\preformatted{\{
    "code": "200000",
    "data": \{
        "subUserId": "63743f07e0c5230001761d08",
        "subName": "testapi6",
        "mainAccounts": [
            \{
                "currency": "USDT",
                "balance": "0.01",
                "available": "0.01",
                "holds": "0",
                "baseCurrency": "BTC",
                "baseCurrencyPrice": "62384.3",
                "baseAmount": "0.00000016",
                "tag": "DEFAULT"
            \}
        ],
        "tradeAccounts": [
            \{
                "currency": "USDT",
                "balance": "0.01",
                "available": "0.01",
                "holds": "0",
                "baseCurrency": "BTC",
                "baseCurrencyPrice": "62384.3",
                "baseAmount": "0.00000016",
                "tag": "DEFAULT"
            \}
        ],
        "marginAccounts": [
            \{
                "currency": "USDT",
                "balance": "0.01",
                "available": "0.01",
                "holds": "0",
                "baseCurrency": "BTC",
                "baseCurrencyPrice": "62384.3",
                "baseAmount": "0.00000016",
                "tag": "DEFAULT"
            \}
        ],
        "tradeHFAccounts": []
    \}
\}
}\if{html}{\out{</div>}}
}
}
\examples{
\dontrun{
keys <- get_api_keys()
base_url <- "https://api.kucoin.com"
subUserId <- "63743f07e0c5230001761d08"
main_async <- coro::async(function() {
  dt <- await(get_subaccount_detail_balance_impl(
    keys = keys,
    base_url = base_url,
    subUserId = subUserId,
    includeBaseAmount = TRUE
  ))
  print(dt)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
