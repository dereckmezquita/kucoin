% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinSpotCancelOrder.R
\name{KucoinSpotCancelOrder}
\alias{KucoinSpotCancelOrder}
\title{KucoinSpotCancelOrder Class for KuCoin Spot Trading Order Cancellation}
\value{
Not applicable (class definition; see individual methods for return values).
}
\description{
The \code{KucoinSpotCancelOrder} class provides an asynchronous interface for canceling spot trading orders on KuCoin.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that resolve to \code{data.table} objects.
This class supports canceling individual orders by \code{orderId} or \code{clientOid}, partially canceling an order, canceling all orders
for a specific symbol, and canceling all orders across all symbols.
}
\details{
\subsection{Purpose and Scope}{

This class focuses exclusively on order cancellation operations in the KuCoin Spot trading system, including:
\itemize{
\item \strong{Individual Cancellation}: Cancel a single order by \code{orderId} or \code{clientOid}.
\item \strong{Partial Cancellation}: Reduce the quantity of a specific order.
\item \strong{Bulk Cancellation}: Cancel all orders for a symbol or across all symbols.
}
}

\subsection{Workflow Overview}{

Not applicable (class definition overview).
}

\subsection{API Endpoint}{

Not applicable (class-level documentation; see individual methods for specific endpoints).
}

\subsection{Usage}{

Utilised by traders and developers to programmatically cancel Spot trading orders on KuCoin. The class is initialized with API credentials,
automatically loaded via \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. For detailed endpoint information,
parameters, and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/introduction}{KuCoin API Documentation - Spot Trading Orders}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and base URL.
\item \strong{cancel_order_by_order_id(orderId, symbol):} Cancels an order by its system-generated \code{orderId}.
\item \strong{cancel_order_by_client_oid(clientOid, symbol):} Cancels an order by its client-assigned \code{clientOid}.
\item \strong{cancel_partial_order(orderId, symbol, cancelSize):} Partially cancels an order by \code{orderId} with a specified quantity.
\item \strong{cancel_all_orders_by_symbol(symbol):} Cancels all orders for a specific symbol.
\item \strong{cancel_all_orders():} Cancels all spot orders across all symbols.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  cancellations <- KucoinSpotCancelOrder$new()

  # Cancel an order by orderId
  canceled_order <- await(cancellations$cancel_order_by_order_id("671124f9365ccb00073debd4", "BTC-USDT"))
  print("Canceled by OrderId:"); print(canceled_order)

  # Cancel an order by clientOid
  canceled_client <- await(cancellations$cancel_order_by_client_oid("5c52e11203aa677f33e493fb", "BTC-USDT"))
  print("Canceled by ClientOid:"); print(canceled_client)

  # Partially cancel an order
  partial_cancel <- await(cancellations$cancel_partial_order("6711f73c1ef16c000717bb31", "BTC-USDT", "0.00001"))
  print("Partial Cancellation:"); print(partial_cancel)

  # Cancel all orders for a symbol
  symbol_cancel <- await(cancellations$cancel_all_orders_by_symbol("BTC-USDT"))
  print("All Orders for Symbol Canceled:"); print(symbol_cancel)

  # Cancel all orders across all symbols
  all_cancel <- await(cancellations$cancel_all_orders())
  print("All Orders Canceled:"); print(all_cancel)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinSpotCancelOrder Object
\subsection{Description}{

Initialises a \code{KucoinSpotCancelOrder} object with API credentials and a base URL for canceling Spot trading orders asynchronously.
If not provided, credentials are sourced from \code{get_api_keys()} and the base URL from \code{get_base_url()}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Utilised to create an instance for managing order cancellations in Spot trading.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Cancellation Hub}: Use this as the central object for all cancellation operations in your trading bot, streamlining order termination logic.
\item \strong{Secure Setup}: Load credentials via \code{get_api_keys()} from a secure source (e.g., environment variables or a vault), ensuring safe deployment.
\item \strong{Integration}: Pair with querying classes (e.g., \code{KucoinSpotOrderQueries}) to verify cancellations and maintain order state consistency.
}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinSpotCancelOrder-new}{\code{KucoinSpotCancelOrder$new()}}
\item \href{#method-KucoinSpotCancelOrder-cancel_order_by_order_id}{\code{KucoinSpotCancelOrder$cancel_order_by_order_id()}}
\item \href{#method-KucoinSpotCancelOrder-cancel_order_by_client_oid}{\code{KucoinSpotCancelOrder$cancel_order_by_client_oid()}}
\item \href{#method-KucoinSpotCancelOrder-cancel_partial_order}{\code{KucoinSpotCancelOrder$cancel_partial_order()}}
\item \href{#method-KucoinSpotCancelOrder-cancel_all_orders_by_symbol}{\code{KucoinSpotCancelOrder$cancel_all_orders_by_symbol()}}
\item \href{#method-KucoinSpotCancelOrder-cancel_all_orders}{\code{KucoinSpotCancelOrder$cancel_all_orders()}}
\item \href{#method-KucoinSpotCancelOrder-clone}{\code{KucoinSpotCancelOrder$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinSpotCancelOrder} class.
Cancel Order By OrderId
\subsection{Description}{

Cancels a spot order by its system-generated \code{orderId} via a DELETE request to \verb{/api/v1/hf/orders/\{orderId\}}.
Calls \code{cancel_order_by_order_id_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId} and \code{symbol} are valid.
\item \strong{URL}: Constructs endpoint with \code{orderId} and \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns the canceled \code{orderId}.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders/\{orderId\}?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to cancel a specific order using its KuCoin-assigned ID.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-order-by-orderld}{KuCoin Cancel Order By OrderId}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Targeted Cancellation}: Cancel specific orders when market conditions shift (e.g., cancel a buy order if price spikes), using \code{orderId} from placement logs.
\item \strong{Status Verification}: Post-cancellation, confirm with a query class (e.g., \code{get_order_by_order_id}) to ensure completion before re-ordering.
\item \strong{Error Handling}: If cancellation fails (e.g., already filled), log the \code{orderId} and retry or adjust strategy based on status.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-cancel_order_by_order_id"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-cancel_order_by_order_id}{}}}
\subsection{Method \code{cancel_order_by_order_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$cancel_order_by_order_id(orderId, symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID (e.g., "671124f9365ccb00073debd4"). Required.}

\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character): The canceled order ID.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"orderId": "671124f9365ccb00073debd4"\}\}
}\if{html}{\out{</div>}}

Cancel Order By ClientOid
}

\subsection{Description}{

Cancels a spot order by its client-assigned \code{clientOid} via a DELETE request to \verb{/api/v1/hf/orders/client-order/\{clientOid\}}.
Calls \code{cancel_order_by_client_oid_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{clientOid} and \code{symbol} are valid.
\item \strong{URL}: Constructs endpoint with \code{clientOid} and \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns the canceled \code{clientOid}.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders/client-order/\{clientOid\}?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to cancel a specific order using a custom client ID.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-order-by-clientoid}{KuCoin Cancel Order By ClientOid}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Custom Tracking}: Cancel orders by \code{clientOid} tied to your system’s identifiers (e.g., "STRAT1_001"), avoiding \code{orderId} mapping.
\item \strong{Event-Driven}: Trigger cancellation based on signals (e.g., volatility spike), using stored \code{clientOid} values from your database.
\item \strong{Confirmation}: Verify with a query class (e.g., \code{get_order_by_client_oid}) to update order status in real-time.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-cancel_order_by_client_oid"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-cancel_order_by_client_oid}{}}}
\subsection{Method \code{cancel_order_by_client_oid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$cancel_order_by_client_oid(clientOid, symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{clientOid}}{Character string; client-assigned order ID (e.g., "5c52e11203aa677f33e493fb"). Required.}

\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{clientOid} (character): The canceled client order ID.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"clientOid": "5c52e11203aa677f33e493fb"\}\}
}\if{html}{\out{</div>}}

Cancel Partial Order
}

\subsection{Description}{

Partially cancels a spot order by its \code{orderId} with a specified quantity via a DELETE request to \verb{/api/v1/hf/orders/cancel/\{orderId\}}.
Calls \code{cancel_partial_order_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId}, \code{symbol}, and \code{cancelSize} are valid.
\item \strong{URL}: Constructs endpoint with \code{orderId}, \code{symbol}, and \code{cancelSize}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns the \code{orderId} and \code{cancelSize}.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders/cancel/\{orderId\}?symbol=\{symbol\}&cancelSize=\{cancelSize\}}
}

\subsection{Usage}{

Utilised to reduce the quantity of an existing order without fully canceling it.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-partial-order}{KuCoin Cancel Partial Order}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Position Adjustment}: Reduce exposure (e.g., cancel 0.01 BTC of a 0.05 BTC order) when risk thresholds are approached, using dynamic \code{cancelSize} calculations.
\item \strong{Liquidity Management}: Partially cancel large orders to free capital based on market depth updates, maintaining some market presence.
\item \strong{Post-Cancel Check}: Use a query class to confirm remaining \code{size} via \code{get_order_by_order_id}, ensuring the adjustment took effect.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-cancel_partial_order"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-cancel_partial_order}{}}}
\subsection{Method \code{cancel_partial_order()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$cancel_partial_order(orderId, symbol, cancelSize)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID (e.g., "6711f73c1ef16c000717bb31"). Required.}

\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}

\item{\code{cancelSize}}{Character string; quantity to cancel (e.g., "0.00001"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character): The partially canceled order ID.
\item \code{cancelSize} (character): The canceled quantity.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"orderId": "6711f73c1ef16c000717bb31", "cancelSize": "0.00001"\}\}
}\if{html}{\out{</div>}}

Cancel All Orders By Symbol
}

\subsection{Description}{

Cancels all spot orders for a specified symbol via a DELETE request to \verb{/api/v1/hf/orders}.
Calls \code{cancel_all_orders_by_symbol_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{symbol} is valid.
\item \strong{URL}: Constructs endpoint with \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns a success indicator.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to cancel all orders associated with a specific trading pair.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-all-orders-by-symbol}{KuCoin Cancel All Orders By Symbol}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Market Exit}: Clear all orders for a symbol (e.g., "BTC-USDT") during strategy shifts or market closeouts, triggered by price thresholds.
\item \strong{Risk Mitigation}: Cancel all orders for a volatile symbol if risk metrics (e.g., VaR) exceed limits, using real-time data.
\item \strong{Post-Cancel Audit}: Verify with \code{get_open_orders} from a query class to ensure no orders remain, logging any discrepancies.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-cancel_all_orders_by_symbol"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-cancel_all_orders_by_symbol}{}}}
\subsection{Method \code{cancel_all_orders_by_symbol()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$cancel_all_orders_by_symbol(symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{result} (character): "success" if the request is accepted.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": "success"\}
}\if{html}{\out{</div>}}

Cancel All Orders
}

\subsection{Description}{

Cancels all spot orders across all symbols via a DELETE request to \verb{/api/v1/hf/orders/cancelAll}.
Calls \code{cancel_all_orders_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL}: Constructs endpoint with no parameters.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns successful and failed symbols.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders/cancelAll}
}

\subsection{Usage}{

Utilised to terminate all spot trading activity across all markets.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-all-orders}{KuCoin Cancel All Orders}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Emergency Stop}: Execute during critical events (e.g., account breaches, market crashes) to halt all trading, triggered by risk alerts.
\item \strong{Portfolio Reset}: Clear all orders before a major strategy overhaul, ensuring a clean slate for new setups.
\item \strong{Failure Analysis}: Inspect \code{failedSymbols} to identify cancellation issues (e.g., already filled orders), logging errors for debugging.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-cancel_all_orders"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-cancel_all_orders}{}}}
\subsection{Method \code{cancel_all_orders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$cancel_all_orders()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{succeedSymbols} (character): Vector of symbols successfully canceled.
\item \code{failedSymbols} (list): List of objects with \code{symbol} and \code{error} for failed cancellations.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"succeedSymbols": ["ETH-USDT", "BTC-USDT"], "failedSymbols": []\}\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotCancelOrder-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotCancelOrder-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotCancelOrder$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
