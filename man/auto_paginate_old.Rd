% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_api.R
\name{auto_paginate_old}
\alias{auto_paginate_old}
\title{Generic Pagination Helper (Old Version) for KuCoin API Endpoints}
\usage{
auto_paginate_old(
  fetch_page,
  query = list(currentPage = 1, pageSize = 50),
  items_field = "items",
  paginate_fields = list(currentPage = "currentPage", totalPage = "totalPage"),
  aggregate_fn = function(acc) {
     acc
 },
  max_pages = Inf,
  accumulator = list(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{fetch_page}{A function that fetches a page of results and returns a promise resolving to the response.}

\item{query}{A named list of query parameters for the first page (default is \code{list(currentPage = 1, pageSize = 50)}).}

\item{items_field}{The field in the response that contains the items to be aggregated (default is \code{"items"}).}

\item{paginate_fields}{A named list of fields in the response that contain the current and total page numbers.
\itemize{
\item \code{currentPage}: The field containing the current page number.
\item \code{totalPage}: The field containing the total number of pages.
}}

\item{aggregate_fn}{A function to combine the accumulated results into the final output (default returns the accumulator list as is).}

\item{max_pages}{The maximum number of pages to fetch (default is \code{Inf} to fetch all available pages).}

\item{accumulator}{An accumulator for recursive aggregation (internal use).}
}
\value{
A promise that resolves to the aggregated result as defined by the \code{aggregate_fn}.
}
\description{
This asynchronous helper function (old version) facilitates automatic pagination for KuCoin API endpoints that return paginated
responses. It repeatedly calls a user-supplied function to fetch each page and aggregates the results using an
aggregation function provided by the user. The workflow is similar to \code{auto_paginate} but implemented recursively.
}
