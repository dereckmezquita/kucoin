% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinAccountAndFunding.R
\name{KucoinAccountAndFunding}
\alias{KucoinAccountAndFunding}
\title{KucoinAccountAndFunding Class for KuCoin Account and Funding Management}
\value{
Not applicable (class definition; see individual methods for return values).
}
\description{
The \code{KucoinAccountAndFunding} class provides a comprehensive, asynchronous interface for managing account and funding
operations on KuCoin. It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that resolve
to \code{data.table} objects or logical values. This class encompasses a wide range of functionalities, including account
summaries, API key details, spot account types, account lists, and ledger records for spot and margin accounts.
}
\details{
\subsection{Purpose and Scope}{

This class is designed to manage and monitor KuCoin account details and funding activities, covering:
\itemize{
\item \strong{Account Overview}: Summaries of VIP levels, sub-accounts, and limits.
\item \strong{API Key Insights}: Metadata and permissions of the API key.
\item \strong{Spot Account Management}: Type detection, account lists, and detailed financial metrics.
\item \strong{Margin Accounts}: Cross and isolated margin account details.
\item \strong{Transaction History}: Ledger records for tracking funding activities.
}
}

\subsection{Workflow Overview}{

Not applicable (class definition overview).
}

\subsection{API Endpoint}{

Not applicable (class-level documentation; see individual methods for specific endpoints).
}

\subsection{Usage}{

Utilised by traders and developers to programmatically interact with KuCoinâ€™s Account & Funding endpoints. The class is
initialized with API credentials, sourced from \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}.
All methods require authentication. For detailed endpoint information, parameters, and response schemas, refer to the
official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/introduction}{KuCoin API Documentation - Account & Funding}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and base URL.
\item \strong{get_account_summary_info():} Retrieves a summary of account status and limits.
\item \strong{get_apikey_info():} Fetches detailed API key metadata.
\item \strong{get_spot_account_type():} Determines if the spot account is high-frequency.
\item \strong{get_spot_account_list(query):} Lists all spot accounts with optional filters.
\item \strong{get_spot_account_detail(accountId):} Retrieves details for a specific spot account.
\item \strong{get_cross_margin_account(query):} Fetches cross margin account information.
\item \strong{get_isolated_margin_account(query):} Retrieves isolated margin account details.
\item \strong{get_spot_ledger(query, page_size, max_pages):} Fetches paginated ledger records.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  account <- KucoinAccountAndFunding$new()

  # Get account summary
  summary <- await(account$get_account_summary_info())
  print("Account Summary:"); print(summary)

  # Check spot account type
  is_high_freq <- await(account$get_spot_account_type())
  cat("Is High-Frequency Spot Account:", is_high_freq, "\n")

  # List USDT trade accounts
  spot_accounts <- await(account$get_spot_account_list(list(currency = "USDT", type = "trade")))
  print("USDT Trade Accounts:"); print(spot_accounts)

  # Get ledger for last 24 hours
  ledger <- await(account$get_spot_ledger(
    list(currency = "BTC", startAt = as.integer(Sys.time() - 24*3600) * 1000),
    page_size = 20,
    max_pages = 1
  ))
  print("Recent BTC Ledger:"); print(ledger)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinAccountAndFunding Object
\subsection{Description}{

Initialises a \code{KucoinAccountAndFunding} object with API credentials and a base URL for managing account and
funding operations asynchronously. All methods require authentication via API keys.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys from \code{get_api_keys()}.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL from \code{get_base_url()}.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Creates an instance for accessing KuCoin account and funding data, requiring authenticated API access.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Account Hub}: Use as the central object for account monitoring in your bot, integrating with trading strategies.
\item \strong{Secure Setup}: Provide explicit \code{keys} or use \code{get_api_keys()} from a secure source for production safety.
\item \strong{Lifecycle Management}: Instantiate once and reuse across sessions, pairing with deposit/withdrawal classes for full financial oversight.
}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinAccountAndFunding-new}{\code{KucoinAccountAndFunding$new()}}
\item \href{#method-KucoinAccountAndFunding-get_account_summary_info}{\code{KucoinAccountAndFunding$get_account_summary_info()}}
\item \href{#method-KucoinAccountAndFunding-get_apikey_info}{\code{KucoinAccountAndFunding$get_apikey_info()}}
\item \href{#method-KucoinAccountAndFunding-get_spot_account_type}{\code{KucoinAccountAndFunding$get_spot_account_type()}}
\item \href{#method-KucoinAccountAndFunding-get_spot_account_list}{\code{KucoinAccountAndFunding$get_spot_account_list()}}
\item \href{#method-KucoinAccountAndFunding-get_spot_account_detail}{\code{KucoinAccountAndFunding$get_spot_account_detail()}}
\item \href{#method-KucoinAccountAndFunding-get_cross_margin_account}{\code{KucoinAccountAndFunding$get_cross_margin_account()}}
\item \href{#method-KucoinAccountAndFunding-get_isolated_margin_account}{\code{KucoinAccountAndFunding$get_isolated_margin_account()}}
\item \href{#method-KucoinAccountAndFunding-get_spot_ledger}{\code{KucoinAccountAndFunding$get_spot_ledger()}}
\item \href{#method-KucoinAccountAndFunding-clone}{\code{KucoinAccountAndFunding$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinAccountAndFunding} class.
Get Account Summary Information
\subsection{Description}{

Retrieves a comprehensive account summary asynchronously via a GET request to \verb{/api/v2/user-info}.
Calls \code{get_account_summary_info_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a \code{data.table} with VIP level, sub-account counts, and limits.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/user-info}
}

\subsection{Usage}{

Utilised to obtain a high-level overview of account status, including sub-account limits and VIP benefits.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-summary-info}{KuCoin Get Account Summary Info}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Capacity Check}: Monitor \code{maxSubQuantity} to manage sub-account creation, scaling bot operations as needed.
\item \strong{VIP Benefits}: Adjust trading fees or limits in your bot based on \code{level}, optimizing cost strategies.
\item \strong{Periodic Audit}: Fetch daily to log account health, alerting if sub-account limits are near capacity.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_account_summary_info"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_account_summary_info}{}}}
\subsection{Method \code{get_account_summary_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_account_summary_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{level} (integer): VIP level.
\item \code{subQuantity} (integer): Total sub-accounts.
\item \code{spotSubQuantity} (integer): Spot sub-accounts.
\item \code{maxSubQuantity} (integer): Max allowed sub-accounts.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"level": 3, "subQuantity": 5, "maxSubQuantity": 20\}\}
}\if{html}{\out{</div>}}

Get API Key Information
}

\subsection{Description}{

Retrieves detailed API key metadata asynchronously via a GET request to \verb{/api/v1/user/api-key}.
Calls \code{get_apikey_info_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a \code{data.table} with key details and permissions.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/user/api-key}
}

\subsection{Usage}{

Utilised to inspect API key properties, aiding in security and permission audits.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-apikey-info}{KuCoin Get API Key Info}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Permission Sync}: Verify \code{permission} includes required scopes (e.g., "Spot") before bot operations, halting if insufficient.
\item \strong{Security Audit}: Check \code{ipWhitelist} and \code{createdAt} to enforce IP restrictions or key rotation policies.
\item \strong{Logging}: Log \code{uid} and \code{subName} to map API keys to accounts, ensuring traceability in multi-user systems.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_apikey_info"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_apikey_info}{}}}
\subsection{Method \code{get_apikey_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_apikey_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{uid} (integer): Account UID.
\item \code{apiKey} (character): API key string.
\item \code{permission} (character): Permissions list.
\item \code{createdAt} (integer): Creation time (ms).
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"uid": 12345, "apiKey": "abc123", "permission": "General, Spot", "createdAt": 1733049198863\}\}
}\if{html}{\out{</div>}}

Get Spot Account Type
}

\subsection{Description}{

Determines if the spot account is high-frequency asynchronously via a GET request to \verb{/api/v1/hf/accounts/opened}.
Calls \code{get_spot_account_type_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a logical indicating high-frequency status.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/accounts/opened}
}

\subsection{Usage}{

Utilised to identify spot account type, affecting endpoint usage for trading operations.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-type-spot}{KuCoin Get Account Type Spot}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Endpoint Selection}: Use result to choose between high-frequency (HF) or low-frequency endpoints for orders and transfers.
\item \strong{Performance Tuning}: Adjust polling frequency in your bot based on account type, optimizing for HF accounts.
\item \strong{Initial Check}: Run at bot startup to configure workflows, logging the type for debugging.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_spot_account_type"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_spot_account_type}{}}}
\subsection{Method \code{get_spot_account_type()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_spot_account_type()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Promise resolving to a logical:
\itemize{
\item \code{TRUE}: High-frequency spot account.
\item \code{FALSE}: Low-frequency spot account.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": true\}
}\if{html}{\out{</div>}}

Get Spot Account List
}

\subsection{Description}{

Retrieves a list of all spot accounts asynchronously via a GET request to \verb{/api/v1/accounts}.
Calls \code{get_spot_account_list_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query}: Applies optional filters from \code{query}.
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a \code{data.table} of account details.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/accounts}
}

\subsection{Usage}{

Utilised to list spot accounts, filterable by currency or type, for financial monitoring.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-list-spot}{KuCoin Get Account List Spot}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Fund Allocation}: Filter by \code{type = "trade"} to monitor trading funds, reallocating via transfers if \code{available} is low.
\item \strong{Currency Tracking}: Use \code{currency} filter to manage specific asset balances, integrating with market data.
\item \strong{Real-Time Sync}: Poll periodically to update account states, caching IDs for detailed queries.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_spot_account_list"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_spot_account_list}{}}}
\subsection{Method \code{get_spot_account_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_spot_account_list(query = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters:
\itemize{
\item \code{currency} (character): Currency code (e.g., "USDT").
\item \code{type} (character): Account type ("main", "trade").
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{id} (character): Account ID.
\item \code{currency} (character): Currency code.
\item \code{type} (character): Account type.
\item \code{balance} (numeric): Total funds.
\item \code{available} (numeric): Available funds.
\item \code{holds} (numeric): Funds on hold.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": [\{"id": "123", "currency": "USDT", "type": "trade", "balance": "1000", "available": "900", "holds": "100"\}]\}
}\if{html}{\out{</div>}}

Get Spot Account Detail
}

\subsection{Description}{

Retrieves detailed financial metrics for a specific spot account asynchronously via a GET request to \verb{/api/v1/accounts/\{accountId\}}.
Calls \code{get_spot_account_detail_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Request}: Constructs authenticated GET request with \code{accountId}.
\item \strong{Response}: Returns a \code{data.table} with account metrics.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/accounts/\{accountId\}}
}

\subsection{Usage}{

Utilised to inspect a specific spot accountâ€™s financial status using an ID from \code{get_spot_account_list}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-detail-spot}{KuCoin Get Account Detail Spot}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Balance Monitoring}: Check \code{available} vs. \code{holds} to manage trading liquidity, triggering transfers if needed.
\item \strong{Account Drill-Down}: Use after \code{get_spot_account_list} to focus on high-value accounts, logging discrepancies.
\item \strong{Risk Assessment}: Monitor \code{holds} to detect pending orders or freezes, adjusting risk parameters.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_spot_account_detail"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_spot_account_detail}{}}}
\subsection{Method \code{get_spot_account_detail()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_spot_account_detail(accountId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accountId}}{Character string; unique account ID (e.g., from \code{get_spot_account_list}). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{currency} (character): Currency code.
\item \code{balance} (numeric): Total funds.
\item \code{available} (numeric): Available funds.
\item \code{holds} (numeric): Funds on hold.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"currency": "USDT", "balance": "1000", "available": "900", "holds": "100"\}\}
}\if{html}{\out{</div>}}

Get Cross Margin Account
}

\subsection{Description}{

Retrieves cross margin account details asynchronously via a GET request to \verb{/api/v3/margin/accounts}.
Calls \code{get_cross_margin_account_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query}: Applies optional filters from \code{query}.
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a list with \code{summary} and \code{accounts} \code{data.table}s.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/margin/accounts}
}

\subsection{Usage}{

Utilised to monitor cross margin account status, including total assets and per-currency details.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-cross-margin}{KuCoin Get Account Cross Margin}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Risk Management}: Track \code{debtRatio} in \code{summary} to adjust leverage, halting trades if risk exceeds thresholds.
\item \strong{Fund Allocation}: Monitor \code{available} in \code{accounts} to optimize margin usage across currencies.
\item \strong{Currency Filter}: Use \code{query$quoteCurrency} to focus on primary trading assets (e.g., "USDT"), syncing with market conditions.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_cross_margin_account"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_cross_margin_account}{}}}
\subsection{Method \code{get_cross_margin_account()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_cross_margin_account(query = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters:
\itemize{
\item \code{quoteCurrency} (character): Quote currency (e.g., "USDT", default "USDT").
\item \code{queryType} (character): Account type ("MARGIN", "MARGIN_V2", "ALL", default "MARGIN").
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a list with:
\itemize{
\item \code{summary}: \code{data.table}:
\itemize{
\item \code{totalAssetOfQuoteCurrency} (character): Total assets.
\item \code{debtRatio} (character): Debt ratio.
}
\item \code{accounts}: \code{data.table}:
\itemize{
\item \code{currency} (character): Currency code.
\item \code{total} (character): Total funds.
\item \code{available} (character): Available funds.
\item Full schema in implementation docs.
}
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"totalAssetOfQuoteCurrency": "1000", "accounts": [\{"currency": "USDT", "total": "500"\}]\}\}
}\if{html}{\out{</div>}}

Get Isolated Margin Account
}

\subsection{Description}{

Retrieves isolated margin account details asynchronously via a GET request to \verb{/api/v3/isolated/accounts}.
Calls \code{get_isolated_margin_account_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query}: Applies optional filters from \code{query}.
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Returns a list with \code{summary} and \code{assets} \code{data.table}s.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/isolated/accounts}
}

\subsection{Usage}{

Utilised to monitor isolated margin accounts per trading pair, detailing assets and liabilities.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-isolated-margin}{KuCoin Get Account Isolated Margin}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Pair-Specific Risk}: Monitor \code{debtRatio} per \code{symbol} in \code{assets} to manage isolated leverage, adjusting positions dynamically.
\item \strong{Liquidity Check}: Use \code{base_available} and \code{quote_available} to ensure sufficient margin, triggering fund transfers if low.
\item \strong{Time-Based Sync}: Leverage \code{datetime} in \code{summary} to validate data freshness, polling hourly for critical pairs.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_isolated_margin_account"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_isolated_margin_account}{}}}
\subsection{Method \code{get_isolated_margin_account()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_isolated_margin_account(query = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters:
\itemize{
\item \code{symbol} (character): Trading pair (e.g., "BTC-USDT").
\item \code{quoteCurrency} (character): Quote currency (e.g., "USDT", default "USDT").
\item \code{queryType} (character): Type ("ISOLATED", "ISOLATED_V2", "ALL", default "ISOLATED").
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a list with:
\itemize{
\item \code{summary}: \code{data.table}:
\itemize{
\item \code{totalAssetOfQuoteCurrency} (character): Total assets.
\item \code{datetime} (POSIXct): Snapshot time.
}
\item \code{assets}: \code{data.table}:
\itemize{
\item \code{symbol} (character): Trading pair.
\item \code{base_total} (character): Base total funds.
\item \code{quote_liability} (character): Quote liability.
\item Full schema in implementation docs.
}
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"totalAssetOfQuoteCurrency": "1000", "assets": [\{"symbol": "BTC-USDT", "base_total": "0.1"\}]\}\}
}\if{html}{\out{</div>}}

Get Spot Ledger
}

\subsection{Description}{

Retrieves paginated ledger records for spot and margin accounts asynchronously via a GET request to \verb{/api/v1/accounts/ledgers}.
Calls \code{get_spot_ledger_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query}: Applies filters and pagination from \code{query}, \code{page_size}, and \code{max_pages}.
\item \strong{Request}: Constructs authenticated GET request with pagination.
\item \strong{Response}: Returns a \code{data.table} of transaction history.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/accounts/ledgers}
}

\subsection{Usage}{

Utilised to track transaction histories for spot and margin accounts, filterable by various criteria.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-ledgers-spot-margin}{KuCoin Get Account Ledgers Spot Margin}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Transaction Audit}: Filter by \code{bizType = "TRANSFER"} to reconcile internal movements, logging \code{amount} and \code{createdAtDatetime}.
\item \strong{Fee Analysis}: Sum \code{fee} over time ranges to optimize trading costs, adjusting strategies accordingly.
\item \strong{Event Monitoring}: Use \code{direction} and \code{context} to detect deposits/withdrawals, triggering fund allocation or alerts.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-get_spot_ledger"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-get_spot_ledger}{}}}
\subsection{Method \code{get_spot_ledger()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$get_spot_ledger(
  query = list(),
  page_size = 50,
  max_pages = Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters:
\itemize{
\item \code{currency} (character): Currency code (up to 10).
\item \code{direction} (character): "in" or "out".
\item \code{bizType} (character): Business type (e.g., "DEPOSIT").
\item \code{startAt} (integer): Start time (ms).
\item \code{endAt} (integer): End time (ms).
}}

\item{\code{page_size}}{Integer; results per page (10-500, default 50).}

\item{\code{max_pages}}{Numeric; max pages to fetch (default \code{Inf}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{id} (character): Ledger ID.
\item \code{currency} (character): Currency code.
\item \code{amount} (character): Transaction amount.
\item \code{createdAtDatetime} (POSIXct): Transaction time.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"items": [\{"id": "xyz", "currency": "BTC", "amount": "0.1", "createdAt": 1733049198863\}]\}\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinAccountAndFunding-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinAccountAndFunding-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinAccountAndFunding$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
