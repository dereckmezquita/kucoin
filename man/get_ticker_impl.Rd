% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_market_data.R
\name{get_ticker_impl}
\alias{get_ticker_impl}
\title{Get Ticker (Implementation)}
\usage{
get_ticker_impl(
  base_url = get_base_url(),
  symbol,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{base_url}{A character string representing the base URL for the KuCoin API.
Defaults to the value returned by \code{get_base_url()}.}

\item{symbol}{A character string representing the trading symbol (e.g., "BTC-USDT").}
}
\value{
A promise that resolves to a \code{data.table} containing the ticker information. The data.table includes:
\describe{
\item{symbol}{(string) The trading symbol (e.g., "BTC-USDT").}
\item{timestamp}{(POSIXct) The timestamp of the ticker data in UTC.}
\item{time_ms}{(integer) The timestamp of the ticker data (in milliseconds).}
\item{sequence}{(string) The sequence identifier for the ticker update.}
\item{price}{(string) The last traded price.}
\item{size}{(string) The last traded size.}
\item{bestBid}{(string) The best bid price.}
\item{bestBidSize}{(string) The best bid size.}
\item{bestAsk}{(string) The best ask price.}
\item{bestAskSize}{(string) The best ask size.}
}
}
\description{
This asynchronous function retrieves Level 1 market data (ticker information) for a specified trading symbol from the KuCoin API.
The endpoint returns details such as the last traded price and size, the best bid and ask prices and sizes, as well as additional metadata.
}
\details{
\strong{Workflow Overview:}
\enumerate{
\item \strong{Query String Construction:}
Uses the helper function \code{build_query()} to construct a query string containing the required \code{symbol} parameter.
\item \strong{URL Construction:}
Constructs the full URL by concatenating the base URL (obtained via \code{get_base_url()}), the endpoint path
\code{/api/v1/market/orderbook/level1}, and the query string.
\item \strong{HTTP Request:}
Sends a GET request to the constructed URL using \code{httr::GET()} with a 10â€‘second timeout.
\item \strong{Response Processing:}
Processes the response using \code{process_kucoin_response()} to validate the HTTP status and API code,
then extracts the \code{data} field.
\item \strong{Data Conversion:}
Converts the returned \code{data} (a named list containing ticker information) into a \code{data.table}.
}

\strong{API Documentation:}
\href{https://www.kucoin.com/docs-new/rest/spot-trading/market-data/get-ticker}{KuCoin Get Ticker}

\strong{Endpoint:} \code{GET https://api.kucoin.com/api/v1/market/orderbook/level1?symbol=BTC-USDT}

This function uses a public endpoint and does not require authentication.
}
\examples{
\dontrun{
  # Retrieve ticker information for the BTC-USDT trading pair:
  dt_ticker <- await(get_ticker_impl(symbol = "BTC-USDT"))
  print(dt_ticker)
}

}
