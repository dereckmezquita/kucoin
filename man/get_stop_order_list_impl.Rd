% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_orders_stop.R
\name{get_stop_order_list_impl}
\alias{get_stop_order_list_impl}
\title{Get Stop Orders List (Implementation)}
\usage{
get_stop_order_list_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  query = list(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List; API configuration parameters from \code{get_api_keys()}. Defaults to \code{get_api_keys()}.}

\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{query}{Named list; query parameters for filtering and pagination (e.g., \code{list(symbol = "BTC-USDT", side = "buy", pageSize = 10)}). Optional.}
}
\value{
Promise resolving to a \code{data.table} containing stop order details, with the following columns:
\itemize{
\item \code{id} (character): Unique order ID assigned by KuCoin.
\item \code{symbol} (character): Trading pair (e.g., "KCS-USDT").
\item \code{userId} (character): User ID associated with the order.
\item \code{status} (character): Order status (e.g., "NEW", "TRIGGERED").
\item \code{type} (character): Order type (e.g., "limit", "market").
\item \code{side} (character): Order side ("buy" or "sell").
\item \code{price} (character): Order price.
\item \code{size} (character): Order size.
\item \code{funds} (character or NA): Order funds (NULL for untriggered orders).
\item \code{stp} (character or NA): Self Trade Prevention strategy (e.g., "DC", "CO", "CN", "CB").
\item \code{timeInForce} (character): Time in force (e.g., "GTC", "GTT", "IOC", "FOK").
\item \code{cancelAfter} (integer): Seconds until cancellation for GTT (-1 if not applicable).
\item \code{postOnly} (logical): Whether the order is post-only.
\item \code{hidden} (logical): Whether the order is hidden.
\item \code{iceberg} (logical): Whether the order is an iceberg order.
\item \code{visibleSize} (character or NA): Visible size for iceberg orders.
\item \code{channel} (character): Order source (e.g., "API").
\item \code{clientOid} (character): Client-assigned order ID.
\item \code{remark} (character or NA): Order remarks.
\item \code{tags} (character or NA): Order tags.
\item \code{orderTime} (numeric): Order creation time in nanoseconds.
\item \code{domainId} (character): Domain ID (e.g., "kucoin").
\item \code{tradeSource} (character): Trade source (e.g., "USER").
\item \code{tradeType} (character): Trade type (e.g., "TRADE").
\item \code{feeCurrency} (character): Currency used for fees.
\item \code{takerFeeRate} (character): Taker fee rate.
\item \code{makerFeeRate} (character): Maker fee rate.
\item \code{createdAt} (integer): Creation timestamp in milliseconds.
\item \code{stop} (character): Stop order type (e.g., "loss", "entry").
\item \code{stopTriggerTime} (integer or NA): Trigger time in milliseconds (NULL if untriggered).
\item \code{stopPrice} (character): Stop price.
\item \code{createdAtDatetime} (POSIXct): Creation time in UTC (derived from \code{createdAt}).
\item \code{orderTimeDatetime} (POSIXct): Order placement time in UTC (derived from \code{orderTime}).
}
}
\description{
Retrieves a paginated list of untriggered stop orders from the KuCoin Spot trading system asynchronously.
This function constructs a GET request to the KuCoin API and returns a promise that resolves to a \code{data.table}
containing details of stop orders, sorted by the latest update time in descending order.
}
\details{
\subsection{Description}{

This endpoint fetches a list of stop orders that have not yet been triggered. Stop orders are conditional orders
that become active when the market price reaches a specified \code{stopPrice}. The list is paginated and sorted to show
the most recent orders first. Users can filter the results using various query parameters such as \code{symbol}, \code{side},
\code{type}, and time range.
}

\subsection{Workflow}{
\enumerate{
\item \strong{Parameter Validation}: Ensures that provided parameters are valid, such as \code{symbol}, \code{side}, \code{type}, and pagination settings.
\item \strong{Request Construction}: Builds the endpoint URL with query parameters for filtering and pagination.
\item \strong{Authentication}: Generates private API headers using \code{build_headers()} with the GET method and endpoint.
\item \strong{API Request}: Sends a GET request to the KuCoin API with a 3-second timeout.
\item \strong{Response Processing}: Parses the response, converts the \code{items} array to a \code{data.table}, and adds datetime columns for \code{createdAt} and \code{orderTime}.
}
}

\subsection{API Details}{
\itemize{
\item \strong{Endpoint}: \verb{GET https://api.kucoin.com/api/v1/stop-order}
\item \strong{Domain}: Spot
\item \strong{API Channel}: Private
\item \strong{API Permission}: General
\item \strong{Rate Limit Pool}: Spot
\item \strong{Rate Limit Weight}: 8
\item \strong{SDK Service}: Spot
\item \strong{SDK Sub-Service}: Order
\item \strong{SDK Method Name}: getStopOrdersList
\item \strong{Official Documentation}: \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-stop-orders-list}{KuCoin Get Stop Orders List}
}
}

\subsection{Request}{
\subsection{Query Parameters}{
\itemize{
\item \code{symbol}: String (optional) - Filter by trading pair (e.g., "BTC-USDT").
\item \code{side}: Enum\if{html}{\out{<String>}} (optional) - Filter by order side: "buy" or "sell".
\item \code{type}: Enum\if{html}{\out{<String>}} (optional) - Filter by order type: "limit", "market", "limit_stop", "market_stop".
\item \code{tradeType}: Enum\if{html}{\out{<String>}} (optional) - Filter by trade type: "TRADE", "MARGIN_TRADE", "MARGIN_ISOLATED_TRADE".
\item \code{startAt}: Integer\if{html}{\out{<int64>}} (optional) - Start time in milliseconds.
\item \code{endAt}: Integer\if{html}{\out{<int64>}} (optional) - End time in milliseconds.
\item \code{currentPage}: Integer (optional) - Current page number.
\item \code{orderIds}: String (optional) - Comma-separated list of order IDs.
\item \code{pageSize}: Integer (optional) - Number of orders per page.
\item \code{stop}: String (optional) - Filter by stop order type: "stop" or "oco".
}
}

\subsection{Example Request}{

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{curl --location --request GET 'https://api.kucoin.com/api/v1/stop-order?symbol=BTC-USDT&side=buy&pageSize=10'
}\if{html}{\out{</div>}}
}

}

\subsection{Response}{
\subsection{HTTP Code: 200}{
\itemize{
\item \strong{Content Type}: \code{application/json}
}
}

\subsection{Data Schema}{
\itemize{
\item \code{code}: String (required) - Response code ("200000" indicates success).
\item \code{data}: Object (required) - Contains:
\itemize{
\item \code{currentPage}: Integer - Current page number.
\item \code{pageSize}: Integer - Number of orders per page.
\item \code{totalNum}: Integer - Total number of stop orders.
\item \code{totalPage}: Integer - Total number of pages.
\item \code{items}: Array of objects - List of stop orders, each with fields such as:
\itemize{
\item \code{id}: String - Order ID.
\item \code{symbol}: String - Trading pair.
\item \code{userId}: String - User ID.
\item \code{status}: String - Order status.
\item \code{type}: String - Order type.
\item \code{side}: String - Order side.
\item \code{price}: String - Order price.
\item \code{size}: String - Order size.
\item \code{funds}: String - Order funds.
\item \code{stp}: String - Self Trade Prevention.
\item \code{timeInForce}: String - Time in force.
\item \code{cancelAfter}: Integer - Cancel after n seconds.
\item \code{postOnly}: Boolean - Post-only flag.
\item \code{hidden}: Boolean - Hidden order flag.
\item \code{iceberg}: Boolean - Iceberg order flag.
\item \code{visibleSize}: String - Visible size for iceberg orders.
\item \code{channel}: String - Order channel.
\item \code{clientOid}: String - Client order ID.
\item \code{remark}: String - Order remarks.
\item \code{tags}: String - Order tags.
\item \code{orderTime}: Integer - Order time in nanoseconds.
\item \code{domainId}: String - Domain ID.
\item \code{tradeSource}: String - Trade source.
\item \code{tradeType}: String - Trade type.
\item \code{feeCurrency}: String - Fee currency.
\item \code{takerFeeRate}: String - Taker fee rate.
\item \code{makerFeeRate}: String - Maker fee rate.
\item \code{createdAt}: Integer - Creation timestamp in milliseconds.
\item \code{stop}: String - Stop order type.
\item \code{stopTriggerTime}: Integer - Stop trigger time.
\item \code{stopPrice}: String - Stop price.
}
}
}
}

\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "currentPage": 1,
    "pageSize": 50,
    "totalNum": 1,
    "totalPage": 1,
    "items": [
      \{
        "id": "vs8hoo8kqjnklv4m0038lrfq",
        "symbol": "KCS-USDT",
        "userId": "60fe4956c43cbc0006562c2c",
        "status": "NEW",
        "type": "limit",
        "side": "buy",
        "price": "0.01000000000000000000",
        "size": "0.01000000000000000000",
        "funds": null,
        "stp": null,
        "timeInForce": "GTC",
        "cancelAfter": -1,
        "postOnly": false,
        "hidden": false,
        "iceberg": false,
        "visibleSize": null,
        "channel": "API",
        "clientOid": "404814a0fb4311eb9098acde48001122",
        "remark": null,
        "tags": null,
        "orderTime": 1628755183702150167,
        "domainId": "kucoin",
        "tradeSource": "USER",
        "tradeType": "TRADE",
        "feeCurrency": "USDT",
        "takerFeeRate": "0.00200000000000000000",
        "makerFeeRate": "0.00200000000000000000",
        "createdAt": 1628755183704,
        "stop": "loss",
        "stopTriggerTime": null,
        "stopPrice": "10.00000000000000000000"
      \}
    ]
  \}
\}
}\if{html}{\out{</div>}}
}

}
}
\examples{
\dontrun{
library(coro)
library(data.table)

main_async <- coro::async(function() {
  # Retrieve stop orders list for BTC-USDT
  stop_orders <- await(get_stop_order_list_impl(
    query = list(symbol = "BTC-USDT", side = "buy", pageSize = 10)
  ))
  print(stop_orders)
})

# Run the async function
main_async()
while (!later::loop_empty()) later::run_now()
}
}
