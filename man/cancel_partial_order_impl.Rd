% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_orders_cancel_order.R
\name{cancel_partial_order_impl}
\alias{cancel_partial_order_impl}
\title{Cancel Partial Order (Implementation)}
\usage{
cancel_partial_order_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  orderId,
  symbol,
  cancelSize,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List; API configuration parameters from \code{get_api_keys()}. Defaults to \code{get_api_keys()}.}

\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{orderId}{Character string; the unique order ID to partially cancel. Required.}

\item{symbol}{Character string; the trading pair symbol (e.g., "BTC-USDT"). Required.}

\item{cancelSize}{Character string; the quantity of the order to cancel (e.g., "0.00001"). Required.}
}
\value{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{orderId} (character): The order ID that was partially canceled.
\item \code{cancelSize} (character): The quantity that was canceled.
}
}
\description{
Cancels a specified quantity of a spot order by its order ID on the KuCoin Spot trading system asynchronously.
This function sends a cancellation request for the specified size and returns the order ID and canceled size if the request is successfully sent.
Note that the actual cancellation status must be checked via order status or WebSocket subscription.
}
\details{
\subsection{Description}{

This endpoint cancels a specified quantity of an existing order based on its \code{orderId}. Unlike full cancellation endpoints, it allows partial cancellation, leaving the remaining order quantity active. The order execution priority (price first, time first) is not affected by this operation.
}

\subsection{Differences from Other Cancellation Functions}{
\itemize{
\item \strong{Cancel Order By OrderId}: Cancels the entire order using the order ID.
\item \strong{Cancel Order By ClientOid}: Cancels the entire order using the client-assigned ID.
\item \strong{Cancel Partial Order}: Cancels only a specified quantity of the order, useful for reducing order size without full cancellation.
}
}

\subsection{Workflow}{
\enumerate{
\item \strong{Parameter Validation}: Ensures \code{orderId}, \code{symbol}, and \code{cancelSize} are non-empty strings, with \code{symbol} being a valid trading pair.
\item \strong{Request Construction}: Builds the API endpoint with \code{orderId} in the path and \code{symbol} and \code{cancelSize} as query parameters.
\item \strong{Authentication}: Generates headers using API credentials via \code{build_headers()}.
\item \strong{API Request}: Sends a DELETE request to the KuCoin API with a 3-second timeout.
\item \strong{Response Processing}: Parses the response and returns the \code{orderId} and \code{cancelSize} if successful.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v1/hf/orders/cancel/\{orderId\}?symbol=\{symbol\}&cancelSize=\{cancelSize\}}
}

\subsection{Rate Limit}{
\itemize{
\item \strong{Weight}: 2 (higher than full cancellation endpoints, which are typically 1).
}
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-partial-order}{KuCoin Cancel Partial Order}
}
}
\examples{
\dontrun{
main_async <- coro::async(function() {
  # Partially cancel an order
  result <- await(cancel_partial_order_impl(
    orderId = "6711f73c1ef16c000717bb31",
    symbol = "BTC-USDT",
    cancelSize = "0.00001"
  ))
  print(result)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
