% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_and_funding.R
\name{get_cross_margin_account_impl}
\alias{get_cross_margin_account_impl}
\title{Retrieve Cross Margin Account Information (Implementation)}
\usage{
get_cross_margin_account_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  query = list(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{base_url}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}

\item{query}{Named list of query parameters:
\itemize{
\item \code{quoteCurrency} (character, optional): Quote currency (e.g., \code{"USDT"}, \code{"KCS"}, \code{"BTC"}; default \code{"USDT"}).
\item \code{queryType} (character, optional): Account type (\code{"MARGIN"}, \code{"MARGIN_V2"}, \code{"ALL"}; default \code{"MARGIN"}).
}}
}
\value{
Promise resolving to a named list containing:
\itemize{
\item \code{summary}: \code{data.table} with:
\itemize{
\item \code{totalAssetOfQuoteCurrency} (character): Total assets.
\item \code{totalLiabilityOfQuoteCurrency} (character): Total liabilities.
\item \code{debtRatio} (character): Debt ratio.
\item \code{status} (character): Position status (e.g., \code{"EFFECTIVE"}).
}
\item \code{accounts}: \code{data.table} with:
\itemize{
\item \code{currency} (character): Currency code.
\item \code{total} (character): Total funds.
\item \code{available} (character): Available funds.
\item \code{hold} (character): Funds on hold.
\item \code{liability} (character): Liabilities.
\item \code{maxBorrowSize} (character): Maximum borrowable amount.
\item \code{borrowEnabled} (logical): Borrowing enabled.
\item \code{transferInEnabled} (logical): Transfer-in enabled.
}
}
}
\description{
Fetches cross margin account details from the KuCoin API asynchronously, including overall metrics and individual accounts. This internal function is designed for use within an R6 class and is not intended for direct end-user consumption.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL Construction}: Combines the base URL (from \code{get_base_url()} or provided \code{base_url}) with \verb{/api/v3/margin/accounts} and a query string from \code{build_query()}.
\item \strong{Header Preparation}: Constructs authentication headers using \code{build_headers()}.
\item \strong{API Request}: Sends a GET request with a 3-second timeout via \code{httr::GET()}.
\item \strong{Response Processing}: Processes the response with \code{process_kucoin_response()}, splitting the \code{"data"} field into \code{summary} and \code{accounts} \code{data.table} objects.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/margin/accounts}
}

\subsection{Usage}{

Utilised internally by \code{KucoinAccountAndFunding} to provide cross margin account data.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-cross-margin}{KuCoin Get Account Cross Margin}
}
}
\examples{
\dontrun{
keys <- get_api_keys()
base_url <- "https://api.kucoin.com"
query <- list(quoteCurrency = "USDT", queryType = "MARGIN")
main_async <- coro::async(function() {
  result <- await(get_cross_margin_account_impl(keys = keys, base_url = base_url, query = query))
  print(result$summary)
  print(result$accounts)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
