% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_api.R
\name{get_server_time}
\alias{get_server_time}
\title{Get Server Time from KuCoin Futures API}
\usage{
get_server_time(base_url = get_base_url())
}
\arguments{
\item{base_url}{The base URL for the KuCoin Futures API. Defaults to the result of \code{get_base_url()}.}
}
\value{
A promise that resolves to a numeric Unix timestamp in milliseconds or rejects with an error.
}
\description{
Retrieves the current server time (Unix timestamp in milliseconds) from the KuCoin Futures API.
The server time is critical for authenticated requests to KuCoin, as the API requires that the
timestamp header in each request is within 5 seconds of the actual server time. This function sends
an asynchronous GET request and returns a promise that resolves to the timestamp. If the request fails,
the promise is rejected with an error.
}
\details{
\strong{API Endpoint:}
\verb{GET https://api.kucoin.com/api/v1/timestamp}

\strong{Usage:}
The server time is used to generate signatures and validate request freshness, helping prevent replay attacks.

\strong{Official Documentation:}
\href{https://www.kucoin.com/docs-new/rest/futures-trading/market-data/get-server-time}{KuCoin Futures Get Server Time}
}
\examples{
\dontrun{
    # Asynchronously retrieve the server time.
    get_server_time()$
        then(function(timestamp) {
            cat("KuCoin Server Time:", timestamp, "\n")
        })$
        catch(function(e) {
            message("Error retrieving server time: ", conditionMessage(e))
        })

    # Run the event loop until all asynchronous tasks are processed.
    while (!later::loop_empty()) {
        later::run_now(timeoutSecs = Inf, all = TRUE)
    }
}

}
