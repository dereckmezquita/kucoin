% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_market_data_get_klines.R
\name{split_time_range_by_candles}
\alias{split_time_range_by_candles}
\title{Split a Time Range into Segments by Maximum Candle Count}
\usage{
split_time_range_by_candles(
  from,
  to,
  candle_duration_s,
  max_candles = 1500,
  overlap = 1
)
}
\arguments{
\item{from}{POSIXct object representing the start time.}

\item{to}{POSIXct object representing the end time.}

\item{candle_duration_s}{Numeric value; duration of one candle in seconds.}

\item{max_candles}{Integer; maximum number of candles per segment (default 1500).}

\item{overlap}{Numeric; seconds to extend each segment’s end for overlap (default 1).}
}
\value{
\code{data.table} with columns \code{from} and \code{to}, each row defining a segment as POSIXct objects.
}
\description{
Splits a time range into segments based on a maximum number of candles, given a candle duration in seconds, adding an overlap to ensure data continuity.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{Time Validation}: Ensures \code{from} is earlier than \code{to}, aborting if not.
\item \strong{Frequency Validation}: Confirms \code{candle_duration_s} is an allowed KuCoin frequency using \code{check_allowed_frequency_s()}.
\item \strong{Time Conversion}: Converts \code{from} and \code{to} to UNIX seconds with \code{time_convert_to_kucoin()}.
\item \strong{Segment Calculation}: Calculates segment start times based on \code{max_candles} and \code{candle_duration_s}, extending ends by \code{overlap} seconds, capped at \code{to}.
\item \strong{Output Construction}: Returns a \code{data.table} with \code{from} and \code{to} columns for each segment.
}
}

\subsection{API Endpoint}{

Not applicable (helper segmentation function).
}

\subsection{Usage}{

Utilised to divide large time ranges into manageable segments for fetching KuCoin klines data, respecting the API’s 1500-candle limit per request.
}

\subsection{Official Documentation}{

Not directly tied to a specific endpoint; supports KuCoin klines API pagination.
}
}
\examples{
\dontrun{
from <- lubridate::now() - 2 * 3600
to <- lubridate::now()
candle_duration_s <- 60
segments <- split_time_range_by_candles(from = from, to = to, candle_duration_s = candle_duration_s)
print(segments)
}
}
