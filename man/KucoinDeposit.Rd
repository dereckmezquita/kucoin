% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinDeposit.R
\name{KucoinDeposit}
\alias{KucoinDeposit}
\title{KucoinDeposit Class for KuCoin Deposit Management}
\description{
The \code{KucoinDeposit} class provides an asynchronous interface for managing deposit operations on KuCoin.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that resolve to \code{data.table} objects.
This class supports creating new deposit addresses, retrieving existing deposit addresses, and fetching deposit history,
all requiring authentication via API keys.
}
\details{
\subsection{Purpose and Scope}{

This class is designed to handle deposit-related tasks in the KuCoin ecosystem, including:
\itemize{
\item \strong{Address Creation}: Generating new deposit addresses for various currencies and chains.
\item \strong{Address Retrieval}: Listing all deposit addresses for a currency.
\item \strong{History Tracking}: Querying deposit records with filtering and pagination.
}
}

\subsection{Usage}{

Utilised by traders and developers to programmatically manage deposits on KuCoin. The class is initialized with API credentials,
automatically sourced from \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. All methods require authentication.
For detailed endpoint information, parameters, and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/deposit/introduction}{KuCoin API Documentation - Deposit}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and base URL.
\item \strong{add_deposit_address(currency, chain, to, amount):} Creates a new deposit address for a currency.
\item \strong{get_deposit_addresses(currency, chain, amount):} Retrieves all deposit addresses for a currency.
\item \strong{get_deposit_history(currency, status, startAt, endAt, page_size, max_pages):} Fetches paginated deposit history.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  deposit <- KucoinDeposit$new()

  # Add a new deposit address for USDT on TRON
  new_address <- await(deposit$add_deposit_address(
    currency = "USDT",
    chain = "trx",
    to = "trade"
  ))
  print("New Deposit Address:"); print(new_address)

  # Get all deposit addresses for USDT
  addresses <- await(deposit$get_deposit_addresses(currency = "USDT"))
  print("USDT Deposit Addresses:"); print(addresses)

  # Get deposit history for USDT over a specific period
  history <- await(deposit$get_deposit_history(
    currency = "USDT",
    status = "SUCCESS",
    startAt = as.integer(Sys.time() - 24*3600) * 1000,
    endAt = as.integer(Sys.time()) * 1000,
    page_size = 10,
    max_pages = 2
  ))
  print("USDT Deposit History:"); print(history)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinDeposit Object
\subsection{Description}{

Initialises a \code{KucoinDeposit} object with API credentials and a base URL for managing deposit operations
asynchronously. All methods require authentication, so valid credentials are essential.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys from \code{get_api_keys()}.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL from \code{get_base_url()}.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Creates an instance for managing KuCoin deposits, requiring authenticated API access for all operations.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Deposit Automation}: Use as the core object for deposit workflows in your bot, integrating with wallet management systems.
\item \strong{Secure Setup}: Provide explicit \code{keys} or use \code{get_api_keys()} from a secure vault for production-grade security.
\item \strong{Scalability}: Instantiate once and reuse across deposit cycles, pairing with withdrawal classes for full fund management.
}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinDeposit-new}{\code{KucoinDeposit$new()}}
\item \href{#method-KucoinDeposit-add_deposit_address}{\code{KucoinDeposit$add_deposit_address()}}
\item \href{#method-KucoinDeposit-get_deposit_addresses}{\code{KucoinDeposit$get_deposit_addresses()}}
\item \href{#method-KucoinDeposit-get_deposit_history}{\code{KucoinDeposit$get_deposit_history()}}
\item \href{#method-KucoinDeposit-clone}{\code{KucoinDeposit$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinDeposit-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinDeposit-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinDeposit$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinDeposit} class.
Add Deposit Address
\subsection{Description}{

Creates a new deposit address for a specified currency asynchronously via a POST request to \verb{/api/v3/deposit-address/create}.
Calls \code{add_deposit_address_v3_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{currency} is valid within the implementation.
\item \strong{Request Body}: Constructs JSON with \code{currency}, \code{chain}, \code{to}, and optional \code{amount}.
\item \strong{Authentication}: Generates headers with API keys.
\item \strong{API Call}: Sends POST request.
\item \strong{Response}: Returns address details as a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{POST https://api.kucoin.com/api/v3/deposit-address/create}
}

\subsection{Usage}{

Utilised to generate new deposit addresses for funding KuCoin accounts, supporting various chains and account types.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/deposit/add-deposit-address-v3}{KuCoin Add Deposit Address (V3)}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Fund Allocation}: Generate addresses for \code{to = "trade"} to direct funds to trading accounts, automating wallet-to-exchange transfers.
\item \strong{Chain Selection}: Specify \code{chain} (e.g., "trx" for USDT) to optimize fees, integrating with fee analysis from market data.
\item \strong{Address Rotation}: Create new addresses periodically for security, tracking via \code{chainId} and auditing with \code{get_deposit_addresses}.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinDeposit-add_deposit_address"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinDeposit-add_deposit_address}{}}}
\subsection{Method \code{add_deposit_address()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinDeposit$add_deposit_address(
  currency,
  chain = NULL,
  to = NULL,
  amount = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{currency}}{Character string; currency code (e.g., "BTC", "USDT"). Required.}

\item{\code{chain}}{Character string; chain identifier (e.g., "trx", "erc20"). Optional.}

\item{\code{to}}{Character string; account type ("main" or "trade"). Optional, defaults to "main".}

\item{\code{amount}}{Character string; amount for Lightning Network invoices. Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{address} (character): Deposit address.
\item \code{memo} (character): Address remark (if any).
\item \code{chainId} (character): Chain identifier.
\item \code{to} (character): Account type.
\item \code{expirationDate} (integer): Expiration (Lightning Network).
\item \code{currency} (character): Currency code.
\item \code{chainName} (character): Chain name.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"address": "T...x", "memo": "", "chainId": "trx", "to": "trade", "currency": "USDT", "chainName": "TRON"\}\}
}\if{html}{\out{</div>}}

Get Deposit Addresses
}

\subsection{Description}{

Retrieves all deposit addresses for a specified currency asynchronously via a GET request to \verb{/api/v3/deposit-addresses}.
Calls \code{get_deposit_addresses_v3_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{currency} is valid within the implementation.
\item \strong{Query}: Builds query with \code{currency}, optional \code{chain}, and \code{amount}.
\item \strong{Authentication}: Generates headers with API keys.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns a \code{data.table} of all addresses, empty if none exist.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/deposit-addresses}
}

\subsection{Usage}{

Utilised to list all existing deposit addresses for a currency, aiding in deposit management.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/deposit/get-deposit-address-v3}{KuCoin Get Deposit Address (V3)}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Address Inventory}: Fetch all addresses for a currency to manage multiple deposit points, selecting based on \code{to} or \code{chainName}.
\item \strong{Verification}: Confirm address availability before initiating deposits, retrying \code{add_deposit_address} if none exist.
\item \strong{Chain Preference}: Filter by \code{chain} to use low-fee networks, integrating with deposit history to track usage.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinDeposit-get_deposit_addresses"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinDeposit-get_deposit_addresses}{}}}
\subsection{Method \code{get_deposit_addresses()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinDeposit$get_deposit_addresses(currency, chain = NULL, amount = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{currency}}{Character string; currency code (e.g., "BTC", "USDT"). Required.}

\item{\code{chain}}{Character string; chain identifier (e.g., "trx"). Optional.}

\item{\code{amount}}{Character string; amount for Lightning Network invoices. Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{address} (character): Deposit address.
\item \code{memo} (character): Address remark (if any).
\item \code{chainId} (character): Chain identifier.
\item \code{to} (character): Account type.
\item \code{expirationDate} (integer): Expiration (Lightning Network).
\item \code{currency} (character): Currency code.
\item \code{contractAddress} (character): Token contract address.
\item \code{chainName} (character): Chain name.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": [\{"address": "T...x", "memo": "", "chainId": "trx", "to": "trade", "currency": "USDT", "chainName": "TRON"\}]\}
}\if{html}{\out{</div>}}

Get Deposit History
}

\subsection{Description}{

Retrieves paginated deposit history asynchronously via a GET request to \verb{/api/v1/deposits}.
Calls \code{get_deposit_history_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures parameters meet API constraints (e.g., \code{page_size} 10-500).
\item \strong{Query}: Constructs query with filters and pagination settings.
\item \strong{Authentication}: Generates headers with API keys.
\item \strong{API Call}: Fetches pages up to \code{max_pages}.
\item \strong{Response}: Aggregates history into a \code{data.table} with datetime conversion.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/deposits}
}

\subsection{Usage}{

Utilised to track deposit transactions, with filtering by currency, status, and time range.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/deposit/get-deposit-history}{KuCoin Get Deposit History}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Fund Tracking}: Monitor \code{status = "SUCCESS"} deposits to confirm fund availability, triggering trading actions.
\item \strong{Reconciliation}: Use \code{createdAtDatetime} and \code{amount} to reconcile with external wallet records, polling daily with time filters.
\item \strong{Error Handling}: Filter \code{status = "FAILURE"} to investigate issues, alerting users or retrying deposits automatically.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinDeposit-get_deposit_history"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinDeposit-get_deposit_history}{}}}
\subsection{Method \code{get_deposit_history()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinDeposit$get_deposit_history(
  currency,
  status = NULL,
  startAt = NULL,
  endAt = NULL,
  page_size = 50,
  max_pages = Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{currency}}{Character string; currency code (e.g., "BTC", "USDT"). Required.}

\item{\code{status}}{Character string; status filter ("PROCESSING", "SUCCESS", "FAILURE"). Optional.}

\item{\code{startAt}}{Integer; start time (ms). Optional.}

\item{\code{endAt}}{Integer; end time (ms). Optional.}

\item{\code{page_size}}{Integer; results per page (10-500, default 50).}

\item{\code{max_pages}}{Numeric; max pages to fetch (default \code{Inf}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{currency} (character): Currency code.
\item \code{chain} (character): Chain identifier.
\item \code{status} (character): Deposit status.
\item \code{address} (character): Deposit address.
\item \code{amount} (character): Deposit amount.
\item \code{createdAtDatetime} (POSIXct): Creation time.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"items": [\{"currency": "USDT", "status": "SUCCESS", "amount": "100", "createdAt": 1733049198863\}]\}\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinDeposit-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinDeposit-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinDeposit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
