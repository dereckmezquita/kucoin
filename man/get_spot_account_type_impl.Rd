% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_and_funding.R
\name{get_spot_account_type_impl}
\alias{get_spot_account_type_impl}
\title{Get Spot Account Type Implementation}
\usage{
get_spot_account_type_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{A list containing API configuration parameters, as returned by \code{get_api_keys()}. The list must include:
\itemize{
\item \code{api_key}: Your KuCoin API key.
\item \code{api_secret}: Your KuCoin API secret.
\item \code{api_passphrase}: Your KuCoin API passphrase.
\item \code{key_version}: The version of the API key (e.g., "2").
}}

\item{base_url}{A character string representing the base URL for the API. If not provided, the function uses \code{get_base_url()} to determine the base URL.}
}
\value{
A promise that resolves to a boolean value:
\itemize{
\item \code{TRUE} indicates that the current user is a high-frequency spot user.
\item \code{FALSE} indicates that the current user is a low-frequency spot user.
}
}
\description{
This asynchronous function retrieves spot account type information from the KuCoin API.
It is designed for internal use as a method in an R6 class and is \strong{not} intended for direct consumption by end-users.
The function performs the following operations:
}
\details{
\enumerate{
\item \strong{URL Construction:} Constructs the full API URL by calling \code{get_base_url()} (or using the user-supplied \code{base_url})
and appending the endpoint.
\item \strong{Header Preparation:} Builds the authentication headers based on the HTTP method, endpoint, and request body.
\item \strong{API Request:} Sends a \code{GET} request to the \code{/api/v1/hf/accounts/opened} endpoint.
\item \strong{Response Processing:} Processes the API response using a helper function and extracts the \code{"data"} field,
which is expected to be a boolean value indicating the spot account type.
}

\strong{Endpoint:} \code{GET https://api.kucoin.com/api/v1/hf/accounts/opened}

\strong{Raw Response Schema:}
\itemize{
\item \code{code} (string): Status code, where "200000" indicates success.
\item \code{data} (boolean): Spot account type; \code{TRUE} means high-frequency and \code{FALSE} means low-frequency.
}

For more information, please refer to the \href{https://www.kucoin.com/docs-new/rest/account-info/account-funding/get-account-type-spot}{KuCoin API Documentation}.
}
\examples{
\dontrun{
  # Retrieve API keys from the environment using get_api_keys()
  keys <- get_api_keys()

  # Optionally, specify a base URL; if not provided, defaults to the value from get_base_url()
  base_url <- "https://api.kucoin.com"

  # Execute the asynchronous request using coro::run:
  main_async <- coro::async(function() {
    is_high_freq <- await(get_spot_account_type_impl(keys, base_url))
    print(is_high_freq)
  })

  main_async()
  while (!later::loop_empty()) {
    later::run_now()
  }
}

}
