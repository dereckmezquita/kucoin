% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_account_sub_account.R
\name{add_subaccount_impl}
\alias{add_subaccount_impl}
\title{Add SubAccount Implementation}
\usage{
add_subaccount_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  password,
  subName,
  access,
  remarks = NULL,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{A list containing API configuration parameters, as returned by \code{get_api_keys()}. The list must include:
\itemize{
\item \code{api_key}: Your KuCoin API key.
\item \code{api_secret}: Your KuCoin API secret.
\item \code{api_passphrase}: Your KuCoin API passphrase.
\item \code{key_version}: The version of the API key (e.g., \code{"2"}).
}}

\item{base_url}{A character string representing the base URL for the API. If not provided, the function uses \code{get_base_url()} to determine the base URL.}

\item{password}{A string representing the sub‐account password.
\itemize{
\item \strong{Requirements:} Must be between 7 and 24 characters and contain both letters and numbers.
}}

\item{subName}{A string representing the desired sub‐account name.
\itemize{
\item \strong{Requirements:} Must be between 7 and 32 characters, include at least one letter and one number, and not contain spaces.
}}

\item{access}{A string representing the permission type for the sub‐account.
\itemize{
\item \strong{Allowed Values:} \code{"Spot"}, \code{"Futures"}, \code{"Margin"}.
}}

\item{remarks}{(Optional) A string containing remarks or notes about the sub‐account.
\itemize{
\item \strong{Requirements:} If provided, must be between 1 and 24 characters.
}}
}
\value{
A promise that resolves to a \code{data.table} containing the sub‐account details. The resulting table includes at least:
\itemize{
\item \strong{uid} (integer): The unique identifier for the sub-account.
\item \strong{subName} (string): The name of the sub-account.
\item \strong{remarks} (string): Any remarks or notes provided.
\item \strong{access} (string): The permission type granted to the sub-account.
}
}
\description{
This asynchronous function creates a new sub‐account on KuCoin by sending a POST request to the
\verb{/api/v2/sub/user/created} endpoint. It is designed for internal use as a method in an R6 class and is \strong{not}
intended for direct consumption by end-users. The function performs the following steps:
}
\details{
\enumerate{
\item \strong{URL Construction:}
Retrieves the base URL using \code{get_base_url()} (or the user-supplied \code{base_url}) and appends the endpoint.
\item \strong{Request Body Preparation:}
Creates a list with the required parameters:
\itemize{
\item \code{password}: The sub‐account password (7–24 characters; must contain both letters and numbers).
\item \code{subName}: The desired sub‐account name (7–32 characters; must include at least one letter and one number; no spaces).
\item \code{access}: The permission type for the sub‐account (allowed values: \code{"Spot"}, \code{"Futures"}, \code{"Margin"}).
\item \code{remarks} (optional): Remarks or notes about the sub‐account (if provided, 1–24 characters).
This list is converted to JSON format using \code{jsonlite::toJSON()} with \code{auto_unbox = TRUE}.
}
\item \strong{Header Preparation:}
Generates authentication headers asynchronously by calling \code{build_headers()}, which includes the necessary
signature, timestamp, encrypted passphrase, and API key details.
\item \strong{API Request:}
Sends a POST request using \code{httr::POST()} with the constructed URL, headers, and JSON body. A timeout of 3 seconds is applied.
\item \strong{Response Handling:}
Processes the JSON response using \code{process_kucoin_response()}. If the HTTP status is not 200 or the API returns a code other than \code{"200000"}, an error is raised.
\item \strong{Result Conversion:}
On success, converts the \code{data} field of the response into a \code{data.table} and returns it.
}

\strong{Endpoint:} \verb{POST https://api.kucoin.com/api/v2/sub/user/created}

\strong{Raw Response Schema:}
\itemize{
\item \code{code} (string): Status code, where \code{"200000"} indicates success.
\item \code{data} (object): Contains the sub-account details as described above.
}

The JSON response looks like:
\preformatted{
{
    "code": "200000",
    "data": {
        "currentPage": 1,
        "pageSize": 10,
        "totalNum": 1,
        "totalPage": 1,
        "items": [
            {
                "userId": "63743f07e0c5230001761d08",
                "uid": 169579801,
                "subName": "testapi6",
                "status": 2,
                "type": 0,
                "access": "All",
                "createdAt": 1668562696000,
                "remarks": "remarks",
                "tradeTypes": [
                    "Spot",
                    "Futures",
                    "Margin"
                ],
                "openedTradeTypes": [
                    "Spot"
                ],
                "hostedStatus": null
            }
        ]
    }
}
}

For more information, please refer to the \href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/add-subaccount}{Add SubAccount API Documentation}.
}
\examples{
\dontrun{
  # Retrieve API keys from the environment using get_api_keys()
  keys <- get_api_keys()

  # Optionally, specify a base URL; if not provided, defaults to the value from get_base_url()
  base_url <- "https://api.kucoin.com"

  # Execute the asynchronous request using coro::run:
  main_async <- coro::async(function() {
    result <- await(add_subaccount_impl(keys, base_url,
        password = "1234567",
        subName = "Name1234567",
        access = "Spot",
        remarks = "Test sub-account"
    ))
    print(result)
  })

  main_async()
  while (!later::loop_empty()) {
    later::run_now()
  }
}

}
