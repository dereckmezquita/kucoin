% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinSpotOco.R
\name{KucoinSpotOco}
\alias{KucoinSpotOco}
\title{KucoinSpotOco Class for KuCoin Spot Trading OCO Orders}
\value{
Not applicable (class definition; see individual methods for return values).
}
\description{
The \code{KucoinSpotOco} class provides an asynchronous interface for managing One-Cancels-the-Other (OCO) orders on KuCoin's Spot trading platform.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that typically resolve to \code{data.table} objects.
This class supports placing OCO orders, canceling them by various identifiers, retrieving order details, and listing existing OCO orders.
}
\details{
\subsection{What is an OCO Order?}{

An OCO order is a paired trading strategy combining a limit order (e.g., to take profits) with a stop-limit order (e.g., to limit losses).
When one order executes, the other is automatically canceled. This is ideal for:
\itemize{
\item \strong{Risk Management}: Set a stop-loss to cap losses (e.g., sell BTC at $48,000 if bought at $50,000).
\item \strong{Profit Taking}: Secure gains at a target price (e.g., sell BTC at $55,000).
\item \strong{Automation}: Manage trades in volatile markets without constant monitoring.
}
}

\subsection{Workflow Overview}{

Not applicable (class definition overview).
}

\subsection{API Endpoint}{

Not applicable (class-level documentation; see individual methods for specific endpoints).
}

\subsection{Usage}{

Utilised by traders to programmatically manage OCO orders on KuCoin Spot markets. The class is initialized with API credentials,
automatically loaded via \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. For detailed endpoint
information, parameters, and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/introduction}{KuCoin API Documentation}
\itemize{
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/add-oco-order}{Add OCO Order}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-oco-order-by-orderld}{Cancel OCO Order By OrderId}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-oco-order-by-clientoid}{Cancel OCO Order By ClientOid}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/batch-cancel-oco-order}{Batch Cancel OCO Orders}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-by-orderld}{Get OCO Order By OrderId}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-by-clientoid}{Get OCO Order By ClientOid}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-detail-by-orderld}{Get OCO Order Detail By OrderId}
\item \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-list}{Get OCO Order List}
}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and the base URL.
\item \strong{add_oco_order(symbol, side, price, size, clientOid, stopPrice, limitPrice, remark, tradeType):} Places a new OCO order.
\item \strong{cancel_oco_order_by_order_id(orderId):} Cancels an OCO order by its system-generated \code{orderId}.
\item \strong{cancel_oco_order_by_client_oid(clientOid):} Cancels an OCO order by its client-assigned \code{clientOid}.
\item \strong{cancel_oco_order_batch(query):} Batch cancels OCO orders with optional filters.
\item \strong{get_oco_order_by_order_id(orderId):} Retrieves basic OCO order info by \code{orderId}.
\item \strong{get_oco_order_by_client_oid(clientOid):} Retrieves basic OCO order info by \code{clientOid}.
\item \strong{get_oco_order_detail_by_order_id(orderId):} Retrieves detailed OCO order info by \code{orderId}.
\item \strong{get_oco_order_list(query):} Retrieves a paginated list of current OCO orders.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  oco <- KucoinSpotOco$new()

  # Place a new OCO order
  order <- await(oco$add_oco_order(
    symbol = "BTC-USDT",
    side = "buy",
    price = "94000",
    size = "0.1",
    clientOid = "oco_test_001",
    stopPrice = "98000",
    limitPrice = "96000",
    remark = "Test OCO"
  ))
  print("New OCO Order:")
  print(order)

  # Retrieve order details
  details <- await(oco$get_oco_order_detail_by_order_id(order$orderId))
  print("OCO Order Details:")
  print(details)

  # Cancel the order by orderId
  canceled <- await(oco$cancel_oco_order_by_order_id(order$orderId))
  print("Canceled Order IDs:")
  print(canceled)

  # List all OCO orders
  order_list <- await(oco$get_oco_order_list(
    query = list(symbol = "BTC-USDT", pageSize = 10)
  ))
  print("OCO Order List:")
  print(order_list)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinSpotOco Object
\subsection{Description}{

Initialises a \code{KucoinSpotOco} object with API credentials and a base URL for managing OCO orders on KuCoin Spot markets asynchronously.
If not provided, credentials are sourced from \code{get_api_keys()} and the base URL from \code{get_base_url()}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Utilised to create an instance of the class with authentication details for OCO order management.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinSpotOco-new}{\code{KucoinSpotOco$new()}}
\item \href{#method-KucoinSpotOco-add_oco_order}{\code{KucoinSpotOco$add_oco_order()}}
\item \href{#method-KucoinSpotOco-cancel_oco_order_by_order_id}{\code{KucoinSpotOco$cancel_oco_order_by_order_id()}}
\item \href{#method-KucoinSpotOco-cancel_oco_order_by_client_oid}{\code{KucoinSpotOco$cancel_oco_order_by_client_oid()}}
\item \href{#method-KucoinSpotOco-cancel_oco_order_batch}{\code{KucoinSpotOco$cancel_oco_order_batch()}}
\item \href{#method-KucoinSpotOco-get_oco_order_by_order_id}{\code{KucoinSpotOco$get_oco_order_by_order_id()}}
\item \href{#method-KucoinSpotOco-get_oco_order_by_client_oid}{\code{KucoinSpotOco$get_oco_order_by_client_oid()}}
\item \href{#method-KucoinSpotOco-get_oco_order_detail_by_order_id}{\code{KucoinSpotOco$get_oco_order_detail_by_order_id()}}
\item \href{#method-KucoinSpotOco-get_oco_order_list}{\code{KucoinSpotOco$get_oco_order_list()}}
\item \href{#method-KucoinSpotOco-clone}{\code{KucoinSpotOco$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinSpotOco} class.
Add OCO Order
\subsection{Description}{

Places a new OCO order on KuCoin Spot trading asynchronously by sending a POST request to \verb{/api/v3/oco/order}.
Combines a limit order and a stop-limit order, where executing one cancels the other. Calls \code{add_oco_order_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Checks required parameters and enums (e.g., \code{side}).
\item \strong{Request Body}: Constructs JSON with order details.
\item \strong{Authentication}: Generates headers asynchronously.
\item \strong{API Call}: Sends POST request with 3-second timeout.
\item \strong{Response}: Processes into a \code{data.table} with the order ID.
}
}

\subsection{API Endpoint}{

\verb{POST https://api.kucoin.com/api/v3/oco/order}
}

\subsection{Usage}{

Utilised to automate trading strategies with paired profit-taking and loss-limiting orders.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/add-oco-order}{KuCoin Add OCO Order}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-add_oco_order"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-add_oco_order}{}}}
\subsection{Method \code{add_oco_order()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$add_oco_order(
  symbol,
  side,
  price,
  size,
  clientOid,
  stopPrice,
  limitPrice,
  remark = NULL,
  tradeType = "TRADE"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}

\item{\code{side}}{Character string; "buy" or "sell". Required.}

\item{\code{price}}{Character string; limit order price (e.g., "94000"). Required.}

\item{\code{size}}{Character string; order quantity (e.g., "0.1"). Required.}

\item{\code{clientOid}}{Character string; unique client ID (max 40 chars). Required.}

\item{\code{stopPrice}}{Character string; stop-limit trigger price (e.g., "98000"). Required.}

\item{\code{limitPrice}}{Character string; stop-limit price (e.g., "96000"). Required.}

\item{\code{remark}}{Character string; optional remarks (max 20 chars).}

\item{\code{tradeType}}{Character string; "TRADE" (default).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character): System-generated OCO order ID.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "orderId": "674c316e688dea0007c7b986"
  \}
\}
}\if{html}{\out{</div>}}

Cancel OCO Order By OrderId
}

\subsection{Description}{

Cancels an OCO order using its system-generated \code{orderId} asynchronously via a DELETE request to \verb{/api/v3/oco/order/\{orderId\}}.
Calls \code{cancel_oco_order_by_order_id_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId} is valid.
\item \strong{URL}: Constructs endpoint with \code{orderId}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns canceled order IDs.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v3/oco/order/\{orderId\}}
}

\subsection{Usage}{

Utilised to remove an OCO order by its system ID, e.g., for strategy adjustments.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-oco-order-by-orderld}{KuCoin Cancel OCO Order By OrderId}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-cancel_oco_order_by_order_id"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-cancel_oco_order_by_order_id}{}}}
\subsection{Method \code{cancel_oco_order_by_order_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$cancel_oco_order_by_order_id(orderId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID. Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{cancelledOrderIds} (list): List of canceled limit and stop-limit order IDs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "cancelledOrderIds": ["vs93gpqc6kkmkk57003gok16", "vs93gpqc6kkmkk57003gok17"]
  \}
\}
}\if{html}{\out{</div>}}

Cancel OCO Order By ClientOid
}

\subsection{Description}{

Cancels an OCO order using its client-assigned \code{clientOid} asynchronously via a DELETE request to \verb{/api/v3/oco/client-order/\{clientOid\}}.
Calls \code{cancel_oco_order_by_client_oid_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{clientOid} is valid.
\item \strong{URL}: Constructs endpoint with \code{clientOid}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns canceled order IDs.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v3/oco/client-order/\{clientOid\}}
}

\subsection{Usage}{

Utilised to cancel an OCO order using a custom client ID, ideal for local tracking.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-oco-order-by-clientoid}{KuCoin Cancel OCO Order By ClientOid}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-cancel_oco_order_by_client_oid"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-cancel_oco_order_by_client_oid}{}}}
\subsection{Method \code{cancel_oco_order_by_client_oid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$cancel_oco_order_by_client_oid(clientOid)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{clientOid}}{Character string; client-assigned order ID. Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{cancelledOrderIds} (list): List of canceled limit and stop-limit order IDs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "cancelledOrderIds": ["vs93gpqc6r0mkk57003gok3h", "vs93gpqc6r0mkk57003gok3i"]
  \}
\}
}\if{html}{\out{</div>}}

Batch Cancel OCO Orders
}

\subsection{Description}{

Cancels multiple OCO orders asynchronously via a DELETE request to \verb{/api/v3/oco/orders}. Calls \code{cancel_oco_order_batch_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Checks \code{query} parameters.
\item \strong{URL}: Builds endpoint with query string.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends DELETE request.
\item \strong{Response}: Returns all canceled order IDs.
}
}

\subsection{API Endpoint}{

\verb{DELETE https://api.kucoin.com/api/v3/oco/orders}
}

\subsection{Usage}{

Utilised to remove multiple OCO orders, optionally filtered by \code{orderIds} or \code{symbol}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/batch-cancel-oco-order}{KuCoin Batch Cancel OCO Order}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-cancel_oco_order_batch"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-cancel_oco_order_batch}{}}}
\subsection{Method \code{cancel_oco_order_batch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$cancel_oco_order_batch(query = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters (e.g., \code{list(orderIds = "id1,id2", symbol = "BTC-USDT")}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{cancelledOrderIds} (list): List of all canceled order IDs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "cancelledOrderIds": ["vs93gpqc750mkk57003gok6i", "vs93gpqc750mkk57003gok6j"]
  \}
\}
}\if{html}{\out{</div>}}

Get OCO Order By OrderId
}

\subsection{Description}{

Retrieves basic OCO order info by \code{orderId} asynchronously via a GET request to \verb{/api/v3/oco/order/\{orderId\}}.
Calls \code{get_oco_order_by_order_id_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId} is valid.
\item \strong{URL}: Constructs endpoint with \code{orderId}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns basic order details.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/oco/order/\{orderId\}}
}

\subsection{Usage}{

Utilised to monitor an OCO order’s status and basic details.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-by-orderld}{KuCoin Get OCO Order By OrderId}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-get_oco_order_by_order_id"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-get_oco_order_by_order_id}{}}}
\subsection{Method \code{get_oco_order_by_order_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$get_oco_order_by_order_id(orderId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID. Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character)
\item \code{symbol} (character)
\item \code{clientOid} (character)
\item \code{orderTime} (integer)
\item \code{status} (character)
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "orderId": "674c3b6e688dea0007c7bab2",
    "symbol": "BTC-USDT",
    "clientOid": "5c52e1203aa6f37f1e493fb",
    "orderTime": 1733049198863,
    "status": "NEW"
  \}
\}
}\if{html}{\out{</div>}}

Get OCO Order By ClientOid
}

\subsection{Description}{

Retrieves basic OCO order info by \code{clientOid} asynchronously via a GET request to \verb{/api/v3/oco/client-order/\{clientOid\}}.
Calls \code{get_oco_order_by_client_oid_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{clientOid} is valid.
\item \strong{URL}: Constructs endpoint with \code{clientOid}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns basic order details.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/oco/client-order/\{clientOid\}}
}

\subsection{Usage}{

Utilised to fetch order details using a custom client ID.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-by-clientoid}{KuCoin Get OCO Order By ClientOid}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-get_oco_order_by_client_oid"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-get_oco_order_by_client_oid}{}}}
\subsection{Method \code{get_oco_order_by_client_oid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$get_oco_order_by_client_oid(clientOid)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{clientOid}}{Character string; client-assigned order ID. Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character)
\item \code{symbol} (character)
\item \code{clientOid} (character)
\item \code{orderTime} (integer)
\item \code{status} (character)
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "orderId": "674c3cfa72cf2800072ee7ce",
    "symbol": "BTC-USDT",
    "clientOid": "5c52e1203aa6f3g7f1e493fb",
    "orderTime": 1733049594803,
    "status": "NEW"
  \}
\}
}\if{html}{\out{</div>}}

Get OCO Order Detail By OrderId
}

\subsection{Description}{

Retrieves detailed OCO order info by \code{orderId} asynchronously via a GET request to \verb{/api/v3/oco/order/details/\{orderId\}}.
Calls \code{get_oco_order_detail_by_order_id_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId} is valid.
\item \strong{URL}: Constructs endpoint with \code{orderId}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns detailed order info with nested orders.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/oco/order/details/\{orderId\}}
}

\subsection{Usage}{

Utilised to inspect the full details of an OCO order, including its limit and stop-limit components.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-detail-by-orderld}{KuCoin Get OCO Order Detail By OrderId}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-get_oco_order_detail_by_order_id"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-get_oco_order_detail_by_order_id}{}}}
\subsection{Method \code{get_oco_order_detail_by_order_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$get_oco_order_detail_by_order_id(orderId)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID. Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character)
\item \code{symbol} (character)
\item \code{clientOid} (character)
\item \code{orderTime} (integer)
\item \code{status} (character)
\item \code{orders} (list): Nested list of limit and stop-limit order details.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "orderId": "674c3b6e688dea0007c7bab2",
    "symbol": "BTC-USDT",
    "clientOid": "5c52e1203aa6f37f1e493fb",
    "orderTime": 1733049198863,
    "status": "NEW",
    "orders": [
      \{"id": "vs93gpqc7dn6h3fa003sfelj", "symbol": "BTC-USDT", "side": "buy", "price": "94000", "stopPrice": "94000", "size": "0.1", "status": "NEW"\},
      \{"id": "vs93gpqc7dn6h3fa003sfelk", "symbol": "BTC-USDT", "side": "buy", "price": "96000", "stopPrice": "98000", "size": "0.1", "status": "NEW"\}
    ]
  \}
\}
}\if{html}{\out{</div>}}

Get OCO Order List
}

\subsection{Description}{

Retrieves a paginated list of OCO orders asynchronously via a GET request to \verb{/api/v3/oco/orders}.
Calls \code{get_oco_order_list_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Checks \code{query} parameters.
\item \strong{URL}: Builds endpoint with query string.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns a list of OCO orders.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/oco/orders}
}

\subsection{Usage}{

Utilised to review all current OCO orders, with optional filtering.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-oco-order-list}{KuCoin Get OCO Order List}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-get_oco_order_list"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-get_oco_order_list}{}}}
\subsection{Method \code{get_oco_order_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$get_oco_order_list(query = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{Named list; optional filters (e.g., \code{list(symbol = "BTC-USDT", pageSize = 10)}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{orderId} (character)
\item \code{symbol} (character)
\item \code{clientOid} (character)
\item \code{orderTime} (integer)
\item \code{status} (character)
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "currentPage": 1,
    "pageSize": 50,
    "totalNum": 1,
    "totalPage": 1,
    "items": [
      \{"orderId": "674c3cfa72cf2800072ee7ce", "symbol": "BTC-USDT", "clientOid": "5c52e1203aa6f3g7f1e493fb", "orderTime": 1733049594803, "status": "NEW"\}
    ]
  \}
\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotOco-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotOco-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotOco$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
