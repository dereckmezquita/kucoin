% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinSpotGetOrder.R
\name{KucoinSpotGetOrder}
\alias{KucoinSpotGetOrder}
\title{KucoinSpotGetOrder Class for KuCoin Spot Trading Order Retrieval}
\value{
Not applicable (class definition; see individual methods for return values).
}
\description{
The \code{KucoinSpotGetOrder} class provides an asynchronous interface for retrieving spot trading order information from KuCoin.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that resolve to \code{data.table} objects.
This class focuses on querying order details, trade history, open and closed orders, and symbols with active orders.
}
\details{
\subsection{Purpose and Scope}{

This class is designed for retrieving and monitoring order-related data in the KuCoin Spot trading system, including:
\itemize{
\item \strong{Order Details}: Fetching specific order information by \code{orderId} or \code{clientOid}.
\item \strong{Trade History}: Retrieving fill details for orders or symbols.
\item \strong{Order States}: Listing open and closed orders for a symbol.
\item \strong{Portfolio Overview}: Identifying symbols with active orders.
}
}

\subsection{Workflow Overview}{

Not applicable (class definition overview).
}

\subsection{API Endpoint}{

Not applicable (class-level documentation; see individual methods for specific endpoints).
}

\subsection{Usage}{

Utilised by traders and developers to programmatically query and monitor Spot trading orders on KuCoin. The class is initialized with API credentials,
automatically loaded via \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. For detailed endpoint information,
parameters, and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/introduction}{KuCoin API Documentation - Spot Trading Orders}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and base URL.
\item \strong{get_order_by_order_id(orderId, symbol):} Retrieves detailed order info by \code{orderId}.
\item \strong{get_order_by_client_oid(clientOid, symbol):} Retrieves detailed order info by \code{clientOid}.
\item \strong{get_trade_history(symbol, orderId, side, type, lastId, limit, startAt, endAt):} Fetches trade history (fills) for a symbol or order.
\item \strong{get_symbols_with_open_orders():} Lists symbols with active orders.
\item \strong{get_open_orders(symbol):} Retrieves all active orders for a symbol.
\item \strong{get_closed_orders(symbol, side, type, startAt, endAt, limit, max_pages):} Retrieves all closed orders for a symbol with pagination.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  queries <- KucoinSpotGetOrder$new()

  # Retrieve order details by orderId
  order <- await(queries$get_order_by_order_id("6717422bd51c29000775ea03", "BTC-USDT"))
  print("Order Details by OrderId:"); print(order)

  # Retrieve order details by clientOid
  order_by_client <- await(queries$get_order_by_client_oid("5c52e11203aa677f33e493fb", "BTC-USDT"))
  print("Order Details by ClientOid:"); print(order_by_client)

  # Get trade history
  trades <- await(queries$get_trade_history(symbol = "BTC-USDT", limit = 50))
  print("Trade History:"); print(trades)

  # Get symbols with open orders
  active_symbols <- await(queries$get_symbols_with_open_orders())
  print("Symbols with Open Orders:"); print(active_symbols)

  # Get open orders
  open_orders <- await(queries$get_open_orders("BTC-USDT"))
  print("Open Orders:"); print(open_orders)

  # Get closed orders
  closed_orders <- await(queries$get_closed_orders(
    symbol = "BTC-USDT", limit = 50, max_pages = 2
  ))
  print("Closed Orders:"); print(closed_orders)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinSpotGetOrder Object
\subsection{Description}{

Initialises a \code{KucoinSpotGetOrder} object with API credentials and a base URL for retrieving Spot trading order data asynchronously.
If not provided, credentials are sourced from \code{get_api_keys()} and the base URL from \code{get_base_url()}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Utilised to create an instance for querying Spot trading orders and related data.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Monitoring Hub}: Use this as a dedicated instance for order querying in your trading system, integrating with real-time feeds for timely updates.
\item \strong{Secure Setup}: Load credentials via \code{get_api_keys()} from a secure source (e.g., environment variables), ensuring safe deployment.
\item \strong{Scalability}: Reuse this instance across your botâ€™s lifecycle, pairing with other classes (e.g., \code{KucoinSpotOCO}) for full order management.
}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinSpotGetOrder-new}{\code{KucoinSpotGetOrder$new()}}
\item \href{#method-KucoinSpotGetOrder-get_order_by_order_id}{\code{KucoinSpotGetOrder$get_order_by_order_id()}}
\item \href{#method-KucoinSpotGetOrder-get_order_by_client_oid}{\code{KucoinSpotGetOrder$get_order_by_client_oid()}}
\item \href{#method-KucoinSpotGetOrder-get_trade_history}{\code{KucoinSpotGetOrder$get_trade_history()}}
\item \href{#method-KucoinSpotGetOrder-get_symbols_with_open_orders}{\code{KucoinSpotGetOrder$get_symbols_with_open_orders()}}
\item \href{#method-KucoinSpotGetOrder-get_open_orders}{\code{KucoinSpotGetOrder$get_open_orders()}}
\item \href{#method-KucoinSpotGetOrder-get_closed_orders}{\code{KucoinSpotGetOrder$get_closed_orders()}}
\item \href{#method-KucoinSpotGetOrder-clone}{\code{KucoinSpotGetOrder$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinSpotGetOrder} class.
Get Order By OrderId
\subsection{Description}{

Retrieves detailed info for a spot order by its system-generated \code{orderId} via a GET request to \verb{/api/v1/hf/orders/\{orderId\}}.
Calls \code{get_order_by_order_id_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{orderId} and \code{symbol} are valid.
\item \strong{URL}: Constructs endpoint with \code{orderId} and \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns detailed order info with datetime columns.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/orders/\{orderId\}?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to fetch comprehensive details of a specific order by its system ID.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-order-by-orderld}{KuCoin Get Order By OrderId}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Order Tracking}: Monitor \code{active} and \code{inOrderBook} to confirm order status post-placement (e.g., still open or recently filled).
\item \strong{Execution Verification}: Check \code{dealSize} and \code{dealFunds} against expected fills, triggering alerts if discrepancies arise.
\item \strong{Time Analysis}: Use \code{createdAtDatetime} and \code{lastUpdatedAtDatetime} to assess order lifecycle, adjusting strategies if delays occur.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_order_by_order_id"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_order_by_order_id}{}}}
\subsection{Method \code{get_order_by_order_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_order_by_order_id(orderId, symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{orderId}}{Character string; system-generated order ID (e.g., "6717422bd51c29000775ea03"). Required.}

\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with columns including:
\itemize{
\item \code{id} (character), \code{clientOid} (character), \code{symbol} (character), \code{type} (character), \code{side} (character),
\item \code{price} (character), \code{size} (character), \code{dealSize} (character), \code{active} (logical), \code{createdAtDatetime} (POSIXct)
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"id": "6717422bd51c29000775ea03", "symbol": "BTC-USDT", "type": "limit", "side": "buy", "price": "70000", "size": "0.00001", "dealSize": "0.00001", "active": false, "createdAt": 1729577515444\}\}
}\if{html}{\out{</div>}}

Get Order By ClientOid
}

\subsection{Description}{

Retrieves detailed info for a spot order by its client-assigned \code{clientOid} via a GET request to \verb{/api/v1/hf/orders/client-order/\{clientOid\}}.
Calls \code{get_order_by_client_oid_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{clientOid} and \code{symbol} are valid.
\item \strong{URL}: Constructs endpoint with \code{clientOid} and \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns detailed order info with datetime columns.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/orders/client-order/\{clientOid\}?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to fetch comprehensive order details using a custom client ID.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-order-by-clientoid}{KuCoin Get Order By ClientOid}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Custom Sync}: Use \code{clientOid} to align KuCoin data with your systemâ€™s order records, especially after network issues.
\item \strong{Status Checks}: Monitor \code{active} to react to order completion, updating position trackers accordingly.
\item \strong{Audit Trail}: Log \code{dealFunds} and \code{fee} for cost analysis, ensuring profitability calculations are accurate.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_order_by_client_oid"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_order_by_client_oid}{}}}
\subsection{Method \code{get_order_by_client_oid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_order_by_client_oid(clientOid, symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{clientOid}}{Character string; client-assigned order ID (e.g., "5c52e11203aa677f33e493fb"). Required.}

\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with columns including:
\itemize{
\item \code{id} (character), \code{clientOid} (character), \code{symbol} (character), \code{type} (character), \code{side} (character),
\item \code{price} (character), \code{size} (character), \code{dealSize} (character), \code{active} (logical), \code{createdAtDatetime} (POSIXct)
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"id": "6717422bd51c29000775ea03", "clientOid": "5c52e11203aa677f33e493fb", "symbol": "BTC-USDT", "type": "limit", "side": "buy", "price": "70000", "size": "0.00001", "dealSize": "0.00001", "active": false, "createdAt": 1729577515444\}\}
}\if{html}{\out{</div>}}

Get Trade History
}

\subsection{Description}{

Retrieves latest spot transaction details (fills) for a symbol or order via a GET request to \verb{/api/v1/hf/fills}.
Calls \code{get_trade_history_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{symbol} or \code{orderId} is valid.
\item \strong{URL}: Builds endpoint with query parameters.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns fill details with datetime column.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/fills}
}

\subsection{Usage}{

Utilised to fetch fill history for analysis or verification.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-trade-history}{KuCoin Get Trade History}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Performance Tracking}: Analyze \code{price}, \code{size}, and \code{fee} to assess trade execution quality, adjusting strategies if costs are high.
\item \strong{Fill Confirmation}: Use \code{orderId} to verify fills post-order placement, ensuring expected trades occurred.
\item \strong{Pagination}: Leverage \code{lastId} and \code{limit} for incremental updates, syncing with a trade log database efficiently.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_trade_history"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_trade_history}{}}}
\subsection{Method \code{get_trade_history()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_trade_history(
  symbol = NULL,
  orderId = NULL,
  side = NULL,
  type = NULL,
  lastId = NULL,
  limit = 20,
  startAt = NULL,
  endAt = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required if \code{orderId} not provided.}

\item{\code{orderId}}{Character string; order ID. Optional, overrides other filters if provided.}

\item{\code{side}}{Character string; "buy" or "sell". Optional.}

\item{\code{type}}{Character string; "limit" or "market". Optional.}

\item{\code{lastId}}{Integer; last fill ID for pagination. Optional.}

\item{\code{limit}}{Integer; fills per request (1-100, default 20). Optional.}

\item{\code{startAt}}{Integer; start time (ms). Optional.}

\item{\code{endAt}}{Integer; end time (ms). Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with columns including:
\itemize{
\item \code{id} (integer), \code{orderId} (character), \code{symbol} (character), \code{price} (character), \code{size} (character),
\item \code{funds} (character), \code{fee} (character), \code{createdAtDatetime} (POSIXct)
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"items": [\{"id": 19814995255305, "orderId": "6717422bd51c29000775ea03", "symbol": "BTC-USDT", "price": "67717.6", "size": "0.00001", "funds": "0.677176", "fee": "0.000677176", "createdAt": 1729577515473\}], "lastId": 19814995255305\}\}
}\if{html}{\out{</div>}}

Get Symbols With Open Orders
}

\subsection{Description}{

Retrieves a list of symbols with active orders via a GET request to \verb{/api/v1/hf/orders/active/symbols}.
Calls \code{get_symbols_with_open_order_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL}: Constructs endpoint with no parameters.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns a \code{data.table} of symbols.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/orders/active/symbols}
}

\subsection{Usage}{

Utilised to identify markets with ongoing order activity.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-symbols-with-open-order}{KuCoin Get Symbols With Open Order}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Portfolio Snapshot}: Poll periodically to detect active markets, triggering detailed queries (e.g., \code{get_open_orders}) for each symbol.
\item \strong{Resource Allocation}: Prioritize trading logic or risk checks on returned symbols, optimizing bot performance.
\item \strong{Idle Detection}: If empty, signal your system to place new orders or adjust strategies for inactive markets.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_symbols_with_open_orders"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_symbols_with_open_orders}{}}}
\subsection{Method \code{get_symbols_with_open_orders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_symbols_with_open_orders()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{symbols} (character): Vector of trading pair symbols with active orders.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"symbols": ["ETH-USDT", "BTC-USDT"]\}\}
}\if{html}{\out{</div>}}

Get Open Orders
}

\subsection{Description}{

Retrieves all active spot orders for a symbol via a GET request to \verb{/api/v1/hf/orders/active}.
Calls \code{get_open_orders_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{symbol} is valid.
\item \strong{URL}: Constructs endpoint with \code{symbol}.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Sends GET request.
\item \strong{Response}: Returns active orders with datetime columns.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/orders/active?symbol=\{symbol\}}
}

\subsection{Usage}{

Utilised to list all active orders for a specific trading pair.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-open-orders}{KuCoin Get Open Orders}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Order Management}: Monitor \code{remainSize} to adjust or cancel orders nearing fill limits, maintaining strategy alignment.
\item \strong{Risk Exposure}: Aggregate \code{funds} across orders to assess total exposure per symbol, triggering risk mitigations if over thresholds.
\item \strong{Stale Orders}: Cancel orders with old \code{createdAtDatetime} (e.g., >24 hours) using a paired cancel class method.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_open_orders"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_open_orders}{}}}
\subsection{Method \code{get_open_orders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_open_orders(symbol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with columns including:
\itemize{
\item \code{id} (character), \code{clientOid} (character), \code{symbol} (character), \code{type} (character), \code{side} (character),
\item \code{price} (character), \code{size} (character), \code{remainSize} (character), \code{active} (logical), \code{createdAtDatetime} (POSIXct)
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": [\{"id": "67120bbef094e200070976f6", "symbol": "BTC-USDT", "type": "limit", "side": "buy", "price": "50000", "size": "0.00001", "remainSize": "0.00001", "active": true, "createdAt": 1729235902748\}]\}
}\if{html}{\out{</div>}}

Get Closed Orders
}

\subsection{Description}{

Retrieves all closed spot orders for a symbol via a GET request to \verb{/api/v1/hf/orders/done}, with pagination.
Calls \code{get_closed_orders_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures \code{symbol} and \code{limit} are valid.
\item \strong{URL}: Builds endpoint with query parameters.
\item \strong{Authentication}: Generates headers.
\item \strong{API Call}: Fetches pages until complete or \code{max_pages} reached.
\item \strong{Response}: Returns closed orders with datetime columns.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/hf/orders/done}
}

\subsection{Usage}{

Utilised to fetch historical closed orders for analysis.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/get-closed-orders}{KuCoin Get Closed Orders}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Performance Review}: Analyze \code{dealFunds} and \code{fee} to evaluate past trades, refining entry/exit points.
\item \strong{Time Filters}: Use \code{startAt} and \code{endAt} to fetch specific periods (e.g., last 24 hours) for daily reconciliations.
\item \strong{Pagination Control}: Set \code{max_pages} to limit data volume in high-frequency systems, balancing detail with performance.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-get_closed_orders"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-get_closed_orders}{}}}
\subsection{Method \code{get_closed_orders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$get_closed_orders(
  symbol,
  side = NULL,
  type = NULL,
  startAt = NULL,
  endAt = NULL,
  limit = 20,
  max_pages = Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Character string; trading pair (e.g., "BTC-USDT"). Required.}

\item{\code{side}}{Character string; "buy" or "sell". Optional.}

\item{\code{type}}{Character string; "limit" or "market". Optional.}

\item{\code{startAt}}{Numeric; start time (ms). Optional.}

\item{\code{endAt}}{Numeric; end time (ms). Optional.}

\item{\code{limit}}{Integer; orders per page (1-100, default 20). Optional.}

\item{\code{max_pages}}{Numeric; max pages to fetch (default \code{Inf}). Optional.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with columns including:
\itemize{
\item \code{id} (character), \code{clientOid} (character), \code{symbol} (character), \code{type} (character), \code{side} (character),
\item \code{price} (character), \code{size} (character), \code{dealSize} (character), \code{active} (logical), \code{createdAtDatetime} (POSIXct)
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"lastId": 19814995255305, "items": [\{"id": "6717422bd51c29000775ea03", "symbol": "BTC-USDT", "type": "limit", "side": "buy", "price": "70000", "size": "0.00001", "dealSize": "0.00001", "active": false, "createdAt": 1729577515444\}]\}\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSpotGetOrder-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSpotGetOrder-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSpotGetOrder$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
