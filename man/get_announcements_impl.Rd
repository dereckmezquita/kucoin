% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_market_data.R
\name{get_announcements_impl}
\alias{get_announcements_impl}
\title{Get Announcements (Implementation)}
\usage{
get_announcements_impl(
  base_url = get_base_url(),
  query = list(),
  page_size = 50,
  max_pages = Inf,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{query}{Named list; additional query parameters to filter announcements. Supported:
\itemize{
\item \code{currentPage} (integer, optional): Page number to retrieve.
\item \code{pageSize} (integer, optional): Number of announcements per page.
\item \code{annType} (string, optional): Type of announcements (e.g., \code{"latest-announcements"}, \code{"activities"}, \code{"product-updates"}, \code{"vip"}, \code{"maintenance-updates"}, \code{"delistings"}, \code{"others"}, \code{"api-campaigns"}, \code{"new-listings"}).
\item \code{lang} (string, optional): Language (e.g., \code{"en_US"}, \code{"zh_HK"}, \code{"ja_JP"}).
\item \code{startTime} (integer, optional): Start time in milliseconds.
\item \code{endTime} (integer, optional): End time in milliseconds.
}}

\item{page_size}{Integer; number of results per page (default 50).}

\item{max_pages}{Numeric; maximum number of pages to fetch (default \code{Inf} for all pages).}
}
\value{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{annId} (integer): Unique announcement ID.
\item \code{annTitle} (character): Announcement title.
\item \code{annType} (list): List of announcement types.
\item \code{annDesc} (character): Announcement description.
\item \code{cTime} (integer): Release time in Unix milliseconds.
\item \code{language} (character): Language of the announcement.
\item \code{annUrl} (character): URL to the full announcement.
\item \code{currentPage} (integer): Current page number.
\item \code{pageSize} (integer): Records per page.
\item \code{totalNum} (integer): Total number of announcements.
\item \code{totalPage} (integer): Total pages available.
}
}
\description{
Retrieves the latest announcements from the KuCoin API asynchronously, aggregating paginated results into a single \code{data.table}. This internal function is designed for use within a larger system and is not intended for direct end-user consumption.
}
\details{
\subsection{Workflow Overview}{
\enumerate{
\item \strong{Query Construction}: Merges default parameters (\code{currentPage = 1}, \code{pageSize = 50}, \code{annType = "latest-announcements"}, \code{lang = "en_US"}) with user-supplied \code{query} using \code{utils::modifyList()}.
\item \strong{URL Assembly}: Combines \code{base_url} with \verb{/api/v3/announcements} and the query string from \code{build_query()}.
\item \strong{Page Fetching}: Defines an async \code{fetch_page} function to send a GET request with a 10-second timeout via \code{httr::GET()}.
\item \strong{Pagination}: Utilises \code{auto_paginate} to fetch all pages up to \code{max_pages}, extracting \code{"items"} from each response.
\item \strong{Aggregation}: Combines results into a \code{data.table} with \code{data.table::rbindlist()}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v3/announcements}
}

\subsection{Usage}{

Utilised to gather KuCoin news announcements (e.g., updates, promotions) for market analysis or display.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/spot-trading/market-data/get-announcements}{KuCoin Get Announcements}
}
}
\examples{
\dontrun{
main_async <- coro::async(function() {
  # Default: latest announcements in English
  announcements <- await(get_announcements_impl())
  print(announcements)
  # Filtered by type and language
  activities <- await(get_announcements_impl(query = list(annType = "activities", lang = "en_US")))
  print(activities)
})
main_async()
while (!later::loop_empty()) later::run_now()
}
}
