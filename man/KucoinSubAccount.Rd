% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinSubAccount.R
\name{KucoinSubAccount}
\alias{KucoinSubAccount}
\title{KucoinSubAccount Class for KuCoin Sub-Account Endpoints}
\value{
Not applicable (class definition; see individual methods for return values).
}
\description{
The \code{KucoinSubAccount} class provides an asynchronous interface for managing sub-accounts under a KuCoin master account.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that typically resolve to \code{data.table}
objects. This class supports creating new sub-accounts, retrieving summary information for all sub-accounts, and fetching
detailed balance data for specific sub-accounts.
}
\details{
\subsection{Workflow Overview}{

Not applicable (class definition overview).
}

\subsection{API Endpoint}{

Not applicable (class-level documentation; see individual methods).
}

\subsection{Usage}{

Utilised by users to manage KuCoin sub-accounts programmatically. The class is initialised with API credentials,
automatically loaded via \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. For detailed endpoint
information and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}

This method leverages the \verb{/api/v2/sub-accounts} endpoint, which provides paginated data including balance details for each sub-account’s account types.
Sub-accounts with no balance entries (i.e., all account type arrays empty) are excluded from the result, focusing only on sub-accounts with active balances.
Pagination is handled automatically, respecting the API’s constraints on \code{pageSize} (10–100) and using \code{currentPage} to iterate through results.
Numeric fields are explicitly cast from character strings to ensure proper data types for downstream analysis.
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and the base URL.
\item \strong{add_subaccount(password, subName, access, remarks):} Creates a new sub-account under the master account.
\item \strong{get_subaccount_list_summary(page_size, max_pages):} Retrieves a paginated summary of all sub-accounts.
\item \strong{get_subaccount_detail_balance(subUserId, includeBaseAmount):} Retrieves detailed balance information for a specific sub-account.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating all methods
main_async <- coro::async(function() {
  # Initialise the class
  sub_acc <- KucoinSubAccount$new()

  # Add a new sub-account
  new_sub <- await(sub_acc$add_subaccount(
    password = "TestPass123",
    subName = "TestSub123",
    access = "Spot",
    remarks = "Test sub-account"
  ))
  print("New Sub-Account:")
  print(new_sub)

  # Get summary of all sub-accounts
  summary <- await(sub_acc$get_subaccount_list_summary(page_size = 50, max_pages = 2))
  print("Sub-Account Summary:")
  print(summary)

  # Get balance details for the first sub-account (if any)
  if (nrow(summary) > 0) {
    sub_id <- summary[1, uid]
    balance <- await(sub_acc$get_subaccount_detail_balance(sub_id, includeBaseAmount = TRUE))
    print("Sub-Account Balance:")
    print(balance)
  }

  # Get Spot sub-account list (V2)
  spot_accounts <- await(sub_acc$get_subaccount_spot_v2(page_size = 50, max_pages = 2))
  print("Spot Sub-Accounts (V2):")
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinSubAccount Object
\subsection{Description}{

Initialises a \code{KucoinSubAccount} object with API credentials and a base URL for managing KuCoin sub-accounts asynchronously.
If not provided, credentials are sourced from \code{get_api_keys()} and the base URL from \code{get_base_url()}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Utilised to create an instance of the class with authentication details for sub-account management.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction}{KuCoin API Authentication}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinSubAccount-new}{\code{KucoinSubAccount$new()}}
\item \href{#method-KucoinSubAccount-add_subaccount}{\code{KucoinSubAccount$add_subaccount()}}
\item \href{#method-KucoinSubAccount-get_subaccount_list_summary}{\code{KucoinSubAccount$get_subaccount_list_summary()}}
\item \href{#method-KucoinSubAccount-get_subaccount_detail_balance}{\code{KucoinSubAccount$get_subaccount_detail_balance()}}
\item \href{#method-KucoinSubAccount-get_subaccount_spot_v2}{\code{KucoinSubAccount$get_subaccount_spot_v2()}}
\item \href{#method-KucoinSubAccount-clone}{\code{KucoinSubAccount$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinSubAccount} class.
Add Sub-Account
\subsection{Description}{

Creates a new sub-account under the master account asynchronously by sending a POST request to the KuCoin API.
This method constructs a JSON request body, generates authentication headers, and processes the response into a \code{data.table}.
It calls \code{add_subaccount_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL Construction}: Combines the base URL with \verb{/api/v2/sub/user/created}.
\item \strong{Request Body Preparation}: Builds a list with \code{password}, \code{subName}, \code{access}, and optional \code{remarks}, converted to JSON.
\item \strong{Header Preparation}: Generates authentication headers asynchronously using \code{build_headers()}.
\item \strong{API Request}: Sends a POST request with a 3-second timeout via \code{httr::POST()}.
\item \strong{Response Processing}: Validates the response and converts the \code{"data"} field into a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{POST https://api.kucoin.com/api/v2/sub/user/created}
}

\subsection{Usage}{

Utilised by users to create sub-accounts for managing separate trading permissions within the KuCoin ecosystem.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/add-subaccount}{KuCoin Add Sub-Account}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-add_subaccount"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-add_subaccount}{}}}
\subsection{Method \code{add_subaccount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$add_subaccount(password, subName, access, remarks = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{password}}{Character string; sub-account password (7–24 characters, must contain letters and numbers).}

\item{\code{subName}}{Character string; sub-account name (7–32 characters, must include one letter and one number, no spaces).}

\item{\code{access}}{Character string; permission type (\code{"Spot"}, \code{"Futures"}, \code{"Margin"}).}

\item{\code{remarks}}{Character string (optional); remarks about the sub-account (1–24 characters if provided).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{uid} (integer): Unique sub-account identifier.
\item \code{subName} (character): Sub-account name.
\item \code{remarks} (character): Provided remarks or notes.
\item \code{access} (character): Permission type granted.
Get Sub-Account List Summary (Paginated)
}
\subsection{Description}{

Retrieves a paginated summary of all sub-accounts associated with the master account asynchronously, aggregating results into a \code{data.table}.
This method converts \code{createdAt} timestamps to POSIXct and calls \code{get_subaccount_list_summary_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Pagination Initialisation}: Sets an initial query with \code{currentPage = 1} and specified \code{page_size}.
\item \strong{Page Fetching}: Defines an async helper to fetch each page with authentication headers.
\item \strong{Automatic Pagination}: Uses \code{auto_paginate} to fetch all pages up to \code{max_pages}.
\item \strong{Aggregation}: Combines results into a \code{data.table}, converting \code{createdAt} to \code{createdDatetime}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/sub/user}
}

\subsection{Usage}{

Utilised by users to obtain a comprehensive overview of all sub-accounts, including creation details and permissions.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-list-summary-info}{KuCoin Get Sub-Account List Summary Info}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_list_summary"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_list_summary}{}}}
\subsection{Method \code{get_subaccount_list_summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_list_summary(page_size = 100, max_pages = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{page_size}}{Integer; number of results per page (1–100, default 100).}

\item{\code{max_pages}}{Numeric; maximum number of pages to fetch (default \code{Inf} for all pages).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{currentPage} (integer): Current page number.
\item \code{pageSize} (integer): Results per page.
\item \code{totalNum} (integer): Total sub-accounts.
\item \code{totalPage} (integer): Total pages.
\item \code{userId} (character): Master account identifier.
\item \code{uid} (integer): Sub-account identifier.
\item \code{subName} (character): Sub-account name.
\item \code{status} (integer): Sub-account status.
\item \code{type} (integer): Sub-account type.
\item \code{access} (character): Permission type (e.g., \code{"All"}, \code{"Spot"}).
\item \code{createdAt} (integer): Creation timestamp in milliseconds.
\item \code{createdDatetime} (POSIXct): Converted creation datetime.
\item \code{remarks} (character): Sub-account remarks.
Get Sub-Account Detail - Balance
}
\subsection{Description}{

Retrieves detailed balance information for a specific sub-account identified by \code{subUserId} asynchronously.
This method aggregates balances across account types into a \code{data.table} and calls \code{get_subaccount_detail_balance_impl}.
Use \code{get_subaccount_list_summary()} to obtain \code{subUserId}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{URL Construction}: Combines the base URL with \verb{/api/v1/sub-accounts/\{subUserId\}} and a query string for \code{includeBaseAmount}.
\item \strong{Header Preparation}: Generates authentication headers using \code{build_headers()}.
\item \strong{API Request}: Sends a GET request with a 3-second timeout via \code{httr::GET()}.
\item \strong{Response Processing}: Aggregates non-empty account type arrays (\code{mainAccounts}, etc.) into a \code{data.table}, adding \code{accountType}, \code{subUserId}, and \code{subName}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/sub-accounts/\{subUserId\}?includeBaseAmount=\{includeBaseAmount\}}
}

\subsection{Usage}{

Utilised by users to monitor detailed balances across various account types for a specific sub-account.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-detail-balance}{KuCoin Get Sub-Account Detail Balance}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_detail_balance"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_detail_balance}{}}}
\subsection{Method \code{get_subaccount_detail_balance()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_detail_balance(
  subUserId,
  includeBaseAmount = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{subUserId}}{Character string; sub-account user ID (e.g., from \code{get_subaccount_list_summary()}).}

\item{\code{includeBaseAmount}}{Logical; whether to include currencies with zero balance (default \code{FALSE}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} containing:
\itemize{
\item \code{currency} (character): Currency code.
\item \code{balance} (character): Total balance.
\item \code{available} (character): Available amount.
\item \code{holds} (character): Locked amount.
\item \code{accountType} (character): Source type (e.g., \code{"mainAccounts"}, \code{"tradeAccounts"}).
\item \code{subUserId} (character): Sub-account user ID.
\item \code{subName} (character): Sub-account name.
Additional fields like \code{baseCurrency}, \code{baseAmount} may be present.
Get Spot Sub-Account List - Balance Details (V2)
}
\subsection{Description}{

Retrieves paginated Spot sub-account balance information for all sub-accounts associated with the master account asynchronously,
aggregating results into a \code{data.table}. This method fetches data from the KuCoin API endpoint \verb{/api/v2/sub-accounts}, processes
balance details across account types (\code{mainAccounts}, \code{tradeAccounts}, \code{marginAccounts}, \code{tradeHFAccounts}), and combines them
into a single table. It calls \code{get_subaccount_spot_v2_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Pagination Initialisation}: Sets an initial query with \code{currentPage = 1} and the specified \code{page_size}.
\item \strong{Page Fetching}: Defines an asynchronous helper to fetch each page, constructing the URL with query parameters and authentication headers.
\item \strong{Automatic Pagination}: Uses \code{auto_paginate} to fetch all pages up to \code{max_pages}, flattening items into a single list.
\item \strong{Balance Aggregation}: Processes each sub-account’s account type arrays, converting non-empty arrays into \code{data.table}s with an \code{accountType} column,
and aggregates them with \code{subUserId} and \code{subName}.
\item \strong{Type Casting}: Converts balance-related fields to numeric types for consistency.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/sub-accounts}
}

\subsection{Usage}{

Utilised by users to obtain a comprehensive view of Spot sub-account balances across all sub-accounts under the master account. This method is ideal
for monitoring aggregated balance details without needing to query individual sub-accounts separately.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-list-spot-balance-v2}{KuCoin Get Sub-Account List - Spot Balance (V2)}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_spot_v2"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_spot_v2}{}}}
\subsection{Method \code{get_subaccount_spot_v2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_spot_v2(page_size = 100, max_pages = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{page_size}}{Integer; number of sub-accounts per page (10–100, default 100). The KuCoin API enforces a minimum of 10 and a maximum of 100.}

\item{\code{max_pages}}{Numeric; maximum number of pages to fetch (default \code{Inf} for all pages). Use a finite value to limit the number of API requests.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} containing aggregated sub-account balance information, with columns:
\itemize{
\item \code{subUserId} (character): Sub-account user ID.
\item \code{subName} (character): Sub-account name.
\item \code{accountType} (character): Type of account (e.g., \code{"mainAccounts"}, \code{"tradeAccounts"}, \code{"marginAccounts"}, \code{"tradeHFAccounts"}).
\item \code{currency} (character): Currency code (e.g., \code{"USDT"}).
\item \code{balance} (numeric): Total balance in the currency.
\item \code{available} (numeric): Amount available for trading or withdrawal.
\item \code{holds} (numeric): Amount locked or held.
\item \code{baseCurrency} (character): Base currency code (e.g., \code{"BTC"}).
\item \code{baseCurrencyPrice} (numeric): Price of the base currency at the time of the snapshot.
\item \code{baseAmount} (numeric): Equivalent amount in the base currency.
\item \code{tag} (character): Tag associated with the account (e.g., \code{"DEFAULT"}).
\item If no balances are present across all sub-accounts, an empty \code{data.table} is returned.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
