% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KucoinSubAccount.R
\name{KucoinSubAccount}
\alias{KucoinSubAccount}
\title{KucoinSubAccount Class for KuCoin Sub-Account Management}
\description{
The \code{KucoinSubAccount} class provides an asynchronous interface for managing sub-accounts under a KuCoin master account.
It leverages the \code{coro} package for non-blocking HTTP requests, returning promises that resolve to \code{data.table} objects.
This class supports creating sub-accounts, retrieving summaries and detailed balance information for all sub-accounts,
and fetching comprehensive Spot sub-account balance details across account types.
}
\details{
\subsection{Purpose and Scope}{

This class is designed to facilitate sub-account administration within the KuCoin ecosystem, including:
\itemize{
\item \strong{Sub-Account Creation}: Adding new sub-accounts with specific permissions.
\item \strong{Summary Overview}: Listing all sub-accounts with basic details.
\item \strong{Balance Details}: Retrieving financial metrics for individual or all sub-accounts.
}
}

\subsection{Usage}{

Utilised by traders and developers to programmatically manage KuCoin sub-accounts. The class is initialized with API
credentials, sourced from \code{get_api_keys()} if not provided, and a base URL from \code{get_base_url()}. All methods require
authentication as they operate under the master account’s privileges. For detailed endpoint information, parameters,
and response schemas, refer to the official \href{https://www.kucoin.com/docs-new}{KuCoin API Documentation}.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/introduction}{KuCoin API Documentation - Sub-Account}
}
}
\section{Methods}{

\itemize{
\item \strong{initialize(keys, base_url):} Initialises the object with API credentials and base URL.
\item \strong{add_subaccount(password, subName, access, remarks):} Creates a new sub-account.
\item \strong{get_subaccount_list_summary(page_size, max_pages):} Retrieves a paginated summary of all sub-accounts.
\item \strong{get_subaccount_detail_balance(subUserId, includeBaseAmount):} Fetches detailed balance for a specific sub-account.
\item \strong{get_subaccount_spot_v2(page_size, max_pages):} Retrieves Spot sub-account balance details for all sub-accounts.
}
}

\examples{
\dontrun{
# Comprehensive example demonstrating key methods
main_async <- coro::async(function() {
  # Initialise the class
  sub_acc <- KucoinSubAccount$new()

  # Add a new sub-account
  new_sub <- await(sub_acc$add_subaccount(
    password = "SecurePass123",
    subName = "TradingSub1",
    access = "Spot",
    remarks = "Spot trading sub-account"
  ))
  print("New Sub-Account:"); print(new_sub)

  # Get sub-account summary
  summary <- await(sub_acc$get_subaccount_list_summary(page_size = 10, max_pages = 1))
  print("Sub-Account Summary:"); print(summary)

  # Get balance for the new sub-account (if created)
  if (nrow(summary) > 0) {
    sub_id <- summary[1, uid]
    balance <- await(sub_acc$get_subaccount_detail_balance(sub_id, includeBaseAmount = TRUE))
    print("Sub-Account Balance:"); print(balance)
  }

  # Get Spot sub-account balances
  spot_balances <- await(sub_acc$get_subaccount_spot_v2(page_size = 20, max_pages = 2))
  print("Spot Sub-Account Balances:"); print(spot_balances)
})
main_async()
while (!later::loop_empty()) later::run_now()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{keys}}{List containing KuCoin API keys (\code{api_key}, \code{api_secret}, \code{api_passphrase}, \code{key_version}).}

\item{\code{base_url}}{Character string representing the base URL for KuCoin API endpoints.
Initialise a New KucoinSubAccount Object
\subsection{Description}{

Initialises a \code{KucoinSubAccount} object with API credentials and a base URL for managing sub-accounts
asynchronously. All operations require authentication under the master account’s privileges.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Credential Assignment}: Sets \code{self$keys} to the provided or default API keys from \code{get_api_keys()}.
\item \strong{URL Assignment}: Sets \code{self$base_url} to the provided or default base URL from \code{get_base_url()}.
}
}

\subsection{API Endpoint}{

Not applicable (initialisation method).
}

\subsection{Usage}{

Creates an instance for sub-account management, enabling creation, summary retrieval, and balance queries.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/introduction#authentication}{KuCoin API Authentication}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Sub-Account Hub}: Use as the central object for sub-account operations in your bot, managing trading silos.
\item \strong{Secure Setup}: Provide explicit \code{keys} or use \code{get_api_keys()} from a secure vault for production-grade security.
\item \strong{Scalability}: Instantiate once and reuse across sessions, integrating with account and funding classes for comprehensive oversight.
}
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KucoinSubAccount-new}{\code{KucoinSubAccount$new()}}
\item \href{#method-KucoinSubAccount-add_subaccount}{\code{KucoinSubAccount$add_subaccount()}}
\item \href{#method-KucoinSubAccount-get_subaccount_list_summary}{\code{KucoinSubAccount$get_subaccount_list_summary()}}
\item \href{#method-KucoinSubAccount-get_subaccount_detail_balance}{\code{KucoinSubAccount$get_subaccount_detail_balance()}}
\item \href{#method-KucoinSubAccount-get_subaccount_spot_v2}{\code{KucoinSubAccount$get_subaccount_spot_v2()}}
\item \href{#method-KucoinSubAccount-clone}{\code{KucoinSubAccount$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-new"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$new(keys = get_api_keys(), base_url = get_base_url())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{List containing API configuration parameters from \code{get_api_keys()}, including:
\itemize{
\item \code{api_key}: Character string; your KuCoin API key.
\item \code{api_secret}: Character string; your KuCoin API secret.
\item \code{api_passphrase}: Character string; your KuCoin API passphrase.
\item \code{key_version}: Character string; API key version (e.g., \code{"2"}).
Defaults to \code{get_api_keys()}.
}}

\item{\code{base_url}}{Character string representing the base URL for the API. Defaults to \code{get_base_url()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the \code{KucoinSubAccount} class.
Add Sub-Account
\subsection{Description}{

Creates a new sub-account under the master account asynchronously via a POST request to \verb{/api/v2/sub/user/created}.
Calls \code{add_subaccount_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Validation}: Ensures parameters meet API constraints within the implementation.
\item \strong{Request Body}: Constructs JSON with \code{password}, \code{subName}, \code{access}, and optional \code{remarks}.
\item \strong{Authentication}: Generates headers with API keys.
\item \strong{API Call}: Sends POST request.
\item \strong{Response}: Returns sub-account details as a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{POST https://api.kucoin.com/api/v2/sub/user/created}
}

\subsection{Usage}{

Utilised to create sub-accounts with specific permissions for segregated trading or management purposes.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/add-subaccount}{KuCoin Add Sub-Account}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Account Segregation}: Create sub-accounts with \code{access = "Spot"} for isolated trading strategies, assigning unique \code{subName}s for tracking.
\item \strong{Security}: Use strong, unique \code{password}s generated programmatically, storing securely with \code{remarks} for audit trails.
\item \strong{Post-Creation}: Follow with \code{get_subaccount_list_summary} to verify creation and retrieve \code{uid} for further operations.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-add_subaccount"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-add_subaccount}{}}}
\subsection{Method \code{add_subaccount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$add_subaccount(password, subName, access, remarks = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{password}}{Character string; sub-account password (7-24 characters, must include letters and numbers). Required.}

\item{\code{subName}}{Character string; sub-account name (7-32 characters, must include a letter and number, no spaces). Required.}

\item{\code{access}}{Character string; permission type ("Spot", "Futures", "Margin"). Required.}

\item{\code{remarks}}{Character string; optional remarks (1-24 characters if provided).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{uid} (integer): Sub-account ID.
\item \code{subName} (character): Sub-account name.
\item \code{remarks} (character): Remarks (if provided).
\item \code{access} (character): Permission type.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"uid": 169579801, "subName": "TestSub123", "remarks": "Test", "access": "Spot"\}\}
}\if{html}{\out{</div>}}

Get Sub-Account List Summary
}

\subsection{Description}{

Retrieves a paginated summary of all sub-accounts asynchronously via a GET request to \verb{/api/v2/sub/user}.
Calls \code{get_subaccount_list_summary_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Pagination}: Fetches pages with \code{page_size} up to \code{max_pages}.
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Aggregates results into a \code{data.table} with datetime conversion.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/sub/user}
}

\subsection{Usage}{

Utilised to obtain an overview of all sub-accounts, including creation details and permissions.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-list-summary-info}{KuCoin Get Sub-Account List Summary Info}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Inventory Management}: Fetch periodically to maintain an updated sub-account list, using \code{uid} for balance queries.
\item \strong{Permission Audit}: Check \code{access} to ensure sub-accounts align with intended trading scopes, alerting on mismatches.
\item \strong{Creation Tracking}: Use \code{createdDatetime} to monitor sub-account age, flagging old accounts for review or cleanup.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_list_summary"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_list_summary}{}}}
\subsection{Method \code{get_subaccount_list_summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_list_summary(page_size = 100, max_pages = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{page_size}}{Integer; results per page (1-100, default 100).}

\item{\code{max_pages}}{Numeric; max pages to fetch (default \code{Inf}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{uid} (integer): Sub-account ID.
\item \code{subName} (character): Sub-account name.
\item \code{access} (character): Permission type.
\item \code{createdDatetime} (POSIXct): Creation time.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"items": [\{"uid": 169579801, "subName": "TestSub123", "access": "Spot", "createdAt": 1668562696000\}]\}\}
}\if{html}{\out{</div>}}

Get Sub-Account Detail Balance
}

\subsection{Description}{

Retrieves detailed balance information for a specific sub-account asynchronously via a GET request to \verb{/api/v1/sub-accounts/\{subUserId\}}.
Calls \code{get_subaccount_detail_balance_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Request}: Constructs authenticated GET request with \code{subUserId} and \code{includeBaseAmount}.
\item \strong{Response}: Aggregates balances across account types into a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v1/sub-accounts/\{subUserId\}?includeBaseAmount=\{includeBaseAmount\}}
}

\subsection{Usage}{

Utilised to monitor financial details for a specific sub-account across various account types.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-detail-balance}{KuCoin Get Sub-Account Detail Balance}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Fund Monitoring}: Check \code{available} per \code{accountType} to manage sub-account liquidity, triggering transfers if low.
\item \strong{Zero Balance Inclusion}: Set \code{includeBaseAmount = TRUE} to audit unused currencies, initializing them as needed.
\item \strong{Sub-Account Focus}: Use \code{subUserId} from \code{get_subaccount_list_summary} to drill down into critical accounts, logging balances.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_detail_balance"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_detail_balance}{}}}
\subsection{Method \code{get_subaccount_detail_balance()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_detail_balance(
  subUserId,
  includeBaseAmount = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{subUserId}}{Character string; sub-account user ID (e.g., from \code{get_subaccount_list_summary}). Required.}

\item{\code{includeBaseAmount}}{Logical; include zero-balance currencies (default \code{FALSE}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{subUserId} (character): Sub-account ID.
\item \code{subName} (character): Sub-account name.
\item \code{accountType} (character): Account type (e.g., "mainAccounts").
\item \code{currency} (character): Currency code.
\item \code{balance} (numeric): Total balance.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"subUserId": "123", "subName": "TestSub", "mainAccounts": [\{"currency": "USDT", "balance": "0.01"\}]\}\}
}\if{html}{\out{</div>}}

Get Spot Sub-Account List (V2)
}

\subsection{Description}{

Retrieves paginated Spot sub-account balance details for all sub-accounts asynchronously via a GET request to \verb{/api/v2/sub-accounts}.
Calls \code{get_subaccount_spot_v2_impl}.
}

\subsection{Workflow Overview}{
\enumerate{
\item \strong{Pagination}: Fetches pages with \code{page_size} up to \code{max_pages}.
\item \strong{Request}: Constructs authenticated GET request.
\item \strong{Response}: Aggregates balances across account types into a \code{data.table}.
}
}

\subsection{API Endpoint}{

\verb{GET https://api.kucoin.com/api/v2/sub-accounts}
}

\subsection{Usage}{

Utilised to obtain a comprehensive view of Spot sub-account balances across all sub-accounts.
}

\subsection{Official Documentation}{

\href{https://www.kucoin.com/docs-new/rest/account-info/sub-account/get-subaccount-list-spot-balance-v2}{KuCoin Get Sub-Account List - Spot Balance (V2)}
}

\subsection{Automated Trading Usage}{
\itemize{
\item \strong{Portfolio Overview}: Aggregate \code{balance} across \code{subUserId} and \code{accountType} to monitor total sub-account funds, reallocating as needed.
\item \strong{Risk Assessment}: Filter by \code{holds} to identify locked funds, adjusting trading limits per sub-account.
\item \strong{Batch Processing}: Use with small \code{page_size} for frequent updates, caching results to reduce API load.
}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-get_subaccount_spot_v2"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-get_subaccount_spot_v2}{}}}
\subsection{Method \code{get_subaccount_spot_v2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$get_subaccount_spot_v2(page_size = 100, max_pages = Inf)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{page_size}}{Integer; results per page (10-100, default 100).}

\item{\code{max_pages}}{Numeric; max pages to fetch (default \code{Inf}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Promise resolving to a \code{data.table} with:
\itemize{
\item \code{subUserId} (character): Sub-account ID.
\item \code{subName} (character): Sub-account name.
\item \code{accountType} (character): Account type (e.g., "tradeAccounts").
\item \code{currency} (character): Currency code.
\item \code{balance} (numeric): Total balance.
\item Full schema in implementation docs.
}
\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{"code": "200000", "data": \{"items": [\{"subUserId": "123", "subName": "TestSub", "tradeAccounts": [\{"currency": "USDT", "balance": "0.01"\}]\}]\}\}
}\if{html}{\out{</div>}}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KucoinSubAccount-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KucoinSubAccount-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KucoinSubAccount$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
