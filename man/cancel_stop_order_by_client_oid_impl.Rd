% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl_spottrading_orders_stop.R
\name{cancel_stop_order_by_client_oid_impl}
\alias{cancel_stop_order_by_client_oid_impl}
\title{Cancel Stop Order By ClientOid (Implementation)}
\usage{
cancel_stop_order_by_client_oid_impl(
  keys = get_api_keys(),
  base_url = get_base_url(),
  symbol = NULL,
  clientOid,
  .__coro_env_parent__ = <environment>
)
}
\arguments{
\item{keys}{List; API configuration parameters from \code{get_api_keys()}. Defaults to \code{get_api_keys()}.}

\item{base_url}{Character string; base URL for the KuCoin API. Defaults to \code{get_base_url()}.}

\item{symbol}{Character string; the trading pair symbol (e.g., "BTC-USDT"). Optional.}

\item{clientOid}{Character string; the unique client order ID to cancel (e.g., "689ff597f4414061aa819cc414836abd"). Required.}
}
\value{
Promise resolving to a \code{data.table} with one row containing:
\itemize{
\item \code{cancelledOrderId} (character): Unique ID of the cancelled order.
\item \code{clientOid} (character): Client-assigned order ID.
}
}
\description{
Cancels a stop order on the KuCoin Spot trading system using its client order ID (\code{clientOid}) asynchronously.
This function sends a cancellation request and returns a \code{data.table} with the cancelled order's details.
Note that this endpoint only initiates cancellation; the actual status must be verified via order status checks or WebSocket subscription.
}
\details{
\subsection{Description}{

This endpoint allows users to cancel a stop order identified by its \code{clientOid}, a user-assigned unique identifier.
Stop orders are conditional orders that trigger when the market price reaches a specified \code{stopPrice}. The function
sends a DELETE request to the KuCoin API and returns confirmation details upon successful initiation of the cancellation.
The maximum number of untriggered stop orders per trading pair is 20, and this endpoint helps manage that limit by
removing specific orders.
}

\subsection{Workflow}{
\enumerate{
\item \strong{Parameter Validation}: Ensures \code{clientOid} is a non-empty string and, if provided, \code{symbol} is a valid trading pair.
\item \strong{Request Construction}: Builds the endpoint URL with query parameters \code{symbol} (optional) and \code{clientOid} (required).
\item \strong{Authentication}: Generates private API headers using \code{build_headers()} with the DELETE method and endpoint.
\item \strong{API Request}: Sends a DELETE request to the KuCoin API with a 3-second timeout.
\item \strong{Response Processing}: Parses the response, validates success, and returns a \code{data.table} with \code{cancelledOrderId} and \code{clientOid}.
}
}

\subsection{API Details}{
\itemize{
\item \strong{Endpoint}: \verb{DELETE https://api.kucoin.com/api/v1/stop-order/cancelOrderByClientOid}
\item \strong{Domain}: Spot
\item \strong{API Channel}: Private
\item \strong{API Permission}: Spot
\item \strong{Rate Limit Pool}: Spot
\item \strong{Rate Limit Weight}: 5
\item \strong{SDK Service}: Spot
\item \strong{SDK Sub-Service}: Order
\item \strong{SDK Method Name}: cancelStopOrderByClientOid
\item \strong{Official Documentation}: \href{https://www.kucoin.com/docs-new/rest/spot-trading/orders/cancel-stop-order-by-clientoid}{KuCoin Cancel Stop Order By ClientOid}
}
}

\subsection{Request}{
\subsection{Query Parameters}{
\itemize{
\item \code{symbol}: String (optional) - The trading pair symbol (e.g., "BTC-USDT").
\item \code{clientOid}: String (required) - Unique client order ID created by the user (e.g., "689ff597f4414061aa819cc414836abd").
}
}

\subsection{Example Request}{

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{curl --location --request DELETE 'https://api.kucoin.com/api/v1/stop-order/cancelOrderByClientOid?symbol=BTC-USDT&clientOid=689ff597f4414061aa819cc414836abd'
}\if{html}{\out{</div>}}
}

}

\subsection{Response}{
\subsection{HTTP Code: 200}{
\itemize{
\item \strong{Content Type}: \code{application/json}
}
}

\subsection{Data Schema}{
\itemize{
\item \code{code}: String (required) - Response code ("200000" indicates success).
\item \code{data}: Object (required) - Contains:
\itemize{
\item \code{clientOid}: String (required) - Client-assigned order ID from the request.
\item \code{cancelledOrderId}: String (required) - Unique ID of the cancelled order assigned by the system.
}
}
}

\subsection{JSON Response Example}{

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "code": "200000",
  "data": \{
    "cancelledOrderId": "vs8hoo8ksc8mario0035a74n",
    "clientOid": "689ff597f4414061aa819cc414836abd"
  \}
\}
}\if{html}{\out{</div>}}
}

}
}
\examples{
\dontrun{
library(coro)
library(data.table)

main_async <- coro::async(function() {
  # Cancel a stop order by clientOid
  cancellation <- await(cancel_stop_order_by_client_oid_impl(
    symbol = "BTC-USDT",
    clientOid = "689ff597f4414061aa819cc414836abd"
  ))
  print(cancellation)
})

# Run the async function
main_async()
while (!later::loop_empty()) later::run_now()

# Expected Output:
#    cancelledOrderId         clientOid
# 1: vs8hoo8ksc8mario0035a74n 689ff597f4414061aa819cc414836abd
}
}
